// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kugou.proto

#ifndef PROTOBUF_INCLUDED_kugou_2eproto
#define PROTOBUF_INCLUDED_kugou_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_kugou_2eproto 

namespace protobuf_kugou_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[23];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_kugou_2eproto
namespace KuGouPack {
class AdditionalInfo;
class AdditionalInfoDefaultTypeInternal;
extern AdditionalInfoDefaultTypeInternal _AdditionalInfo_default_instance_;
class BossGroupVo;
class BossGroupVoDefaultTypeInternal;
extern BossGroupVoDefaultTypeInternal _BossGroupVo_default_instance_;
class BubbleVo;
class BubbleVoDefaultTypeInternal;
extern BubbleVoDefaultTypeInternal _BubbleVo_default_instance_;
class CeremonyVo;
class CeremonyVoDefaultTypeInternal;
extern CeremonyVoDefaultTypeInternal _CeremonyVo_default_instance_;
class ChatResponse;
class ChatResponseDefaultTypeInternal;
extern ChatResponseDefaultTypeInternal _ChatResponse_default_instance_;
class Complain;
class ComplainDefaultTypeInternal;
extern ComplainDefaultTypeInternal _Complain_default_instance_;
class ContentMessage;
class ContentMessageDefaultTypeInternal;
extern ContentMessageDefaultTypeInternal _ContentMessage_default_instance_;
class ErrorResponse;
class ErrorResponseDefaultTypeInternal;
extern ErrorResponseDefaultTypeInternal _ErrorResponse_default_instance_;
class Extension;
class ExtensionDefaultTypeInternal;
extern ExtensionDefaultTypeInternal _Extension_default_instance_;
class HonorMedalVo;
class HonorMedalVoDefaultTypeInternal;
extern HonorMedalVoDefaultTypeInternal _HonorMedalVo_default_instance_;
class LittleGuardVo;
class LittleGuardVoDefaultTypeInternal;
extern LittleGuardVoDefaultTypeInternal _LittleGuardVo_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Risk;
class RiskDefaultTypeInternal;
extern RiskDefaultTypeInternal _Risk_default_instance_;
class Sinfo;
class SinfoDefaultTypeInternal;
extern SinfoDefaultTypeInternal _Sinfo_default_instance_;
class StarFollowerVo;
class StarFollowerVoDefaultTypeInternal;
extern StarFollowerVoDefaultTypeInternal _StarFollowerVo_default_instance_;
class StliVo;
class StliVoDefaultTypeInternal;
extern StliVoDefaultTypeInternal _StliVo_default_instance_;
class UserGuardVo;
class UserGuardVoDefaultTypeInternal;
extern UserGuardVoDefaultTypeInternal _UserGuardVo_default_instance_;
class UsingMedalVo;
class UsingMedalVoDefaultTypeInternal;
extern UsingMedalVoDefaultTypeInternal _UsingMedalVo_default_instance_;
class UsingMountVo;
class UsingMountVoDefaultTypeInternal;
extern UsingMountVoDefaultTypeInternal _UsingMountVo_default_instance_;
class VipDataVo;
class VipDataVoDefaultTypeInternal;
extern VipDataVoDefaultTypeInternal _VipDataVo_default_instance_;
class WoreUserPlateVo;
class WoreUserPlateVoDefaultTypeInternal;
extern WoreUserPlateVoDefaultTypeInternal _WoreUserPlateVo_default_instance_;
}  // namespace KuGouPack
namespace google {
namespace protobuf {
template<> ::KuGouPack::AdditionalInfo* Arena::CreateMaybeMessage<::KuGouPack::AdditionalInfo>(Arena*);
template<> ::KuGouPack::BossGroupVo* Arena::CreateMaybeMessage<::KuGouPack::BossGroupVo>(Arena*);
template<> ::KuGouPack::BubbleVo* Arena::CreateMaybeMessage<::KuGouPack::BubbleVo>(Arena*);
template<> ::KuGouPack::CeremonyVo* Arena::CreateMaybeMessage<::KuGouPack::CeremonyVo>(Arena*);
template<> ::KuGouPack::ChatResponse* Arena::CreateMaybeMessage<::KuGouPack::ChatResponse>(Arena*);
template<> ::KuGouPack::Complain* Arena::CreateMaybeMessage<::KuGouPack::Complain>(Arena*);
template<> ::KuGouPack::ContentMessage* Arena::CreateMaybeMessage<::KuGouPack::ContentMessage>(Arena*);
template<> ::KuGouPack::ErrorResponse* Arena::CreateMaybeMessage<::KuGouPack::ErrorResponse>(Arena*);
template<> ::KuGouPack::Extension* Arena::CreateMaybeMessage<::KuGouPack::Extension>(Arena*);
template<> ::KuGouPack::HonorMedalVo* Arena::CreateMaybeMessage<::KuGouPack::HonorMedalVo>(Arena*);
template<> ::KuGouPack::LittleGuardVo* Arena::CreateMaybeMessage<::KuGouPack::LittleGuardVo>(Arena*);
template<> ::KuGouPack::LoginRequest* Arena::CreateMaybeMessage<::KuGouPack::LoginRequest>(Arena*);
template<> ::KuGouPack::LoginResponse* Arena::CreateMaybeMessage<::KuGouPack::LoginResponse>(Arena*);
template<> ::KuGouPack::Message* Arena::CreateMaybeMessage<::KuGouPack::Message>(Arena*);
template<> ::KuGouPack::Risk* Arena::CreateMaybeMessage<::KuGouPack::Risk>(Arena*);
template<> ::KuGouPack::Sinfo* Arena::CreateMaybeMessage<::KuGouPack::Sinfo>(Arena*);
template<> ::KuGouPack::StarFollowerVo* Arena::CreateMaybeMessage<::KuGouPack::StarFollowerVo>(Arena*);
template<> ::KuGouPack::StliVo* Arena::CreateMaybeMessage<::KuGouPack::StliVo>(Arena*);
template<> ::KuGouPack::UserGuardVo* Arena::CreateMaybeMessage<::KuGouPack::UserGuardVo>(Arena*);
template<> ::KuGouPack::UsingMedalVo* Arena::CreateMaybeMessage<::KuGouPack::UsingMedalVo>(Arena*);
template<> ::KuGouPack::UsingMountVo* Arena::CreateMaybeMessage<::KuGouPack::UsingMountVo>(Arena*);
template<> ::KuGouPack::VipDataVo* Arena::CreateMaybeMessage<::KuGouPack::VipDataVo>(Arena*);
template<> ::KuGouPack::WoreUserPlateVo* Arena::CreateMaybeMessage<::KuGouPack::WoreUserPlateVo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KuGouPack {

enum MCompression {
  M_NONE = 0,
  M_GZIP = 1,
  M_LZ4 = 2,
  M_SNAPPY = 3,
  M_ZSTD = 4
};
bool MCompression_IsValid(int value);
const MCompression MCompression_MIN = M_NONE;
const MCompression MCompression_MAX = M_ZSTD;
const int MCompression_ARRAYSIZE = MCompression_MAX + 1;

const ::google::protobuf::EnumDescriptor* MCompression_descriptor();
inline const ::std::string& MCompression_Name(MCompression value) {
  return ::google::protobuf::internal::NameOfEnum(
    MCompression_descriptor(), value);
}
inline bool MCompression_Parse(
    const ::std::string& name, MCompression* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MCompression>(
    MCompression_descriptor(), name, value);
}
enum MCodec {
  M_JSON = 0,
  M_PROTOBUF = 1
};
bool MCodec_IsValid(int value);
const MCodec MCodec_MIN = M_JSON;
const MCodec MCodec_MAX = M_PROTOBUF;
const int MCodec_ARRAYSIZE = MCodec_MAX + 1;

const ::google::protobuf::EnumDescriptor* MCodec_descriptor();
inline const ::std::string& MCodec_Name(MCodec value) {
  return ::google::protobuf::internal::NameOfEnum(
    MCodec_descriptor(), value);
}
inline bool MCodec_Parse(
    const ::std::string& name, MCodec* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MCodec>(
    MCodec_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const final {
    return CreateMaybeMessage<LoginRequest>(NULL);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 4;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string key = 5;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 5;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string version = 9;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 9;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string deviceNo = 10;
  bool has_deviceno() const;
  void clear_deviceno();
  static const int kDeviceNoFieldNumber = 10;
  const ::std::string& deviceno() const;
  void set_deviceno(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceno(::std::string&& value);
  #endif
  void set_deviceno(const char* value);
  void set_deviceno(const char* value, size_t size);
  ::std::string* mutable_deviceno();
  ::std::string* release_deviceno();
  void set_allocated_deviceno(::std::string* deviceno);

  // optional string imei = 11;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 11;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string soctoken = 15;
  bool has_soctoken() const;
  void clear_soctoken();
  static const int kSoctokenFieldNumber = 15;
  const ::std::string& soctoken() const;
  void set_soctoken(const ::std::string& value);
  #if LANG_CXX11
  void set_soctoken(::std::string&& value);
  #endif
  void set_soctoken(const char* value);
  void set_soctoken(const char* value, size_t size);
  ::std::string* mutable_soctoken();
  ::std::string* release_soctoken();
  void set_allocated_soctoken(::std::string* soctoken);

  // optional string offset = 16;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 16;
  const ::std::string& offset() const;
  void set_offset(const ::std::string& value);
  #if LANG_CXX11
  void set_offset(::std::string&& value);
  #endif
  void set_offset(const char* value);
  void set_offset(const char* value, size_t size);
  ::std::string* mutable_offset();
  ::std::string* release_offset();
  void set_allocated_offset(::std::string* offset);

  // optional string sid = 18;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 18;
  const ::std::string& sid() const;
  void set_sid(const ::std::string& value);
  #if LANG_CXX11
  void set_sid(::std::string&& value);
  #endif
  void set_sid(const char* value);
  void set_sid(const char* value, size_t size);
  ::std::string* mutable_sid();
  ::std::string* release_sid();
  void set_allocated_sid(::std::string* sid);

  // optional string uuid = 20;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 20;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional string systemVersion = 21;
  bool has_systemversion() const;
  void clear_systemversion();
  static const int kSystemVersionFieldNumber = 21;
  const ::std::string& systemversion() const;
  void set_systemversion(const ::std::string& value);
  #if LANG_CXX11
  void set_systemversion(::std::string&& value);
  #endif
  void set_systemversion(const char* value);
  void set_systemversion(const char* value, size_t size);
  ::std::string* mutable_systemversion();
  ::std::string* release_systemversion();
  void set_allocated_systemversion(::std::string* systemversion);

  // optional string entryid = 22;
  bool has_entryid() const;
  void clear_entryid();
  static const int kEntryidFieldNumber = 22;
  const ::std::string& entryid() const;
  void set_entryid(const ::std::string& value);
  #if LANG_CXX11
  void set_entryid(::std::string&& value);
  #endif
  void set_entryid(const char* value);
  void set_entryid(const char* value, size_t size);
  ::std::string* mutable_entryid();
  ::std::string* release_entryid();
  void set_allocated_entryid(::std::string* entryid);

  // optional string socsid = 23;
  bool has_socsid() const;
  void clear_socsid();
  static const int kSocsidFieldNumber = 23;
  const ::std::string& socsid() const;
  void set_socsid(const ::std::string& value);
  #if LANG_CXX11
  void set_socsid(::std::string&& value);
  #endif
  void set_socsid(const char* value);
  void set_socsid(const char* value, size_t size);
  ::std::string* mutable_socsid();
  ::std::string* release_socsid();
  void set_allocated_socsid(::std::string* socsid);

  // optional string deviceid = 24;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceidFieldNumber = 24;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // optional int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 roomid = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int64 kugouid = 3;
  bool has_kugouid() const;
  void clear_kugouid();
  static const int kKugouidFieldNumber = 3;
  ::google::protobuf::int64 kugouid() const;
  void set_kugouid(::google::protobuf::int64 value);

  // optional int32 appid = 6;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 6;
  ::google::protobuf::int32 appid() const;
  void set_appid(::google::protobuf::int32 value);

  // optional int32 platid = 7;
  bool has_platid() const;
  void clear_platid();
  static const int kPlatidFieldNumber = 7;
  ::google::protobuf::int32 platid() const;
  void set_platid(::google::protobuf::int32 value);

  // optional int32 subplatid = 8;
  bool has_subplatid() const;
  void clear_subplatid();
  static const int kSubplatidFieldNumber = 8;
  ::google::protobuf::int32 subplatid() const;
  void set_subplatid(::google::protobuf::int32 value);

  // optional int32 v = 12;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 12;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // optional int32 referer = 13;
  bool has_referer() const;
  void clear_referer();
  static const int kRefererFieldNumber = 13;
  ::google::protobuf::int32 referer() const;
  void set_referer(::google::protobuf::int32 value);

  // optional int32 clientid = 14;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientidFieldNumber = 14;
  ::google::protobuf::int32 clientid() const;
  void set_clientid(::google::protobuf::int32 value);

  // optional int32 appChannel = 17;
  bool has_appchannel() const;
  void clear_appchannel();
  static const int kAppChannelFieldNumber = 17;
  ::google::protobuf::int32 appchannel() const;
  void set_appchannel(::google::protobuf::int32 value);

  // optional int32 source = 19;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 19;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.LoginRequest)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_kugouid();
  void clear_has_kugouid();
  void set_has_token();
  void clear_has_token();
  void set_has_key();
  void clear_has_key();
  void set_has_appid();
  void clear_has_appid();
  void set_has_platid();
  void clear_has_platid();
  void set_has_subplatid();
  void clear_has_subplatid();
  void set_has_version();
  void clear_has_version();
  void set_has_deviceno();
  void clear_has_deviceno();
  void set_has_imei();
  void clear_has_imei();
  void set_has_v();
  void clear_has_v();
  void set_has_referer();
  void clear_has_referer();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_soctoken();
  void clear_has_soctoken();
  void set_has_offset();
  void clear_has_offset();
  void set_has_appchannel();
  void clear_has_appchannel();
  void set_has_sid();
  void clear_has_sid();
  void set_has_source();
  void clear_has_source();
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_systemversion();
  void clear_has_systemversion();
  void set_has_entryid();
  void clear_has_entryid();
  void set_has_socsid();
  void clear_has_socsid();
  void set_has_deviceid();
  void clear_has_deviceid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr deviceno_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr soctoken_;
  ::google::protobuf::internal::ArenaStringPtr offset_;
  ::google::protobuf::internal::ArenaStringPtr sid_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr systemversion_;
  ::google::protobuf::internal::ArenaStringPtr entryid_;
  ::google::protobuf::internal::ArenaStringPtr socsid_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int64 kugouid_;
  ::google::protobuf::int32 appid_;
  ::google::protobuf::int32 platid_;
  ::google::protobuf::int32 subplatid_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 referer_;
  ::google::protobuf::int32 clientid_;
  ::google::protobuf::int32 appchannel_;
  ::google::protobuf::int32 source_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(NULL);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string wellcomes = 8;
  bool has_wellcomes() const;
  void clear_wellcomes();
  static const int kWellcomesFieldNumber = 8;
  const ::std::string& wellcomes() const;
  void set_wellcomes(const ::std::string& value);
  #if LANG_CXX11
  void set_wellcomes(::std::string&& value);
  #endif
  void set_wellcomes(const char* value);
  void set_wellcomes(const char* value, size_t size);
  ::std::string* mutable_wellcomes();
  ::std::string* release_wellcomes();
  void set_allocated_wellcomes(::std::string* wellcomes);

  // optional string img = 9;
  bool has_img() const;
  void clear_img();
  static const int kImgFieldNumber = 9;
  const ::std::string& img() const;
  void set_img(const ::std::string& value);
  #if LANG_CXX11
  void set_img(::std::string&& value);
  #endif
  void set_img(const char* value);
  void set_img(const char* value, size_t size);
  ::std::string* mutable_img();
  ::std::string* release_img();
  void set_allocated_img(::std::string* img);

  // optional int64 userid = 3;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional int32 richlevel = 2;
  bool has_richlevel() const;
  void clear_richlevel();
  static const int kRichlevelFieldNumber = 2;
  ::google::protobuf::int32 richlevel() const;
  void set_richlevel(::google::protobuf::int32 value);

  // optional int32 fanstags = 5;
  bool has_fanstags() const;
  void clear_fanstags();
  static const int kFanstagsFieldNumber = 5;
  ::google::protobuf::int32 fanstags() const;
  void set_fanstags(::google::protobuf::int32 value);

  // optional int64 kugouid = 4;
  bool has_kugouid() const;
  void clear_kugouid();
  static const int kKugouidFieldNumber = 4;
  ::google::protobuf::int64 kugouid() const;
  void set_kugouid(::google::protobuf::int64 value);

  // optional int32 v = 6;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 6;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // optional int32 referer = 7;
  bool has_referer() const;
  void clear_referer();
  static const int kRefererFieldNumber = 7;
  ::google::protobuf::int32 referer() const;
  void set_referer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.LoginResponse)
 private:
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_richlevel();
  void clear_has_richlevel();
  void set_has_userid();
  void clear_has_userid();
  void set_has_kugouid();
  void clear_has_kugouid();
  void set_has_fanstags();
  void clear_has_fanstags();
  void set_has_v();
  void clear_has_v();
  void set_has_referer();
  void clear_has_referer();
  void set_has_wellcomes();
  void clear_has_wellcomes();
  void set_has_img();
  void clear_has_img();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr wellcomes_;
  ::google::protobuf::internal::ArenaStringPtr img_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 richlevel_;
  ::google::protobuf::int32 fanstags_;
  ::google::protobuf::int64 kugouid_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 referer_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.ErrorResponse) */ {
 public:
  ErrorResponse();
  virtual ~ErrorResponse();

  ErrorResponse(const ErrorResponse& from);

  inline ErrorResponse& operator=(const ErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorResponse(ErrorResponse&& from) noexcept
    : ErrorResponse() {
    *this = ::std::move(from);
  }

  inline ErrorResponse& operator=(ErrorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorResponse* internal_default_instance() {
    return reinterpret_cast<const ErrorResponse*>(
               &_ErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ErrorResponse* other);
  friend void swap(ErrorResponse& a, ErrorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorResponse* New() const final {
    return CreateMaybeMessage<ErrorResponse>(NULL);
  }

  ErrorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorResponse& from);
  void MergeFrom(const ErrorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 6;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 6;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string socsid = 7;
  bool has_socsid() const;
  void clear_socsid();
  static const int kSocsidFieldNumber = 7;
  const ::std::string& socsid() const;
  void set_socsid(const ::std::string& value);
  #if LANG_CXX11
  void set_socsid(::std::string&& value);
  #endif
  void set_socsid(const char* value);
  void set_socsid(const char* value, size_t size);
  ::std::string* mutable_socsid();
  ::std::string* release_socsid();
  void set_allocated_socsid(::std::string* socsid);

  // optional int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int64 seq = 3;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 3;
  ::google::protobuf::int64 seq() const;
  void set_seq(::google::protobuf::int64 value);

  // optional int32 status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 errorno = 5;
  bool has_errorno() const;
  void clear_errorno();
  static const int kErrornoFieldNumber = 5;
  ::google::protobuf::int32 errorno() const;
  void set_errorno(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.ErrorResponse)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_type();
  void clear_has_type();
  void set_has_seq();
  void clear_has_seq();
  void set_has_status();
  void clear_has_status();
  void set_has_errorno();
  void clear_has_errorno();
  void set_has_msg();
  void clear_has_msg();
  void set_has_socsid();
  void clear_has_socsid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr socsid_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 seq_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 errorno_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.ChatResponse) */ {
 public:
  ChatResponse();
  virtual ~ChatResponse();

  ChatResponse(const ChatResponse& from);

  inline ChatResponse& operator=(const ChatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatResponse(ChatResponse&& from) noexcept
    : ChatResponse() {
    *this = ::std::move(from);
  }

  inline ChatResponse& operator=(ChatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatResponse* internal_default_instance() {
    return reinterpret_cast<const ChatResponse*>(
               &_ChatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ChatResponse* other);
  friend void swap(ChatResponse& a, ChatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatResponse* New() const final {
    return CreateMaybeMessage<ChatResponse>(NULL);
  }

  ChatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChatResponse& from);
  void MergeFrom(const ChatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chatmsg = 1;
  bool has_chatmsg() const;
  void clear_chatmsg();
  static const int kChatmsgFieldNumber = 1;
  const ::std::string& chatmsg() const;
  void set_chatmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_chatmsg(::std::string&& value);
  #endif
  void set_chatmsg(const char* value);
  void set_chatmsg(const char* value, size_t size);
  ::std::string* mutable_chatmsg();
  ::std::string* release_chatmsg();
  void set_allocated_chatmsg(::std::string* chatmsg);

  // optional string sendername = 4;
  bool has_sendername() const;
  void clear_sendername();
  static const int kSendernameFieldNumber = 4;
  const ::std::string& sendername() const;
  void set_sendername(const ::std::string& value);
  #if LANG_CXX11
  void set_sendername(::std::string&& value);
  #endif
  void set_sendername(const char* value);
  void set_sendername(const char* value, size_t size);
  ::std::string* mutable_sendername();
  ::std::string* release_sendername();
  void set_allocated_sendername(::std::string* sendername);

  // optional string receivername = 8;
  bool has_receivername() const;
  void clear_receivername();
  static const int kReceivernameFieldNumber = 8;
  const ::std::string& receivername() const;
  void set_receivername(const ::std::string& value);
  #if LANG_CXX11
  void set_receivername(::std::string&& value);
  #endif
  void set_receivername(const char* value);
  void set_receivername(const char* value, size_t size);
  ::std::string* mutable_receivername();
  ::std::string* release_receivername();
  void set_allocated_receivername(::std::string* receivername);

  // optional string mac = 19;
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 19;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional .KuGouPack.AdditionalInfo additionalInfo = 11;
  bool has_additionalinfo() const;
  void clear_additionalinfo();
  static const int kAdditionalInfoFieldNumber = 11;
  private:
  const ::KuGouPack::AdditionalInfo& _internal_additionalinfo() const;
  public:
  const ::KuGouPack::AdditionalInfo& additionalinfo() const;
  ::KuGouPack::AdditionalInfo* release_additionalinfo();
  ::KuGouPack::AdditionalInfo* mutable_additionalinfo();
  void set_allocated_additionalinfo(::KuGouPack::AdditionalInfo* additionalinfo);

  // optional .KuGouPack.Complain complain = 20;
  bool has_complain() const;
  void clear_complain();
  static const int kComplainFieldNumber = 20;
  private:
  const ::KuGouPack::Complain& _internal_complain() const;
  public:
  const ::KuGouPack::Complain& complain() const;
  ::KuGouPack::Complain* release_complain();
  ::KuGouPack::Complain* mutable_complain();
  void set_allocated_complain(::KuGouPack::Complain* complain);

  // optional int64 senderid = 2;
  bool has_senderid() const;
  void clear_senderid();
  static const int kSenderidFieldNumber = 2;
  ::google::protobuf::int64 senderid() const;
  void set_senderid(::google::protobuf::int64 value);

  // optional int64 senderkugouid = 3;
  bool has_senderkugouid() const;
  void clear_senderkugouid();
  static const int kSenderkugouidFieldNumber = 3;
  ::google::protobuf::int64 senderkugouid() const;
  void set_senderkugouid(::google::protobuf::int64 value);

  // optional int64 receiverid = 6;
  bool has_receiverid() const;
  void clear_receiverid();
  static const int kReceiveridFieldNumber = 6;
  ::google::protobuf::int64 receiverid() const;
  void set_receiverid(::google::protobuf::int64 value);

  // optional int64 receiverkugouid = 7;
  bool has_receiverkugouid() const;
  void clear_receiverkugouid();
  static const int kReceiverkugouidFieldNumber = 7;
  ::google::protobuf::int64 receiverkugouid() const;
  void set_receiverkugouid(::google::protobuf::int64 value);

  // optional int32 senderrichlevel = 5;
  bool has_senderrichlevel() const;
  void clear_senderrichlevel();
  static const int kSenderrichlevelFieldNumber = 5;
  ::google::protobuf::int32 senderrichlevel() const;
  void set_senderrichlevel(::google::protobuf::int32 value);

  // optional int32 receiverrichlevel = 9;
  bool has_receiverrichlevel() const;
  void clear_receiverrichlevel();
  static const int kReceiverrichlevelFieldNumber = 9;
  ::google::protobuf::int32 receiverrichlevel() const;
  void set_receiverrichlevel(::google::protobuf::int32 value);

  // optional int32 issecrect = 10;
  bool has_issecrect() const;
  void clear_issecrect();
  static const int kIssecrectFieldNumber = 10;
  ::google::protobuf::int32 issecrect() const;
  void set_issecrect(::google::protobuf::int32 value);

  // optional int32 v = 12;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 12;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // optional int64 seq = 13;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 13;
  ::google::protobuf::int64 seq() const;
  void set_seq(::google::protobuf::int64 value);

  // optional int32 isa = 14;
  bool has_isa() const;
  void clear_isa();
  static const int kIsaFieldNumber = 14;
  ::google::protobuf::int32 isa() const;
  void set_isa(::google::protobuf::int32 value);

  // optional int32 rlight = 15;
  bool has_rlight() const;
  void clear_rlight();
  static const int kRlightFieldNumber = 15;
  ::google::protobuf::int32 rlight() const;
  void set_rlight(::google::protobuf::int32 value);

  // optional int32 rdiffExp = 16;
  bool has_rdiffexp() const;
  void clear_rdiffexp();
  static const int kRdiffExpFieldNumber = 16;
  ::google::protobuf::int32 rdiffexp() const;
  void set_rdiffexp(::google::protobuf::int32 value);

  // optional int32 rsvip = 17;
  bool has_rsvip() const;
  void clear_rsvip();
  static const int kRsvipFieldNumber = 17;
  ::google::protobuf::int32 rsvip() const;
  void set_rsvip(::google::protobuf::int32 value);

  // optional int32 rsvipl = 18;
  bool has_rsvipl() const;
  void clear_rsvipl();
  static const int kRsviplFieldNumber = 18;
  ::google::protobuf::int32 rsvipl() const;
  void set_rsvipl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.ChatResponse)
 private:
  void set_has_chatmsg();
  void clear_has_chatmsg();
  void set_has_senderid();
  void clear_has_senderid();
  void set_has_senderkugouid();
  void clear_has_senderkugouid();
  void set_has_sendername();
  void clear_has_sendername();
  void set_has_senderrichlevel();
  void clear_has_senderrichlevel();
  void set_has_receiverid();
  void clear_has_receiverid();
  void set_has_receiverkugouid();
  void clear_has_receiverkugouid();
  void set_has_receivername();
  void clear_has_receivername();
  void set_has_receiverrichlevel();
  void clear_has_receiverrichlevel();
  void set_has_issecrect();
  void clear_has_issecrect();
  void set_has_additionalinfo();
  void clear_has_additionalinfo();
  void set_has_v();
  void clear_has_v();
  void set_has_seq();
  void clear_has_seq();
  void set_has_isa();
  void clear_has_isa();
  void set_has_rlight();
  void clear_has_rlight();
  void set_has_rdiffexp();
  void clear_has_rdiffexp();
  void set_has_rsvip();
  void clear_has_rsvip();
  void set_has_rsvipl();
  void clear_has_rsvipl();
  void set_has_mac();
  void clear_has_mac();
  void set_has_complain();
  void clear_has_complain();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatmsg_;
  ::google::protobuf::internal::ArenaStringPtr sendername_;
  ::google::protobuf::internal::ArenaStringPtr receivername_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::KuGouPack::AdditionalInfo* additionalinfo_;
  ::KuGouPack::Complain* complain_;
  ::google::protobuf::int64 senderid_;
  ::google::protobuf::int64 senderkugouid_;
  ::google::protobuf::int64 receiverid_;
  ::google::protobuf::int64 receiverkugouid_;
  ::google::protobuf::int32 senderrichlevel_;
  ::google::protobuf::int32 receiverrichlevel_;
  ::google::protobuf::int32 issecrect_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int64 seq_;
  ::google::protobuf::int32 isa_;
  ::google::protobuf::int32 rlight_;
  ::google::protobuf::int32 rdiffexp_;
  ::google::protobuf::int32 rsvip_;
  ::google::protobuf::int32 rsvipl_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdditionalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.AdditionalInfo) */ {
 public:
  AdditionalInfo();
  virtual ~AdditionalInfo();

  AdditionalInfo(const AdditionalInfo& from);

  inline AdditionalInfo& operator=(const AdditionalInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdditionalInfo(AdditionalInfo&& from) noexcept
    : AdditionalInfo() {
    *this = ::std::move(from);
  }

  inline AdditionalInfo& operator=(AdditionalInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdditionalInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdditionalInfo* internal_default_instance() {
    return reinterpret_cast<const AdditionalInfo*>(
               &_AdditionalInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AdditionalInfo* other);
  friend void swap(AdditionalInfo& a, AdditionalInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdditionalInfo* New() const final {
    return CreateMaybeMessage<AdditionalInfo>(NULL);
  }

  AdditionalInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdditionalInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdditionalInfo& from);
  void MergeFrom(const AdditionalInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdditionalInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fanstags = 1;
  bool has_fanstags() const;
  void clear_fanstags();
  static const int kFanstagsFieldNumber = 1;
  ::google::protobuf::int32 fanstags() const;
  void set_fanstags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.AdditionalInfo)
 private:
  void set_has_fanstags();
  void clear_has_fanstags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 fanstags_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Complain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.Complain) */ {
 public:
  Complain();
  virtual ~Complain();

  Complain(const Complain& from);

  inline Complain& operator=(const Complain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Complain(Complain&& from) noexcept
    : Complain() {
    *this = ::std::move(from);
  }

  inline Complain& operator=(Complain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Complain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Complain* internal_default_instance() {
    return reinterpret_cast<const Complain*>(
               &_Complain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Complain* other);
  friend void swap(Complain& a, Complain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Complain* New() const final {
    return CreateMaybeMessage<Complain>(NULL);
  }

  Complain* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Complain>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Complain& from);
  void MergeFrom(const Complain& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Complain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:KuGouPack.Complain)
 private:
  void set_has_msg();
  void clear_has_msg();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string offset = 1;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  const ::std::string& offset() const;
  void set_offset(const ::std::string& value);
  #if LANG_CXX11
  void set_offset(::std::string&& value);
  #endif
  void set_offset(const char* value);
  void set_offset(const char* value, size_t size);
  ::std::string* mutable_offset();
  ::std::string* release_offset();
  void set_allocated_offset(::std::string* offset);

  // optional string msgId = 4;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  #if LANG_CXX11
  void set_msgid(::std::string&& value);
  #endif
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // optional bytes content = 7;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 7;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional int32 ack = 2;
  bool has_ack() const;
  void clear_ack();
  static const int kAckFieldNumber = 2;
  ::google::protobuf::int32 ack() const;
  void set_ack(::google::protobuf::int32 value);

  // optional int32 rpt = 3;
  bool has_rpt() const;
  void clear_rpt();
  static const int kRptFieldNumber = 3;
  ::google::protobuf::int32 rpt() const;
  void set_rpt(::google::protobuf::int32 value);

  // optional .KuGouPack.MCompression compression = 5;
  bool has_compression() const;
  void clear_compression();
  static const int kCompressionFieldNumber = 5;
  ::KuGouPack::MCompression compression() const;
  void set_compression(::KuGouPack::MCompression value);

  // optional .KuGouPack.MCodec codec = 6;
  bool has_codec() const;
  void clear_codec();
  static const int kCodecFieldNumber = 6;
  ::KuGouPack::MCodec codec() const;
  void set_codec(::KuGouPack::MCodec value);

  // @@protoc_insertion_point(class_scope:KuGouPack.Message)
 private:
  void set_has_offset();
  void clear_has_offset();
  void set_has_ack();
  void clear_has_ack();
  void set_has_rpt();
  void clear_has_rpt();
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_compression();
  void clear_has_compression();
  void set_has_codec();
  void clear_has_codec();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr offset_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 ack_;
  ::google::protobuf::int32 rpt_;
  int compression_;
  int codec_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContentMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.ContentMessage) */ {
 public:
  ContentMessage();
  virtual ~ContentMessage();

  ContentMessage(const ContentMessage& from);

  inline ContentMessage& operator=(const ContentMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContentMessage(ContentMessage&& from) noexcept
    : ContentMessage() {
    *this = ::std::move(from);
  }

  inline ContentMessage& operator=(ContentMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContentMessage* internal_default_instance() {
    return reinterpret_cast<const ContentMessage*>(
               &_ContentMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ContentMessage* other);
  friend void swap(ContentMessage& a, ContentMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContentMessage* New() const final {
    return CreateMaybeMessage<ContentMessage>(NULL);
  }

  ContentMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContentMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContentMessage& from);
  void MergeFrom(const ContentMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional bytes ext = 14;
  bool has_ext() const;
  void clear_ext();
  static const int kExtFieldNumber = 14;
  const ::std::string& ext() const;
  void set_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_ext(::std::string&& value);
  #endif
  void set_ext(const char* value);
  void set_ext(const void* value, size_t size);
  ::std::string* mutable_ext();
  ::std::string* release_ext();
  void set_allocated_ext(::std::string* ext);

  // optional .KuGouPack.Sinfo sinfo = 15;
  bool has_sinfo() const;
  void clear_sinfo();
  static const int kSinfoFieldNumber = 15;
  private:
  const ::KuGouPack::Sinfo& _internal_sinfo() const;
  public:
  const ::KuGouPack::Sinfo& sinfo() const;
  ::KuGouPack::Sinfo* release_sinfo();
  ::KuGouPack::Sinfo* mutable_sinfo();
  void set_allocated_sinfo(::KuGouPack::Sinfo* sinfo);

  // optional .KuGouPack.Risk risk = 17;
  bool has_risk() const;
  void clear_risk();
  static const int kRiskFieldNumber = 17;
  private:
  const ::KuGouPack::Risk& _internal_risk() const;
  public:
  const ::KuGouPack::Risk& risk() const;
  ::KuGouPack::Risk* release_risk();
  ::KuGouPack::Risk* mutable_risk();
  void set_allocated_risk(::KuGouPack::Risk* risk);

  // optional int32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 roomid = 3;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 3;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int64 receiverid = 4;
  bool has_receiverid() const;
  void clear_receiverid();
  static const int kReceiveridFieldNumber = 4;
  ::google::protobuf::int64 receiverid() const;
  void set_receiverid(::google::protobuf::int64 value);

  // optional int64 receiverkugouid = 5;
  bool has_receiverkugouid() const;
  void clear_receiverkugouid();
  static const int kReceiverkugouidFieldNumber = 5;
  ::google::protobuf::int64 receiverkugouid() const;
  void set_receiverkugouid(::google::protobuf::int64 value);

  // optional int64 senderid = 6;
  bool has_senderid() const;
  void clear_senderid();
  static const int kSenderidFieldNumber = 6;
  ::google::protobuf::int64 senderid() const;
  void set_senderid(::google::protobuf::int64 value);

  // optional int64 sendkugouid = 7;
  bool has_sendkugouid() const;
  void clear_sendkugouid();
  static const int kSendkugouidFieldNumber = 7;
  ::google::protobuf::int64 sendkugouid() const;
  void set_sendkugouid(::google::protobuf::int64 value);

  // optional int64 gid = 9;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 9;
  ::google::protobuf::int64 gid() const;
  void set_gid(::google::protobuf::int64 value);

  // optional int32 appId = 8;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 8;
  ::google::protobuf::int32 appid() const;
  void set_appid(::google::protobuf::int32 value);

  // optional int32 rpt = 10;
  bool has_rpt() const;
  void clear_rpt();
  static const int kRptFieldNumber = 10;
  ::google::protobuf::int32 rpt() const;
  void set_rpt(::google::protobuf::int32 value);

  // optional int64 time = 11;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 11;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int64 plev = 12;
  bool has_plev() const;
  void clear_plev();
  static const int kPlevFieldNumber = 12;
  ::google::protobuf::int64 plev() const;
  void set_plev(::google::protobuf::int64 value);

  // optional int64 pvalue = 13;
  bool has_pvalue() const;
  void clear_pvalue();
  static const int kPvalueFieldNumber = 13;
  ::google::protobuf::int64 pvalue() const;
  void set_pvalue(::google::protobuf::int64 value);

  // optional .KuGouPack.MCodec codec = 16;
  bool has_codec() const;
  void clear_codec();
  static const int kCodecFieldNumber = 16;
  ::KuGouPack::MCodec codec() const;
  void set_codec(::KuGouPack::MCodec value);

  // @@protoc_insertion_point(class_scope:KuGouPack.ContentMessage)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_content();
  void clear_has_content();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_receiverid();
  void clear_has_receiverid();
  void set_has_receiverkugouid();
  void clear_has_receiverkugouid();
  void set_has_senderid();
  void clear_has_senderid();
  void set_has_sendkugouid();
  void clear_has_sendkugouid();
  void set_has_appid();
  void clear_has_appid();
  void set_has_gid();
  void clear_has_gid();
  void set_has_rpt();
  void clear_has_rpt();
  void set_has_time();
  void clear_has_time();
  void set_has_plev();
  void clear_has_plev();
  void set_has_pvalue();
  void clear_has_pvalue();
  void set_has_ext();
  void clear_has_ext();
  void set_has_sinfo();
  void clear_has_sinfo();
  void set_has_codec();
  void clear_has_codec();
  void set_has_risk();
  void clear_has_risk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr ext_;
  ::KuGouPack::Sinfo* sinfo_;
  ::KuGouPack::Risk* risk_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int64 receiverid_;
  ::google::protobuf::int64 receiverkugouid_;
  ::google::protobuf::int64 senderid_;
  ::google::protobuf::int64 sendkugouid_;
  ::google::protobuf::int64 gid_;
  ::google::protobuf::int32 appid_;
  ::google::protobuf::int32 rpt_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 plev_;
  ::google::protobuf::int64 pvalue_;
  int codec_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Risk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.Risk) */ {
 public:
  Risk();
  virtual ~Risk();

  Risk(const Risk& from);

  inline Risk& operator=(const Risk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Risk(Risk&& from) noexcept
    : Risk() {
    *this = ::std::move(from);
  }

  inline Risk& operator=(Risk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Risk& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Risk* internal_default_instance() {
    return reinterpret_cast<const Risk*>(
               &_Risk_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Risk* other);
  friend void swap(Risk& a, Risk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Risk* New() const final {
    return CreateMaybeMessage<Risk>(NULL);
  }

  Risk* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Risk>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Risk& from);
  void MergeFrom(const Risk& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Risk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string m = 1;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 1;
  const ::std::string& m() const;
  void set_m(const ::std::string& value);
  #if LANG_CXX11
  void set_m(::std::string&& value);
  #endif
  void set_m(const char* value);
  void set_m(const char* value, size_t size);
  ::std::string* mutable_m();
  ::std::string* release_m();
  void set_allocated_m(::std::string* m);

  // optional string l = 2;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 2;
  const ::std::string& l() const;
  void set_l(const ::std::string& value);
  #if LANG_CXX11
  void set_l(::std::string&& value);
  #endif
  void set_l(const char* value);
  void set_l(const char* value, size_t size);
  ::std::string* mutable_l();
  ::std::string* release_l();
  void set_allocated_l(::std::string* l);

  // optional int32 t = 3;
  bool has_t() const;
  void clear_t();
  static const int kTFieldNumber = 3;
  ::google::protobuf::int32 t() const;
  void set_t(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.Risk)
 private:
  void set_has_m();
  void clear_has_m();
  void set_has_l();
  void clear_has_l();
  void set_has_t();
  void clear_has_t();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr m_;
  ::google::protobuf::internal::ArenaStringPtr l_;
  ::google::protobuf::int32 t_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Sinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.Sinfo) */ {
 public:
  Sinfo();
  virtual ~Sinfo();

  Sinfo(const Sinfo& from);

  inline Sinfo& operator=(const Sinfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Sinfo(Sinfo&& from) noexcept
    : Sinfo() {
    *this = ::std::move(from);
  }

  inline Sinfo& operator=(Sinfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sinfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Sinfo* internal_default_instance() {
    return reinterpret_cast<const Sinfo*>(
               &_Sinfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Sinfo* other);
  friend void swap(Sinfo& a, Sinfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Sinfo* New() const final {
    return CreateMaybeMessage<Sinfo>(NULL);
  }

  Sinfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Sinfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Sinfo& from);
  void MergeFrom(const Sinfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Sinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ckname = 6;
  bool has_ckname() const;
  void clear_ckname();
  static const int kCknameFieldNumber = 6;
  const ::std::string& ckname() const;
  void set_ckname(const ::std::string& value);
  #if LANG_CXX11
  void set_ckname(::std::string&& value);
  #endif
  void set_ckname(const char* value);
  void set_ckname(const char* value, size_t size);
  ::std::string* mutable_ckname();
  ::std::string* release_ckname();
  void set_allocated_ckname(::std::string* ckname);

  // optional string skname = 7;
  bool has_skname() const;
  void clear_skname();
  static const int kSknameFieldNumber = 7;
  const ::std::string& skname() const;
  void set_skname(const ::std::string& value);
  #if LANG_CXX11
  void set_skname(::std::string&& value);
  #endif
  void set_skname(const char* value);
  void set_skname(const char* value, size_t size);
  ::std::string* mutable_skname();
  ::std::string* release_skname();
  void set_allocated_skname(::std::string* skname);

  // optional string ckid = 8;
  bool has_ckid() const;
  void clear_ckid();
  static const int kCkidFieldNumber = 8;
  const ::std::string& ckid() const;
  void set_ckid(const ::std::string& value);
  #if LANG_CXX11
  void set_ckid(::std::string&& value);
  #endif
  void set_ckid(const char* value);
  void set_ckid(const char* value, size_t size);
  ::std::string* mutable_ckid();
  ::std::string* release_ckid();
  void set_allocated_ckid(::std::string* ckid);

  // optional string ckimg = 9;
  bool has_ckimg() const;
  void clear_ckimg();
  static const int kCkimgFieldNumber = 9;
  const ::std::string& ckimg() const;
  void set_ckimg(const ::std::string& value);
  #if LANG_CXX11
  void set_ckimg(::std::string&& value);
  #endif
  void set_ckimg(const char* value);
  void set_ckimg(const char* value, size_t size);
  ::std::string* mutable_ckimg();
  ::std::string* release_ckimg();
  void set_allocated_ckimg(::std::string* ckimg);

  // optional string logo = 10;
  bool has_logo() const;
  void clear_logo();
  static const int kLogoFieldNumber = 10;
  const ::std::string& logo() const;
  void set_logo(const ::std::string& value);
  #if LANG_CXX11
  void set_logo(::std::string&& value);
  #endif
  void set_logo(const char* value);
  void set_logo(const char* value, size_t size);
  ::std::string* mutable_logo();
  ::std::string* release_logo();
  void set_allocated_logo(::std::string* logo);

  // optional int32 light = 1;
  bool has_light() const;
  void clear_light();
  static const int kLightFieldNumber = 1;
  ::google::protobuf::int32 light() const;
  void set_light(::google::protobuf::int32 value);

  // optional int32 de = 2;
  bool has_de() const;
  void clear_de();
  static const int kDeFieldNumber = 2;
  ::google::protobuf::int32 de() const;
  void set_de(::google::protobuf::int32 value);

  // optional int32 svip = 3;
  bool has_svip() const;
  void clear_svip();
  static const int kSvipFieldNumber = 3;
  ::google::protobuf::int32 svip() const;
  void set_svip(::google::protobuf::int32 value);

  // optional int32 svipl = 4;
  bool has_svipl() const;
  void clear_svipl();
  static const int kSviplFieldNumber = 4;
  ::google::protobuf::int32 svipl() const;
  void set_svipl(::google::protobuf::int32 value);

  // optional int32 ck = 5;
  bool has_ck() const;
  void clear_ck();
  static const int kCkFieldNumber = 5;
  ::google::protobuf::int32 ck() const;
  void set_ck(::google::protobuf::int32 value);

  // optional int32 sex = 11;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 11;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 bt = 12;
  bool has_bt() const;
  void clear_bt();
  static const int kBtFieldNumber = 12;
  ::google::protobuf::int32 bt() const;
  void set_bt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.Sinfo)
 private:
  void set_has_light();
  void clear_has_light();
  void set_has_de();
  void clear_has_de();
  void set_has_svip();
  void clear_has_svip();
  void set_has_svipl();
  void clear_has_svipl();
  void set_has_ck();
  void clear_has_ck();
  void set_has_ckname();
  void clear_has_ckname();
  void set_has_skname();
  void clear_has_skname();
  void set_has_ckid();
  void clear_has_ckid();
  void set_has_ckimg();
  void clear_has_ckimg();
  void set_has_logo();
  void clear_has_logo();
  void set_has_sex();
  void clear_has_sex();
  void set_has_bt();
  void clear_has_bt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ckname_;
  ::google::protobuf::internal::ArenaStringPtr skname_;
  ::google::protobuf::internal::ArenaStringPtr ckid_;
  ::google::protobuf::internal::ArenaStringPtr ckimg_;
  ::google::protobuf::internal::ArenaStringPtr logo_;
  ::google::protobuf::int32 light_;
  ::google::protobuf::int32 de_;
  ::google::protobuf::int32 svip_;
  ::google::protobuf::int32 svipl_;
  ::google::protobuf::int32 ck_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 bt_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Extension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.Extension) */ {
 public:
  Extension();
  virtual ~Extension();

  Extension(const Extension& from);

  inline Extension& operator=(const Extension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Extension(Extension&& from) noexcept
    : Extension() {
    *this = ::std::move(from);
  }

  inline Extension& operator=(Extension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Extension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Extension* internal_default_instance() {
    return reinterpret_cast<const Extension*>(
               &_Extension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Extension* other);
  friend void swap(Extension& a, Extension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Extension* New() const final {
    return CreateMaybeMessage<Extension>(NULL);
  }

  Extension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Extension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Extension& from);
  void MergeFrom(const Extension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Extension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string plateName = 11;
  bool has_platename() const;
  void clear_platename();
  static const int kPlateNameFieldNumber = 11;
  const ::std::string& platename() const;
  void set_platename(const ::std::string& value);
  #if LANG_CXX11
  void set_platename(::std::string&& value);
  #endif
  void set_platename(const char* value);
  void set_platename(const char* value, size_t size);
  ::std::string* mutable_platename();
  ::std::string* release_platename();
  void set_allocated_platename(::std::string* platename);

  // optional string exMemo = 14;
  bool has_exmemo() const;
  void clear_exmemo();
  static const int kExMemoFieldNumber = 14;
  const ::std::string& exmemo() const;
  void set_exmemo(const ::std::string& value);
  #if LANG_CXX11
  void set_exmemo(::std::string&& value);
  #endif
  void set_exmemo(const char* value);
  void set_exmemo(const char* value, size_t size);
  ::std::string* mutable_exmemo();
  ::std::string* release_exmemo();
  void set_allocated_exmemo(::std::string* exmemo);

  // optional string token = 20;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 20;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string ar = 25;
  bool has_ar() const;
  void clear_ar();
  static const int kArFieldNumber = 25;
  const ::std::string& ar() const;
  void set_ar(const ::std::string& value);
  #if LANG_CXX11
  void set_ar(::std::string&& value);
  #endif
  void set_ar(const char* value);
  void set_ar(const char* value, size_t size);
  ::std::string* mutable_ar();
  ::std::string* release_ar();
  void set_allocated_ar(::std::string* ar);

  // optional .KuGouPack.StliVo stli = 3;
  bool has_stli() const;
  void clear_stli();
  static const int kStliFieldNumber = 3;
  private:
  const ::KuGouPack::StliVo& _internal_stli() const;
  public:
  const ::KuGouPack::StliVo& stli() const;
  ::KuGouPack::StliVo* release_stli();
  ::KuGouPack::StliVo* mutable_stli();
  void set_allocated_stli(::KuGouPack::StliVo* stli);

  // optional .KuGouPack.VipDataVo vipData = 4;
  bool has_vipdata() const;
  void clear_vipdata();
  static const int kVipDataFieldNumber = 4;
  private:
  const ::KuGouPack::VipDataVo& _internal_vipdata() const;
  public:
  const ::KuGouPack::VipDataVo& vipdata() const;
  ::KuGouPack::VipDataVo* release_vipdata();
  ::KuGouPack::VipDataVo* mutable_vipdata();
  void set_allocated_vipdata(::KuGouPack::VipDataVo* vipdata);

  // optional .KuGouPack.UsingMountVo usingMount = 5;
  bool has_usingmount() const;
  void clear_usingmount();
  static const int kUsingMountFieldNumber = 5;
  private:
  const ::KuGouPack::UsingMountVo& _internal_usingmount() const;
  public:
  const ::KuGouPack::UsingMountVo& usingmount() const;
  ::KuGouPack::UsingMountVo* release_usingmount();
  ::KuGouPack::UsingMountVo* mutable_usingmount();
  void set_allocated_usingmount(::KuGouPack::UsingMountVo* usingmount);

  // optional .KuGouPack.UsingMedalVo usingMedal = 6;
  bool has_usingmedal() const;
  void clear_usingmedal();
  static const int kUsingMedalFieldNumber = 6;
  private:
  const ::KuGouPack::UsingMedalVo& _internal_usingmedal() const;
  public:
  const ::KuGouPack::UsingMedalVo& usingmedal() const;
  ::KuGouPack::UsingMedalVo* release_usingmedal();
  ::KuGouPack::UsingMedalVo* mutable_usingmedal();
  void set_allocated_usingmedal(::KuGouPack::UsingMedalVo* usingmedal);

  // optional .KuGouPack.HonorMedalVo honorMedal = 7;
  bool has_honormedal() const;
  void clear_honormedal();
  static const int kHonorMedalFieldNumber = 7;
  private:
  const ::KuGouPack::HonorMedalVo& _internal_honormedal() const;
  public:
  const ::KuGouPack::HonorMedalVo& honormedal() const;
  ::KuGouPack::HonorMedalVo* release_honormedal();
  ::KuGouPack::HonorMedalVo* mutable_honormedal();
  void set_allocated_honormedal(::KuGouPack::HonorMedalVo* honormedal);

  // optional .KuGouPack.UserGuardVo userGuard = 8;
  bool has_userguard() const;
  void clear_userguard();
  static const int kUserGuardFieldNumber = 8;
  private:
  const ::KuGouPack::UserGuardVo& _internal_userguard() const;
  public:
  const ::KuGouPack::UserGuardVo& userguard() const;
  ::KuGouPack::UserGuardVo* release_userguard();
  ::KuGouPack::UserGuardVo* mutable_userguard();
  void set_allocated_userguard(::KuGouPack::UserGuardVo* userguard);

  // optional .KuGouPack.LittleGuardVo littleGuard = 9;
  bool has_littleguard() const;
  void clear_littleguard();
  static const int kLittleGuardFieldNumber = 9;
  private:
  const ::KuGouPack::LittleGuardVo& _internal_littleguard() const;
  public:
  const ::KuGouPack::LittleGuardVo& littleguard() const;
  ::KuGouPack::LittleGuardVo* release_littleguard();
  ::KuGouPack::LittleGuardVo* mutable_littleguard();
  void set_allocated_littleguard(::KuGouPack::LittleGuardVo* littleguard);

  // optional .KuGouPack.WoreUserPlateVo defaultPlate = 10;
  bool has_defaultplate() const;
  void clear_defaultplate();
  static const int kDefaultPlateFieldNumber = 10;
  private:
  const ::KuGouPack::WoreUserPlateVo& _internal_defaultplate() const;
  public:
  const ::KuGouPack::WoreUserPlateVo& defaultplate() const;
  ::KuGouPack::WoreUserPlateVo* release_defaultplate();
  ::KuGouPack::WoreUserPlateVo* mutable_defaultplate();
  void set_allocated_defaultplate(::KuGouPack::WoreUserPlateVo* defaultplate);

  // optional .KuGouPack.BubbleVo bubble = 17;
  bool has_bubble() const;
  void clear_bubble();
  static const int kBubbleFieldNumber = 17;
  private:
  const ::KuGouPack::BubbleVo& _internal_bubble() const;
  public:
  const ::KuGouPack::BubbleVo& bubble() const;
  ::KuGouPack::BubbleVo* release_bubble();
  ::KuGouPack::BubbleVo* mutable_bubble();
  void set_allocated_bubble(::KuGouPack::BubbleVo* bubble);

  // optional .KuGouPack.StarFollowerVo starFollower = 22;
  bool has_starfollower() const;
  void clear_starfollower();
  static const int kStarFollowerFieldNumber = 22;
  private:
  const ::KuGouPack::StarFollowerVo& _internal_starfollower() const;
  public:
  const ::KuGouPack::StarFollowerVo& starfollower() const;
  ::KuGouPack::StarFollowerVo* release_starfollower();
  ::KuGouPack::StarFollowerVo* mutable_starfollower();
  void set_allocated_starfollower(::KuGouPack::StarFollowerVo* starfollower);

  // optional .KuGouPack.BossGroupVo bossGroup = 30;
  bool has_bossgroup() const;
  void clear_bossgroup();
  static const int kBossGroupFieldNumber = 30;
  private:
  const ::KuGouPack::BossGroupVo& _internal_bossgroup() const;
  public:
  const ::KuGouPack::BossGroupVo& bossgroup() const;
  ::KuGouPack::BossGroupVo* release_bossgroup();
  ::KuGouPack::BossGroupVo* mutable_bossgroup();
  void set_allocated_bossgroup(::KuGouPack::BossGroupVo* bossgroup);

  // optional .KuGouPack.CeremonyVo ceremony = 31;
  bool has_ceremony() const;
  void clear_ceremony();
  static const int kCeremonyFieldNumber = 31;
  private:
  const ::KuGouPack::CeremonyVo& _internal_ceremony() const;
  public:
  const ::KuGouPack::CeremonyVo& ceremony() const;
  ::KuGouPack::CeremonyVo* release_ceremony();
  ::KuGouPack::CeremonyVo* mutable_ceremony();
  void set_allocated_ceremony(::KuGouPack::CeremonyVo* ceremony);

  // optional int32 ui = 1;
  bool has_ui() const;
  void clear_ui();
  static const int kUiFieldNumber = 1;
  ::google::protobuf::int32 ui() const;
  void set_ui(::google::protobuf::int32 value);

  // optional int32 isSpRoom = 2;
  bool has_issproom() const;
  void clear_issproom();
  static const int kIsSpRoomFieldNumber = 2;
  ::google::protobuf::int32 issproom() const;
  void set_issproom(::google::protobuf::int32 value);

  // optional int32 starCard = 12;
  bool has_starcard() const;
  void clear_starcard();
  static const int kStarCardFieldNumber = 12;
  ::google::protobuf::int32 starcard() const;
  void set_starcard(::google::protobuf::int32 value);

  // optional int32 external = 13;
  bool has_external() const;
  void clear_external();
  static const int kExternalFieldNumber = 13;
  ::google::protobuf::int32 external() const;
  void set_external(::google::protobuf::int32 value);

  // optional bool p = 15;
  bool has_p() const;
  void clear_p();
  static const int kPFieldNumber = 15;
  bool p() const;
  void set_p(bool value);

  // optional int32 worship = 16;
  bool has_worship() const;
  void clear_worship();
  static const int kWorshipFieldNumber = 16;
  ::google::protobuf::int32 worship() const;
  void set_worship(::google::protobuf::int32 value);

  // optional int32 z = 18;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 18;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // optional int32 isGoldFans = 19;
  bool has_isgoldfans() const;
  void clear_isgoldfans();
  static const int kIsGoldFansFieldNumber = 19;
  ::google::protobuf::int32 isgoldfans() const;
  void set_isgoldfans(::google::protobuf::int32 value);

  // optional int64 kugouId = 21;
  bool has_kugouid() const;
  void clear_kugouid();
  static const int kKugouIdFieldNumber = 21;
  ::google::protobuf::int64 kugouid() const;
  void set_kugouid(::google::protobuf::int64 value);

  // optional int32 v_tme = 23;
  bool has_v_tme() const;
  void clear_v_tme();
  static const int kVTmeFieldNumber = 23;
  ::google::protobuf::int32 v_tme() const;
  void set_v_tme(::google::protobuf::int32 value);

  // optional int32 v_kg = 24;
  bool has_v_kg() const;
  void clear_v_kg();
  static const int kVKgFieldNumber = 24;
  ::google::protobuf::int32 v_kg() const;
  void set_v_kg(::google::protobuf::int32 value);

  // optional int32 isAndroid = 26;
  bool has_isandroid() const;
  void clear_isandroid();
  static const int kIsAndroidFieldNumber = 26;
  ::google::protobuf::int32 isandroid() const;
  void set_isandroid(::google::protobuf::int32 value);

  // optional int32 clientPlat = 27;
  bool has_clientplat() const;
  void clear_clientplat();
  static const int kClientPlatFieldNumber = 27;
  ::google::protobuf::int32 clientplat() const;
  void set_clientplat(::google::protobuf::int32 value);

  // optional int32 blackCard = 28;
  bool has_blackcard() const;
  void clear_blackcard();
  static const int kBlackCardFieldNumber = 28;
  ::google::protobuf::int32 blackcard() const;
  void set_blackcard(::google::protobuf::int32 value);

  // optional int32 v_l = 29;
  bool has_v_l() const;
  void clear_v_l();
  static const int kVLFieldNumber = 29;
  ::google::protobuf::int32 v_l() const;
  void set_v_l(::google::protobuf::int32 value);

  // optional int32 referer = 32;
  bool has_referer() const;
  void clear_referer();
  static const int kRefererFieldNumber = 32;
  ::google::protobuf::int32 referer() const;
  void set_referer(::google::protobuf::int32 value);

  // optional int32 isNew = 33;
  bool has_isnew() const;
  void clear_isnew();
  static const int kIsNewFieldNumber = 33;
  ::google::protobuf::int32 isnew() const;
  void set_isnew(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.Extension)
 private:
  void set_has_ui();
  void clear_has_ui();
  void set_has_issproom();
  void clear_has_issproom();
  void set_has_stli();
  void clear_has_stli();
  void set_has_vipdata();
  void clear_has_vipdata();
  void set_has_usingmount();
  void clear_has_usingmount();
  void set_has_usingmedal();
  void clear_has_usingmedal();
  void set_has_honormedal();
  void clear_has_honormedal();
  void set_has_userguard();
  void clear_has_userguard();
  void set_has_littleguard();
  void clear_has_littleguard();
  void set_has_defaultplate();
  void clear_has_defaultplate();
  void set_has_platename();
  void clear_has_platename();
  void set_has_starcard();
  void clear_has_starcard();
  void set_has_external();
  void clear_has_external();
  void set_has_exmemo();
  void clear_has_exmemo();
  void set_has_p();
  void clear_has_p();
  void set_has_worship();
  void clear_has_worship();
  void set_has_bubble();
  void clear_has_bubble();
  void set_has_z();
  void clear_has_z();
  void set_has_isgoldfans();
  void clear_has_isgoldfans();
  void set_has_token();
  void clear_has_token();
  void set_has_kugouid();
  void clear_has_kugouid();
  void set_has_starfollower();
  void clear_has_starfollower();
  void set_has_v_tme();
  void clear_has_v_tme();
  void set_has_v_kg();
  void clear_has_v_kg();
  void set_has_ar();
  void clear_has_ar();
  void set_has_isandroid();
  void clear_has_isandroid();
  void set_has_clientplat();
  void clear_has_clientplat();
  void set_has_blackcard();
  void clear_has_blackcard();
  void set_has_v_l();
  void clear_has_v_l();
  void set_has_bossgroup();
  void clear_has_bossgroup();
  void set_has_ceremony();
  void clear_has_ceremony();
  void set_has_referer();
  void clear_has_referer();
  void set_has_isnew();
  void clear_has_isnew();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::internal::ArenaStringPtr platename_;
  ::google::protobuf::internal::ArenaStringPtr exmemo_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr ar_;
  ::KuGouPack::StliVo* stli_;
  ::KuGouPack::VipDataVo* vipdata_;
  ::KuGouPack::UsingMountVo* usingmount_;
  ::KuGouPack::UsingMedalVo* usingmedal_;
  ::KuGouPack::HonorMedalVo* honormedal_;
  ::KuGouPack::UserGuardVo* userguard_;
  ::KuGouPack::LittleGuardVo* littleguard_;
  ::KuGouPack::WoreUserPlateVo* defaultplate_;
  ::KuGouPack::BubbleVo* bubble_;
  ::KuGouPack::StarFollowerVo* starfollower_;
  ::KuGouPack::BossGroupVo* bossgroup_;
  ::KuGouPack::CeremonyVo* ceremony_;
  ::google::protobuf::int32 ui_;
  ::google::protobuf::int32 issproom_;
  ::google::protobuf::int32 starcard_;
  ::google::protobuf::int32 external_;
  bool p_;
  ::google::protobuf::int32 worship_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 isgoldfans_;
  ::google::protobuf::int64 kugouid_;
  ::google::protobuf::int32 v_tme_;
  ::google::protobuf::int32 v_kg_;
  ::google::protobuf::int32 isandroid_;
  ::google::protobuf::int32 clientplat_;
  ::google::protobuf::int32 blackcard_;
  ::google::protobuf::int32 v_l_;
  ::google::protobuf::int32 referer_;
  ::google::protobuf::int32 isnew_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StliVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.StliVo) */ {
 public:
  StliVo();
  virtual ~StliVo();

  StliVo(const StliVo& from);

  inline StliVo& operator=(const StliVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StliVo(StliVo&& from) noexcept
    : StliVo() {
    *this = ::std::move(from);
  }

  inline StliVo& operator=(StliVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StliVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StliVo* internal_default_instance() {
    return reinterpret_cast<const StliVo*>(
               &_StliVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(StliVo* other);
  friend void swap(StliVo& a, StliVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StliVo* New() const final {
    return CreateMaybeMessage<StliVo>(NULL);
  }

  StliVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StliVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StliVo& from);
  void MergeFrom(const StliVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StliVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 st = 1;
  bool has_st() const;
  void clear_st();
  static const int kStFieldNumber = 1;
  ::google::protobuf::int32 st() const;
  void set_st(::google::protobuf::int32 value);

  // optional int32 sl = 2;
  bool has_sl() const;
  void clear_sl();
  static const int kSlFieldNumber = 2;
  ::google::protobuf::int32 sl() const;
  void set_sl(::google::protobuf::int32 value);

  // optional int32 isAdmin = 3;
  bool has_isadmin() const;
  void clear_isadmin();
  static const int kIsAdminFieldNumber = 3;
  ::google::protobuf::int32 isadmin() const;
  void set_isadmin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.StliVo)
 private:
  void set_has_st();
  void clear_has_st();
  void set_has_sl();
  void clear_has_sl();
  void set_has_isadmin();
  void clear_has_isadmin();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 st_;
  ::google::protobuf::int32 sl_;
  ::google::protobuf::int32 isadmin_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VipDataVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.VipDataVo) */ {
 public:
  VipDataVo();
  virtual ~VipDataVo();

  VipDataVo(const VipDataVo& from);

  inline VipDataVo& operator=(const VipDataVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VipDataVo(VipDataVo&& from) noexcept
    : VipDataVo() {
    *this = ::std::move(from);
  }

  inline VipDataVo& operator=(VipDataVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipDataVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VipDataVo* internal_default_instance() {
    return reinterpret_cast<const VipDataVo*>(
               &_VipDataVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(VipDataVo* other);
  friend void swap(VipDataVo& a, VipDataVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VipDataVo* New() const final {
    return CreateMaybeMessage<VipDataVo>(NULL);
  }

  VipDataVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VipDataVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VipDataVo& from);
  void MergeFrom(const VipDataVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VipDataVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string c = 2;
  bool has_c() const;
  void clear_c();
  static const int kCFieldNumber = 2;
  const ::std::string& c() const;
  void set_c(const ::std::string& value);
  #if LANG_CXX11
  void set_c(::std::string&& value);
  #endif
  void set_c(const char* value);
  void set_c(const char* value, size_t size);
  ::std::string* mutable_c();
  ::std::string* release_c();
  void set_allocated_c(::std::string* c);

  // optional int32 v = 1;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 1;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // optional int32 vl = 3;
  bool has_vl() const;
  void clear_vl();
  static const int kVlFieldNumber = 3;
  ::google::protobuf::int32 vl() const;
  void set_vl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.VipDataVo)
 private:
  void set_has_v();
  void clear_has_v();
  void set_has_c();
  void clear_has_c();
  void set_has_vl();
  void clear_has_vl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr c_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 vl_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsingMountVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.UsingMountVo) */ {
 public:
  UsingMountVo();
  virtual ~UsingMountVo();

  UsingMountVo(const UsingMountVo& from);

  inline UsingMountVo& operator=(const UsingMountVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsingMountVo(UsingMountVo&& from) noexcept
    : UsingMountVo() {
    *this = ::std::move(from);
  }

  inline UsingMountVo& operator=(UsingMountVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsingMountVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsingMountVo* internal_default_instance() {
    return reinterpret_cast<const UsingMountVo*>(
               &_UsingMountVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(UsingMountVo* other);
  friend void swap(UsingMountVo& a, UsingMountVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsingMountVo* New() const final {
    return CreateMaybeMessage<UsingMountVo>(NULL);
  }

  UsingMountVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsingMountVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsingMountVo& from);
  void MergeFrom(const UsingMountVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsingMountVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string n = 2;
  bool has_n() const;
  void clear_n();
  static const int kNFieldNumber = 2;
  const ::std::string& n() const;
  void set_n(const ::std::string& value);
  #if LANG_CXX11
  void set_n(::std::string&& value);
  #endif
  void set_n(const char* value);
  void set_n(const char* value, size_t size);
  ::std::string* mutable_n();
  ::std::string* release_n();
  void set_allocated_n(::std::string* n);

  // optional string swf = 3;
  bool has_swf() const;
  void clear_swf();
  static const int kSwfFieldNumber = 3;
  const ::std::string& swf() const;
  void set_swf(const ::std::string& value);
  #if LANG_CXX11
  void set_swf(::std::string&& value);
  #endif
  void set_swf(const char* value);
  void set_swf(const char* value, size_t size);
  ::std::string* mutable_swf();
  ::std::string* release_swf();
  void set_allocated_swf(::std::string* swf);

  // optional string bi = 4;
  bool has_bi() const;
  void clear_bi();
  static const int kBiFieldNumber = 4;
  const ::std::string& bi() const;
  void set_bi(const ::std::string& value);
  #if LANG_CXX11
  void set_bi(::std::string&& value);
  #endif
  void set_bi(const char* value);
  void set_bi(const char* value, size_t size);
  ::std::string* mutable_bi();
  ::std::string* release_bi();
  void set_allocated_bi(::std::string* bi);

  // optional string si = 5;
  bool has_si() const;
  void clear_si();
  static const int kSiFieldNumber = 5;
  const ::std::string& si() const;
  void set_si(const ::std::string& value);
  #if LANG_CXX11
  void set_si(::std::string&& value);
  #endif
  void set_si(const char* value);
  void set_si(const char* value, size_t size);
  ::std::string* mutable_si();
  ::std::string* release_si();
  void set_allocated_si(::std::string* si);

  // optional string p = 6;
  bool has_p() const;
  void clear_p();
  static const int kPFieldNumber = 6;
  const ::std::string& p() const;
  void set_p(const ::std::string& value);
  #if LANG_CXX11
  void set_p(::std::string&& value);
  #endif
  void set_p(const char* value);
  void set_p(const char* value, size_t size);
  ::std::string* mutable_p();
  ::std::string* release_p();
  void set_allocated_p(::std::string* p);

  // optional int32 s = 7;
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 7;
  ::google::protobuf::int32 s() const;
  void set_s(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.UsingMountVo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_n();
  void clear_has_n();
  void set_has_swf();
  void clear_has_swf();
  void set_has_bi();
  void clear_has_bi();
  void set_has_si();
  void clear_has_si();
  void set_has_p();
  void clear_has_p();
  void set_has_s();
  void clear_has_s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr n_;
  ::google::protobuf::internal::ArenaStringPtr swf_;
  ::google::protobuf::internal::ArenaStringPtr bi_;
  ::google::protobuf::internal::ArenaStringPtr si_;
  ::google::protobuf::internal::ArenaStringPtr p_;
  ::google::protobuf::int32 s_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UsingMedalVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.UsingMedalVo) */ {
 public:
  UsingMedalVo();
  virtual ~UsingMedalVo();

  UsingMedalVo(const UsingMedalVo& from);

  inline UsingMedalVo& operator=(const UsingMedalVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UsingMedalVo(UsingMedalVo&& from) noexcept
    : UsingMedalVo() {
    *this = ::std::move(from);
  }

  inline UsingMedalVo& operator=(UsingMedalVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsingMedalVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UsingMedalVo* internal_default_instance() {
    return reinterpret_cast<const UsingMedalVo*>(
               &_UsingMedalVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(UsingMedalVo* other);
  friend void swap(UsingMedalVo& a, UsingMedalVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UsingMedalVo* New() const final {
    return CreateMaybeMessage<UsingMedalVo>(NULL);
  }

  UsingMedalVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UsingMedalVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UsingMedalVo& from);
  void MergeFrom(const UsingMedalVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UsingMedalVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string medalList = 1;
  bool has_medallist() const;
  void clear_medallist();
  static const int kMedalListFieldNumber = 1;
  const ::std::string& medallist() const;
  void set_medallist(const ::std::string& value);
  #if LANG_CXX11
  void set_medallist(::std::string&& value);
  #endif
  void set_medallist(const char* value);
  void set_medallist(const char* value, size_t size);
  ::std::string* mutable_medallist();
  ::std::string* release_medallist();
  void set_allocated_medallist(::std::string* medallist);

  // @@protoc_insertion_point(class_scope:KuGouPack.UsingMedalVo)
 private:
  void set_has_medallist();
  void clear_has_medallist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr medallist_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HonorMedalVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.HonorMedalVo) */ {
 public:
  HonorMedalVo();
  virtual ~HonorMedalVo();

  HonorMedalVo(const HonorMedalVo& from);

  inline HonorMedalVo& operator=(const HonorMedalVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HonorMedalVo(HonorMedalVo&& from) noexcept
    : HonorMedalVo() {
    *this = ::std::move(from);
  }

  inline HonorMedalVo& operator=(HonorMedalVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HonorMedalVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HonorMedalVo* internal_default_instance() {
    return reinterpret_cast<const HonorMedalVo*>(
               &_HonorMedalVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(HonorMedalVo* other);
  friend void swap(HonorMedalVo& a, HonorMedalVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HonorMedalVo* New() const final {
    return CreateMaybeMessage<HonorMedalVo>(NULL);
  }

  HonorMedalVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HonorMedalVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HonorMedalVo& from);
  void MergeFrom(const HonorMedalVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HonorMedalVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string honorList = 1;
  bool has_honorlist() const;
  void clear_honorlist();
  static const int kHonorListFieldNumber = 1;
  const ::std::string& honorlist() const;
  void set_honorlist(const ::std::string& value);
  #if LANG_CXX11
  void set_honorlist(::std::string&& value);
  #endif
  void set_honorlist(const char* value);
  void set_honorlist(const char* value, size_t size);
  ::std::string* mutable_honorlist();
  ::std::string* release_honorlist();
  void set_allocated_honorlist(::std::string* honorlist);

  // @@protoc_insertion_point(class_scope:KuGouPack.HonorMedalVo)
 private:
  void set_has_honorlist();
  void clear_has_honorlist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr honorlist_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGuardVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.UserGuardVo) */ {
 public:
  UserGuardVo();
  virtual ~UserGuardVo();

  UserGuardVo(const UserGuardVo& from);

  inline UserGuardVo& operator=(const UserGuardVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGuardVo(UserGuardVo&& from) noexcept
    : UserGuardVo() {
    *this = ::std::move(from);
  }

  inline UserGuardVo& operator=(UserGuardVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGuardVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGuardVo* internal_default_instance() {
    return reinterpret_cast<const UserGuardVo*>(
               &_UserGuardVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(UserGuardVo* other);
  friend void swap(UserGuardVo& a, UserGuardVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGuardVo* New() const final {
    return CreateMaybeMessage<UserGuardVo>(NULL);
  }

  UserGuardVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserGuardVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserGuardVo& from);
  void MergeFrom(const UserGuardVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserGuardVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string g = 1;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 1;
  const ::std::string& g() const;
  void set_g(const ::std::string& value);
  #if LANG_CXX11
  void set_g(::std::string&& value);
  #endif
  void set_g(const char* value);
  void set_g(const char* value, size_t size);
  ::std::string* mutable_g();
  ::std::string* release_g();
  void set_allocated_g(::std::string* g);

  // optional string i = 2;
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 2;
  const ::std::string& i() const;
  void set_i(const ::std::string& value);
  #if LANG_CXX11
  void set_i(::std::string&& value);
  #endif
  void set_i(const char* value);
  void set_i(const char* value, size_t size);
  ::std::string* mutable_i();
  ::std::string* release_i();
  void set_allocated_i(::std::string* i);

  // @@protoc_insertion_point(class_scope:KuGouPack.UserGuardVo)
 private:
  void set_has_g();
  void clear_has_g();
  void set_has_i();
  void clear_has_i();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr g_;
  ::google::protobuf::internal::ArenaStringPtr i_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LittleGuardVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.LittleGuardVo) */ {
 public:
  LittleGuardVo();
  virtual ~LittleGuardVo();

  LittleGuardVo(const LittleGuardVo& from);

  inline LittleGuardVo& operator=(const LittleGuardVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LittleGuardVo(LittleGuardVo&& from) noexcept
    : LittleGuardVo() {
    *this = ::std::move(from);
  }

  inline LittleGuardVo& operator=(LittleGuardVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LittleGuardVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LittleGuardVo* internal_default_instance() {
    return reinterpret_cast<const LittleGuardVo*>(
               &_LittleGuardVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(LittleGuardVo* other);
  friend void swap(LittleGuardVo& a, LittleGuardVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LittleGuardVo* New() const final {
    return CreateMaybeMessage<LittleGuardVo>(NULL);
  }

  LittleGuardVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LittleGuardVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LittleGuardVo& from);
  void MergeFrom(const LittleGuardVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LittleGuardVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 l = 1;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 1;
  ::google::protobuf::int32 l() const;
  void set_l(::google::protobuf::int32 value);

  // optional int32 g = 2;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 2;
  ::google::protobuf::int32 g() const;
  void set_g(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.LittleGuardVo)
 private:
  void set_has_l();
  void clear_has_l();
  void set_has_g();
  void clear_has_g();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 l_;
  ::google::protobuf::int32 g_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WoreUserPlateVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.WoreUserPlateVo) */ {
 public:
  WoreUserPlateVo();
  virtual ~WoreUserPlateVo();

  WoreUserPlateVo(const WoreUserPlateVo& from);

  inline WoreUserPlateVo& operator=(const WoreUserPlateVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WoreUserPlateVo(WoreUserPlateVo&& from) noexcept
    : WoreUserPlateVo() {
    *this = ::std::move(from);
  }

  inline WoreUserPlateVo& operator=(WoreUserPlateVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WoreUserPlateVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WoreUserPlateVo* internal_default_instance() {
    return reinterpret_cast<const WoreUserPlateVo*>(
               &_WoreUserPlateVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(WoreUserPlateVo* other);
  friend void swap(WoreUserPlateVo& a, WoreUserPlateVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WoreUserPlateVo* New() const final {
    return CreateMaybeMessage<WoreUserPlateVo>(NULL);
  }

  WoreUserPlateVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WoreUserPlateVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WoreUserPlateVo& from);
  void MergeFrom(const WoreUserPlateVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WoreUserPlateVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string plateName = 2;
  bool has_platename() const;
  void clear_platename();
  static const int kPlateNameFieldNumber = 2;
  const ::std::string& platename() const;
  void set_platename(const ::std::string& value);
  #if LANG_CXX11
  void set_platename(::std::string&& value);
  #endif
  void set_platename(const char* value);
  void set_platename(const char* value, size_t size);
  ::std::string* mutable_platename();
  ::std::string* release_platename();
  void set_allocated_platename(::std::string* platename);

  // optional int64 kid = 1;
  bool has_kid() const;
  void clear_kid();
  static const int kKidFieldNumber = 1;
  ::google::protobuf::int64 kid() const;
  void set_kid(::google::protobuf::int64 value);

  // optional int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 l = 4;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 4;
  ::google::protobuf::int32 l() const;
  void set_l(::google::protobuf::int32 value);

  // optional int32 i = 5;
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 5;
  ::google::protobuf::int32 i() const;
  void set_i(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.WoreUserPlateVo)
 private:
  void set_has_kid();
  void clear_has_kid();
  void set_has_platename();
  void clear_has_platename();
  void set_has_type();
  void clear_has_type();
  void set_has_l();
  void clear_has_l();
  void set_has_i();
  void clear_has_i();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platename_;
  ::google::protobuf::int64 kid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 l_;
  ::google::protobuf::int32 i_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BubbleVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.BubbleVo) */ {
 public:
  BubbleVo();
  virtual ~BubbleVo();

  BubbleVo(const BubbleVo& from);

  inline BubbleVo& operator=(const BubbleVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BubbleVo(BubbleVo&& from) noexcept
    : BubbleVo() {
    *this = ::std::move(from);
  }

  inline BubbleVo& operator=(BubbleVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BubbleVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BubbleVo* internal_default_instance() {
    return reinterpret_cast<const BubbleVo*>(
               &_BubbleVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(BubbleVo* other);
  friend void swap(BubbleVo& a, BubbleVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BubbleVo* New() const final {
    return CreateMaybeMessage<BubbleVo>(NULL);
  }

  BubbleVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BubbleVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BubbleVo& from);
  void MergeFrom(const BubbleVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BubbleVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bg = 2;
  bool has_bg() const;
  void clear_bg();
  static const int kBgFieldNumber = 2;
  const ::std::string& bg() const;
  void set_bg(const ::std::string& value);
  #if LANG_CXX11
  void set_bg(::std::string&& value);
  #endif
  void set_bg(const char* value);
  void set_bg(const char* value, size_t size);
  ::std::string* mutable_bg();
  ::std::string* release_bg();
  void set_allocated_bg(::std::string* bg);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.BubbleVo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_bg();
  void clear_has_bg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bg_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StarFollowerVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.StarFollowerVo) */ {
 public:
  StarFollowerVo();
  virtual ~StarFollowerVo();

  StarFollowerVo(const StarFollowerVo& from);

  inline StarFollowerVo& operator=(const StarFollowerVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StarFollowerVo(StarFollowerVo&& from) noexcept
    : StarFollowerVo() {
    *this = ::std::move(from);
  }

  inline StarFollowerVo& operator=(StarFollowerVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StarFollowerVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StarFollowerVo* internal_default_instance() {
    return reinterpret_cast<const StarFollowerVo*>(
               &_StarFollowerVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(StarFollowerVo* other);
  friend void swap(StarFollowerVo& a, StarFollowerVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StarFollowerVo* New() const final {
    return CreateMaybeMessage<StarFollowerVo>(NULL);
  }

  StarFollowerVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StarFollowerVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StarFollowerVo& from);
  void MergeFrom(const StarFollowerVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StarFollowerVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 l = 1;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 1;
  ::google::protobuf::int32 l() const;
  void set_l(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.StarFollowerVo)
 private:
  void set_has_l();
  void clear_has_l();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 l_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossGroupVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.BossGroupVo) */ {
 public:
  BossGroupVo();
  virtual ~BossGroupVo();

  BossGroupVo(const BossGroupVo& from);

  inline BossGroupVo& operator=(const BossGroupVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossGroupVo(BossGroupVo&& from) noexcept
    : BossGroupVo() {
    *this = ::std::move(from);
  }

  inline BossGroupVo& operator=(BossGroupVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossGroupVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BossGroupVo* internal_default_instance() {
    return reinterpret_cast<const BossGroupVo*>(
               &_BossGroupVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(BossGroupVo* other);
  friend void swap(BossGroupVo& a, BossGroupVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossGroupVo* New() const final {
    return CreateMaybeMessage<BossGroupVo>(NULL);
  }

  BossGroupVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BossGroupVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BossGroupVo& from);
  void MergeFrom(const BossGroupVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BossGroupVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gn = 2;
  bool has_gn() const;
  void clear_gn();
  static const int kGnFieldNumber = 2;
  const ::std::string& gn() const;
  void set_gn(const ::std::string& value);
  #if LANG_CXX11
  void set_gn(::std::string&& value);
  #endif
  void set_gn(const char* value);
  void set_gn(const char* value, size_t size);
  ::std::string* mutable_gn();
  ::std::string* release_gn();
  void set_allocated_gn(::std::string* gn);

  // optional int64 gid = 1;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 1;
  ::google::protobuf::int64 gid() const;
  void set_gid(::google::protobuf::int64 value);

  // optional int32 gr = 3;
  bool has_gr() const;
  void clear_gr();
  static const int kGrFieldNumber = 3;
  ::google::protobuf::int32 gr() const;
  void set_gr(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.BossGroupVo)
 private:
  void set_has_gid();
  void clear_has_gid();
  void set_has_gn();
  void clear_has_gn();
  void set_has_gr();
  void clear_has_gr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gn_;
  ::google::protobuf::int64 gid_;
  ::google::protobuf::int32 gr_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CeremonyVo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KuGouPack.CeremonyVo) */ {
 public:
  CeremonyVo();
  virtual ~CeremonyVo();

  CeremonyVo(const CeremonyVo& from);

  inline CeremonyVo& operator=(const CeremonyVo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CeremonyVo(CeremonyVo&& from) noexcept
    : CeremonyVo() {
    *this = ::std::move(from);
  }

  inline CeremonyVo& operator=(CeremonyVo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CeremonyVo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CeremonyVo* internal_default_instance() {
    return reinterpret_cast<const CeremonyVo*>(
               &_CeremonyVo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(CeremonyVo* other);
  friend void swap(CeremonyVo& a, CeremonyVo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CeremonyVo* New() const final {
    return CreateMaybeMessage<CeremonyVo>(NULL);
  }

  CeremonyVo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CeremonyVo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CeremonyVo& from);
  void MergeFrom(const CeremonyVo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CeremonyVo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pl = 1;
  bool has_pl() const;
  void clear_pl();
  static const int kPlFieldNumber = 1;
  ::google::protobuf::int32 pl() const;
  void set_pl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KuGouPack.CeremonyVo)
 private:
  void set_has_pl();
  void clear_has_pl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 pl_;
  friend struct ::protobuf_kugou_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// optional int32 cmd = 1;
inline bool LoginRequest::has_cmd() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LoginRequest::set_has_cmd() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LoginRequest::clear_has_cmd() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LoginRequest::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 LoginRequest::cmd() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.cmd)
  return cmd_;
}
inline void LoginRequest::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.cmd)
}

// optional int32 roomid = 2;
inline bool LoginRequest::has_roomid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LoginRequest::set_has_roomid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LoginRequest::clear_has_roomid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LoginRequest::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 LoginRequest::roomid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.roomid)
  return roomid_;
}
inline void LoginRequest::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.roomid)
}

// optional int64 kugouid = 3;
inline bool LoginRequest::has_kugouid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LoginRequest::set_has_kugouid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LoginRequest::clear_has_kugouid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LoginRequest::clear_kugouid() {
  kugouid_ = GOOGLE_LONGLONG(0);
  clear_has_kugouid();
}
inline ::google::protobuf::int64 LoginRequest::kugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.kugouid)
  return kugouid_;
}
inline void LoginRequest::set_kugouid(::google::protobuf::int64 value) {
  set_has_kugouid();
  kugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.kugouid)
}

// optional string token = 4;
inline bool LoginRequest::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& LoginRequest::token() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.token)
  return token_.GetNoArena();
}
inline void LoginRequest::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.token)
}
#if LANG_CXX11
inline void LoginRequest::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.token)
}
#endif
inline void LoginRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.token)
}
inline void LoginRequest::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.token)
}
inline ::std::string* LoginRequest::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_token() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.token)
  if (!has_token()) {
    return NULL;
  }
  clear_has_token();
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.token)
}

// optional string key = 5;
inline bool LoginRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& LoginRequest::key() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.key)
  return key_.GetNoArena();
}
inline void LoginRequest::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.key)
}
#if LANG_CXX11
inline void LoginRequest::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.key)
}
#endif
inline void LoginRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.key)
}
inline void LoginRequest::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.key)
}
inline ::std::string* LoginRequest::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_key() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.key)
}

// optional int32 appid = 6;
inline bool LoginRequest::has_appid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LoginRequest::set_has_appid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LoginRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LoginRequest::clear_appid() {
  appid_ = 0;
  clear_has_appid();
}
inline ::google::protobuf::int32 LoginRequest::appid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.appid)
  return appid_;
}
inline void LoginRequest::set_appid(::google::protobuf::int32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.appid)
}

// optional int32 platid = 7;
inline bool LoginRequest::has_platid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LoginRequest::set_has_platid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LoginRequest::clear_has_platid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LoginRequest::clear_platid() {
  platid_ = 0;
  clear_has_platid();
}
inline ::google::protobuf::int32 LoginRequest::platid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.platid)
  return platid_;
}
inline void LoginRequest::set_platid(::google::protobuf::int32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.platid)
}

// optional int32 subplatid = 8;
inline bool LoginRequest::has_subplatid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LoginRequest::set_has_subplatid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LoginRequest::clear_has_subplatid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LoginRequest::clear_subplatid() {
  subplatid_ = 0;
  clear_has_subplatid();
}
inline ::google::protobuf::int32 LoginRequest::subplatid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.subplatid)
  return subplatid_;
}
inline void LoginRequest::set_subplatid(::google::protobuf::int32 value) {
  set_has_subplatid();
  subplatid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.subplatid)
}

// optional string version = 9;
inline bool LoginRequest::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRequest::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRequest::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& LoginRequest::version() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.version)
  return version_.GetNoArena();
}
inline void LoginRequest::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.version)
}
#if LANG_CXX11
inline void LoginRequest::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.version)
}
#endif
inline void LoginRequest::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.version)
}
inline void LoginRequest::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.version)
}
inline ::std::string* LoginRequest::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_version() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.version)
  if (!has_version()) {
    return NULL;
  }
  clear_has_version();
  return version_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.version)
}

// optional string deviceNo = 10;
inline bool LoginRequest::has_deviceno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRequest::set_has_deviceno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRequest::clear_has_deviceno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRequest::clear_deviceno() {
  deviceno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceno();
}
inline const ::std::string& LoginRequest::deviceno() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.deviceNo)
  return deviceno_.GetNoArena();
}
inline void LoginRequest::set_deviceno(const ::std::string& value) {
  set_has_deviceno();
  deviceno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.deviceNo)
}
#if LANG_CXX11
inline void LoginRequest::set_deviceno(::std::string&& value) {
  set_has_deviceno();
  deviceno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.deviceNo)
}
#endif
inline void LoginRequest::set_deviceno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceno();
  deviceno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.deviceNo)
}
inline void LoginRequest::set_deviceno(const char* value, size_t size) {
  set_has_deviceno();
  deviceno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.deviceNo)
}
inline ::std::string* LoginRequest::mutable_deviceno() {
  set_has_deviceno();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.deviceNo)
  return deviceno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_deviceno() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.deviceNo)
  if (!has_deviceno()) {
    return NULL;
  }
  clear_has_deviceno();
  return deviceno_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_deviceno(::std::string* deviceno) {
  if (deviceno != NULL) {
    set_has_deviceno();
  } else {
    clear_has_deviceno();
  }
  deviceno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceno);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.deviceNo)
}

// optional string imei = 11;
inline bool LoginRequest::has_imei() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRequest::set_has_imei() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRequest::clear_has_imei() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRequest::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& LoginRequest::imei() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.imei)
  return imei_.GetNoArena();
}
inline void LoginRequest::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.imei)
}
#if LANG_CXX11
inline void LoginRequest::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.imei)
}
#endif
inline void LoginRequest::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.imei)
}
inline void LoginRequest::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.imei)
}
inline ::std::string* LoginRequest::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_imei() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.imei)
  if (!has_imei()) {
    return NULL;
  }
  clear_has_imei();
  return imei_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.imei)
}

// optional int32 v = 12;
inline bool LoginRequest::has_v() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LoginRequest::set_has_v() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LoginRequest::clear_has_v() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LoginRequest::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 LoginRequest::v() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.v)
  return v_;
}
inline void LoginRequest::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.v)
}

// optional int32 referer = 13;
inline bool LoginRequest::has_referer() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LoginRequest::set_has_referer() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LoginRequest::clear_has_referer() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LoginRequest::clear_referer() {
  referer_ = 0;
  clear_has_referer();
}
inline ::google::protobuf::int32 LoginRequest::referer() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.referer)
  return referer_;
}
inline void LoginRequest::set_referer(::google::protobuf::int32 value) {
  set_has_referer();
  referer_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.referer)
}

// optional int32 clientid = 14;
inline bool LoginRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LoginRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LoginRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LoginRequest::clear_clientid() {
  clientid_ = 0;
  clear_has_clientid();
}
inline ::google::protobuf::int32 LoginRequest::clientid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.clientid)
  return clientid_;
}
inline void LoginRequest::set_clientid(::google::protobuf::int32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.clientid)
}

// optional string soctoken = 15;
inline bool LoginRequest::has_soctoken() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRequest::set_has_soctoken() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRequest::clear_has_soctoken() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRequest::clear_soctoken() {
  soctoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_soctoken();
}
inline const ::std::string& LoginRequest::soctoken() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.soctoken)
  return soctoken_.GetNoArena();
}
inline void LoginRequest::set_soctoken(const ::std::string& value) {
  set_has_soctoken();
  soctoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.soctoken)
}
#if LANG_CXX11
inline void LoginRequest::set_soctoken(::std::string&& value) {
  set_has_soctoken();
  soctoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.soctoken)
}
#endif
inline void LoginRequest::set_soctoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_soctoken();
  soctoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.soctoken)
}
inline void LoginRequest::set_soctoken(const char* value, size_t size) {
  set_has_soctoken();
  soctoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.soctoken)
}
inline ::std::string* LoginRequest::mutable_soctoken() {
  set_has_soctoken();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.soctoken)
  return soctoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_soctoken() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.soctoken)
  if (!has_soctoken()) {
    return NULL;
  }
  clear_has_soctoken();
  return soctoken_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_soctoken(::std::string* soctoken) {
  if (soctoken != NULL) {
    set_has_soctoken();
  } else {
    clear_has_soctoken();
  }
  soctoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), soctoken);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.soctoken)
}

// optional string offset = 16;
inline bool LoginRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRequest::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_offset();
}
inline const ::std::string& LoginRequest::offset() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.offset)
  return offset_.GetNoArena();
}
inline void LoginRequest::set_offset(const ::std::string& value) {
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.offset)
}
#if LANG_CXX11
inline void LoginRequest::set_offset(::std::string&& value) {
  set_has_offset();
  offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.offset)
}
#endif
inline void LoginRequest::set_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.offset)
}
inline void LoginRequest::set_offset(const char* value, size_t size) {
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.offset)
}
inline ::std::string* LoginRequest::mutable_offset() {
  set_has_offset();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_offset() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.offset)
  if (!has_offset()) {
    return NULL;
  }
  clear_has_offset();
  return offset_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    set_has_offset();
  } else {
    clear_has_offset();
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.offset)
}

// optional int32 appChannel = 17;
inline bool LoginRequest::has_appchannel() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LoginRequest::set_has_appchannel() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LoginRequest::clear_has_appchannel() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LoginRequest::clear_appchannel() {
  appchannel_ = 0;
  clear_has_appchannel();
}
inline ::google::protobuf::int32 LoginRequest::appchannel() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.appChannel)
  return appchannel_;
}
inline void LoginRequest::set_appchannel(::google::protobuf::int32 value) {
  set_has_appchannel();
  appchannel_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.appChannel)
}

// optional string sid = 18;
inline bool LoginRequest::has_sid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginRequest::set_has_sid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginRequest::clear_has_sid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginRequest::clear_sid() {
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sid();
}
inline const ::std::string& LoginRequest::sid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.sid)
  return sid_.GetNoArena();
}
inline void LoginRequest::set_sid(const ::std::string& value) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.sid)
}
#if LANG_CXX11
inline void LoginRequest::set_sid(::std::string&& value) {
  set_has_sid();
  sid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.sid)
}
#endif
inline void LoginRequest::set_sid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.sid)
}
inline void LoginRequest::set_sid(const char* value, size_t size) {
  set_has_sid();
  sid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.sid)
}
inline ::std::string* LoginRequest::mutable_sid() {
  set_has_sid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.sid)
  return sid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_sid() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.sid)
  if (!has_sid()) {
    return NULL;
  }
  clear_has_sid();
  return sid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_sid(::std::string* sid) {
  if (sid != NULL) {
    set_has_sid();
  } else {
    clear_has_sid();
  }
  sid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.sid)
}

// optional int32 source = 19;
inline bool LoginRequest::has_source() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void LoginRequest::set_has_source() {
  _has_bits_[0] |= 0x00800000u;
}
inline void LoginRequest::clear_has_source() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void LoginRequest::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 LoginRequest::source() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.source)
  return source_;
}
inline void LoginRequest::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.source)
}

// optional string uuid = 20;
inline bool LoginRequest::has_uuid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginRequest::set_has_uuid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginRequest::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& LoginRequest::uuid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.uuid)
  return uuid_.GetNoArena();
}
inline void LoginRequest::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.uuid)
}
#if LANG_CXX11
inline void LoginRequest::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.uuid)
}
#endif
inline void LoginRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.uuid)
}
inline void LoginRequest::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.uuid)
}
inline ::std::string* LoginRequest::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.uuid)
  if (!has_uuid()) {
    return NULL;
  }
  clear_has_uuid();
  return uuid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.uuid)
}

// optional string systemVersion = 21;
inline bool LoginRequest::has_systemversion() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LoginRequest::set_has_systemversion() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LoginRequest::clear_has_systemversion() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LoginRequest::clear_systemversion() {
  systemversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_systemversion();
}
inline const ::std::string& LoginRequest::systemversion() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.systemVersion)
  return systemversion_.GetNoArena();
}
inline void LoginRequest::set_systemversion(const ::std::string& value) {
  set_has_systemversion();
  systemversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.systemVersion)
}
#if LANG_CXX11
inline void LoginRequest::set_systemversion(::std::string&& value) {
  set_has_systemversion();
  systemversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.systemVersion)
}
#endif
inline void LoginRequest::set_systemversion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_systemversion();
  systemversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.systemVersion)
}
inline void LoginRequest::set_systemversion(const char* value, size_t size) {
  set_has_systemversion();
  systemversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.systemVersion)
}
inline ::std::string* LoginRequest::mutable_systemversion() {
  set_has_systemversion();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.systemVersion)
  return systemversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_systemversion() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.systemVersion)
  if (!has_systemversion()) {
    return NULL;
  }
  clear_has_systemversion();
  return systemversion_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_systemversion(::std::string* systemversion) {
  if (systemversion != NULL) {
    set_has_systemversion();
  } else {
    clear_has_systemversion();
  }
  systemversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemversion);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.systemVersion)
}

// optional string entryid = 22;
inline bool LoginRequest::has_entryid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LoginRequest::set_has_entryid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LoginRequest::clear_has_entryid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LoginRequest::clear_entryid() {
  entryid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entryid();
}
inline const ::std::string& LoginRequest::entryid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.entryid)
  return entryid_.GetNoArena();
}
inline void LoginRequest::set_entryid(const ::std::string& value) {
  set_has_entryid();
  entryid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.entryid)
}
#if LANG_CXX11
inline void LoginRequest::set_entryid(::std::string&& value) {
  set_has_entryid();
  entryid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.entryid)
}
#endif
inline void LoginRequest::set_entryid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_entryid();
  entryid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.entryid)
}
inline void LoginRequest::set_entryid(const char* value, size_t size) {
  set_has_entryid();
  entryid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.entryid)
}
inline ::std::string* LoginRequest::mutable_entryid() {
  set_has_entryid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.entryid)
  return entryid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_entryid() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.entryid)
  if (!has_entryid()) {
    return NULL;
  }
  clear_has_entryid();
  return entryid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_entryid(::std::string* entryid) {
  if (entryid != NULL) {
    set_has_entryid();
  } else {
    clear_has_entryid();
  }
  entryid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entryid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.entryid)
}

// optional string socsid = 23;
inline bool LoginRequest::has_socsid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LoginRequest::set_has_socsid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LoginRequest::clear_has_socsid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LoginRequest::clear_socsid() {
  socsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_socsid();
}
inline const ::std::string& LoginRequest::socsid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.socsid)
  return socsid_.GetNoArena();
}
inline void LoginRequest::set_socsid(const ::std::string& value) {
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.socsid)
}
#if LANG_CXX11
inline void LoginRequest::set_socsid(::std::string&& value) {
  set_has_socsid();
  socsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.socsid)
}
#endif
inline void LoginRequest::set_socsid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.socsid)
}
inline void LoginRequest::set_socsid(const char* value, size_t size) {
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.socsid)
}
inline ::std::string* LoginRequest::mutable_socsid() {
  set_has_socsid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.socsid)
  return socsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_socsid() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.socsid)
  if (!has_socsid()) {
    return NULL;
  }
  clear_has_socsid();
  return socsid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_socsid(::std::string* socsid) {
  if (socsid != NULL) {
    set_has_socsid();
  } else {
    clear_has_socsid();
  }
  socsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), socsid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.socsid)
}

// optional string deviceid = 24;
inline bool LoginRequest::has_deviceid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LoginRequest::set_has_deviceid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LoginRequest::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LoginRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& LoginRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginRequest.deviceid)
  return deviceid_.GetNoArena();
}
inline void LoginRequest::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginRequest.deviceid)
}
#if LANG_CXX11
inline void LoginRequest::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginRequest.deviceid)
}
#endif
inline void LoginRequest::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginRequest.deviceid)
}
inline void LoginRequest::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginRequest.deviceid)
}
inline ::std::string* LoginRequest::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginRequest.deviceid)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginRequest.deviceid)
  if (!has_deviceid()) {
    return NULL;
  }
  clear_has_deviceid();
  return deviceid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginRequest.deviceid)
}

// -------------------------------------------------------------------

// LoginResponse

// optional string nickname = 1;
inline bool LoginResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& LoginResponse::nickname() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.nickname)
  return nickname_.GetNoArena();
}
inline void LoginResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.nickname)
}
#if LANG_CXX11
inline void LoginResponse::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginResponse.nickname)
}
#endif
inline void LoginResponse::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginResponse.nickname)
}
inline void LoginResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginResponse.nickname)
}
inline ::std::string* LoginResponse::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginResponse.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_nickname() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginResponse.nickname)
  if (!has_nickname()) {
    return NULL;
  }
  clear_has_nickname();
  return nickname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginResponse.nickname)
}

// optional int32 richlevel = 2;
inline bool LoginResponse::has_richlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginResponse::set_has_richlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginResponse::clear_has_richlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginResponse::clear_richlevel() {
  richlevel_ = 0;
  clear_has_richlevel();
}
inline ::google::protobuf::int32 LoginResponse::richlevel() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.richlevel)
  return richlevel_;
}
inline void LoginResponse::set_richlevel(::google::protobuf::int32 value) {
  set_has_richlevel();
  richlevel_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.richlevel)
}

// optional int64 userid = 3;
inline bool LoginResponse::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginResponse::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginResponse::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginResponse::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 LoginResponse::userid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.userid)
  return userid_;
}
inline void LoginResponse::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.userid)
}

// optional int64 kugouid = 4;
inline bool LoginResponse::has_kugouid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginResponse::set_has_kugouid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginResponse::clear_has_kugouid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginResponse::clear_kugouid() {
  kugouid_ = GOOGLE_LONGLONG(0);
  clear_has_kugouid();
}
inline ::google::protobuf::int64 LoginResponse::kugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.kugouid)
  return kugouid_;
}
inline void LoginResponse::set_kugouid(::google::protobuf::int64 value) {
  set_has_kugouid();
  kugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.kugouid)
}

// optional int32 fanstags = 5;
inline bool LoginResponse::has_fanstags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginResponse::set_has_fanstags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginResponse::clear_has_fanstags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginResponse::clear_fanstags() {
  fanstags_ = 0;
  clear_has_fanstags();
}
inline ::google::protobuf::int32 LoginResponse::fanstags() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.fanstags)
  return fanstags_;
}
inline void LoginResponse::set_fanstags(::google::protobuf::int32 value) {
  set_has_fanstags();
  fanstags_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.fanstags)
}

// optional int32 v = 6;
inline bool LoginResponse::has_v() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginResponse::set_has_v() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginResponse::clear_has_v() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginResponse::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 LoginResponse::v() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.v)
  return v_;
}
inline void LoginResponse::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.v)
}

// optional int32 referer = 7;
inline bool LoginResponse::has_referer() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginResponse::set_has_referer() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginResponse::clear_has_referer() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginResponse::clear_referer() {
  referer_ = 0;
  clear_has_referer();
}
inline ::google::protobuf::int32 LoginResponse::referer() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.referer)
  return referer_;
}
inline void LoginResponse::set_referer(::google::protobuf::int32 value) {
  set_has_referer();
  referer_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.referer)
}

// optional string wellcomes = 8;
inline bool LoginResponse::has_wellcomes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::set_has_wellcomes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResponse::clear_has_wellcomes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResponse::clear_wellcomes() {
  wellcomes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wellcomes();
}
inline const ::std::string& LoginResponse::wellcomes() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.wellcomes)
  return wellcomes_.GetNoArena();
}
inline void LoginResponse::set_wellcomes(const ::std::string& value) {
  set_has_wellcomes();
  wellcomes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.wellcomes)
}
#if LANG_CXX11
inline void LoginResponse::set_wellcomes(::std::string&& value) {
  set_has_wellcomes();
  wellcomes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginResponse.wellcomes)
}
#endif
inline void LoginResponse::set_wellcomes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wellcomes();
  wellcomes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginResponse.wellcomes)
}
inline void LoginResponse::set_wellcomes(const char* value, size_t size) {
  set_has_wellcomes();
  wellcomes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginResponse.wellcomes)
}
inline ::std::string* LoginResponse::mutable_wellcomes() {
  set_has_wellcomes();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginResponse.wellcomes)
  return wellcomes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_wellcomes() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginResponse.wellcomes)
  if (!has_wellcomes()) {
    return NULL;
  }
  clear_has_wellcomes();
  return wellcomes_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_wellcomes(::std::string* wellcomes) {
  if (wellcomes != NULL) {
    set_has_wellcomes();
  } else {
    clear_has_wellcomes();
  }
  wellcomes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wellcomes);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginResponse.wellcomes)
}

// optional string img = 9;
inline bool LoginResponse::has_img() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::set_has_img() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResponse::clear_has_img() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResponse::clear_img() {
  img_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_img();
}
inline const ::std::string& LoginResponse::img() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LoginResponse.img)
  return img_.GetNoArena();
}
inline void LoginResponse::set_img(const ::std::string& value) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.LoginResponse.img)
}
#if LANG_CXX11
inline void LoginResponse::set_img(::std::string&& value) {
  set_has_img();
  img_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.LoginResponse.img)
}
#endif
inline void LoginResponse::set_img(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.LoginResponse.img)
}
inline void LoginResponse::set_img(const char* value, size_t size) {
  set_has_img();
  img_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.LoginResponse.img)
}
inline ::std::string* LoginResponse::mutable_img() {
  set_has_img();
  // @@protoc_insertion_point(field_mutable:KuGouPack.LoginResponse.img)
  return img_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_img() {
  // @@protoc_insertion_point(field_release:KuGouPack.LoginResponse.img)
  if (!has_img()) {
    return NULL;
  }
  clear_has_img();
  return img_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_img(::std::string* img) {
  if (img != NULL) {
    set_has_img();
  } else {
    clear_has_img();
  }
  img_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), img);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.LoginResponse.img)
}

// -------------------------------------------------------------------

// ErrorResponse

// optional int32 cmd = 1;
inline bool ErrorResponse::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ErrorResponse::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ErrorResponse::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ErrorResponse::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 ErrorResponse::cmd() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.cmd)
  return cmd_;
}
inline void ErrorResponse::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.cmd)
}

// optional int32 type = 2;
inline bool ErrorResponse::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ErrorResponse::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ErrorResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ErrorResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ErrorResponse::type() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.type)
  return type_;
}
inline void ErrorResponse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.type)
}

// optional int64 seq = 3;
inline bool ErrorResponse::has_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ErrorResponse::set_has_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ErrorResponse::clear_has_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ErrorResponse::clear_seq() {
  seq_ = GOOGLE_LONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::int64 ErrorResponse::seq() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.seq)
  return seq_;
}
inline void ErrorResponse::set_seq(::google::protobuf::int64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.seq)
}

// optional int32 status = 4;
inline bool ErrorResponse::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ErrorResponse::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ErrorResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ErrorResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ErrorResponse::status() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.status)
  return status_;
}
inline void ErrorResponse::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.status)
}

// optional int32 errorno = 5;
inline bool ErrorResponse::has_errorno() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ErrorResponse::set_has_errorno() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ErrorResponse::clear_has_errorno() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ErrorResponse::clear_errorno() {
  errorno_ = 0;
  clear_has_errorno();
}
inline ::google::protobuf::int32 ErrorResponse::errorno() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.errorno)
  return errorno_;
}
inline void ErrorResponse::set_errorno(::google::protobuf::int32 value) {
  set_has_errorno();
  errorno_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.errorno)
}

// optional string msg = 6;
inline bool ErrorResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ErrorResponse::msg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.msg)
  return msg_.GetNoArena();
}
inline void ErrorResponse::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.msg)
}
#if LANG_CXX11
inline void ErrorResponse::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ErrorResponse.msg)
}
#endif
inline void ErrorResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ErrorResponse.msg)
}
inline void ErrorResponse::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ErrorResponse.msg)
}
inline ::std::string* ErrorResponse::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ErrorResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorResponse::release_msg() {
  // @@protoc_insertion_point(field_release:KuGouPack.ErrorResponse.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ErrorResponse.msg)
}

// optional string socsid = 7;
inline bool ErrorResponse::has_socsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorResponse::set_has_socsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorResponse::clear_has_socsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorResponse::clear_socsid() {
  socsid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_socsid();
}
inline const ::std::string& ErrorResponse::socsid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ErrorResponse.socsid)
  return socsid_.GetNoArena();
}
inline void ErrorResponse::set_socsid(const ::std::string& value) {
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ErrorResponse.socsid)
}
#if LANG_CXX11
inline void ErrorResponse::set_socsid(::std::string&& value) {
  set_has_socsid();
  socsid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ErrorResponse.socsid)
}
#endif
inline void ErrorResponse::set_socsid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ErrorResponse.socsid)
}
inline void ErrorResponse::set_socsid(const char* value, size_t size) {
  set_has_socsid();
  socsid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ErrorResponse.socsid)
}
inline ::std::string* ErrorResponse::mutable_socsid() {
  set_has_socsid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ErrorResponse.socsid)
  return socsid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorResponse::release_socsid() {
  // @@protoc_insertion_point(field_release:KuGouPack.ErrorResponse.socsid)
  if (!has_socsid()) {
    return NULL;
  }
  clear_has_socsid();
  return socsid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse::set_allocated_socsid(::std::string* socsid) {
  if (socsid != NULL) {
    set_has_socsid();
  } else {
    clear_has_socsid();
  }
  socsid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), socsid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ErrorResponse.socsid)
}

// -------------------------------------------------------------------

// ChatResponse

// optional string chatmsg = 1;
inline bool ChatResponse::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatResponse::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatResponse::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatResponse::clear_chatmsg() {
  chatmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatmsg();
}
inline const ::std::string& ChatResponse::chatmsg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.chatmsg)
  return chatmsg_.GetNoArena();
}
inline void ChatResponse::set_chatmsg(const ::std::string& value) {
  set_has_chatmsg();
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.chatmsg)
}
#if LANG_CXX11
inline void ChatResponse::set_chatmsg(::std::string&& value) {
  set_has_chatmsg();
  chatmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ChatResponse.chatmsg)
}
#endif
inline void ChatResponse::set_chatmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatmsg();
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ChatResponse.chatmsg)
}
inline void ChatResponse::set_chatmsg(const char* value, size_t size) {
  set_has_chatmsg();
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ChatResponse.chatmsg)
}
inline ::std::string* ChatResponse::mutable_chatmsg() {
  set_has_chatmsg();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.chatmsg)
  return chatmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatResponse::release_chatmsg() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.chatmsg)
  if (!has_chatmsg()) {
    return NULL;
  }
  clear_has_chatmsg();
  return chatmsg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatResponse::set_allocated_chatmsg(::std::string* chatmsg) {
  if (chatmsg != NULL) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
  chatmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatmsg);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.chatmsg)
}

// optional int64 senderid = 2;
inline bool ChatResponse::has_senderid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatResponse::set_has_senderid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatResponse::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatResponse::clear_senderid() {
  senderid_ = GOOGLE_LONGLONG(0);
  clear_has_senderid();
}
inline ::google::protobuf::int64 ChatResponse::senderid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.senderid)
  return senderid_;
}
inline void ChatResponse::set_senderid(::google::protobuf::int64 value) {
  set_has_senderid();
  senderid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.senderid)
}

// optional int64 senderkugouid = 3;
inline bool ChatResponse::has_senderkugouid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChatResponse::set_has_senderkugouid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChatResponse::clear_has_senderkugouid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChatResponse::clear_senderkugouid() {
  senderkugouid_ = GOOGLE_LONGLONG(0);
  clear_has_senderkugouid();
}
inline ::google::protobuf::int64 ChatResponse::senderkugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.senderkugouid)
  return senderkugouid_;
}
inline void ChatResponse::set_senderkugouid(::google::protobuf::int64 value) {
  set_has_senderkugouid();
  senderkugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.senderkugouid)
}

// optional string sendername = 4;
inline bool ChatResponse::has_sendername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatResponse::set_has_sendername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatResponse::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatResponse::clear_sendername() {
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sendername();
}
inline const ::std::string& ChatResponse::sendername() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.sendername)
  return sendername_.GetNoArena();
}
inline void ChatResponse::set_sendername(const ::std::string& value) {
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.sendername)
}
#if LANG_CXX11
inline void ChatResponse::set_sendername(::std::string&& value) {
  set_has_sendername();
  sendername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ChatResponse.sendername)
}
#endif
inline void ChatResponse::set_sendername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ChatResponse.sendername)
}
inline void ChatResponse::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  sendername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ChatResponse.sendername)
}
inline ::std::string* ChatResponse::mutable_sendername() {
  set_has_sendername();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.sendername)
  return sendername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatResponse::release_sendername() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.sendername)
  if (!has_sendername()) {
    return NULL;
  }
  clear_has_sendername();
  return sendername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatResponse::set_allocated_sendername(::std::string* sendername) {
  if (sendername != NULL) {
    set_has_sendername();
  } else {
    clear_has_sendername();
  }
  sendername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendername);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.sendername)
}

// optional int32 senderrichlevel = 5;
inline bool ChatResponse::has_senderrichlevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ChatResponse::set_has_senderrichlevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ChatResponse::clear_has_senderrichlevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ChatResponse::clear_senderrichlevel() {
  senderrichlevel_ = 0;
  clear_has_senderrichlevel();
}
inline ::google::protobuf::int32 ChatResponse::senderrichlevel() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.senderrichlevel)
  return senderrichlevel_;
}
inline void ChatResponse::set_senderrichlevel(::google::protobuf::int32 value) {
  set_has_senderrichlevel();
  senderrichlevel_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.senderrichlevel)
}

// optional int64 receiverid = 6;
inline bool ChatResponse::has_receiverid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChatResponse::set_has_receiverid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChatResponse::clear_has_receiverid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChatResponse::clear_receiverid() {
  receiverid_ = GOOGLE_LONGLONG(0);
  clear_has_receiverid();
}
inline ::google::protobuf::int64 ChatResponse::receiverid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.receiverid)
  return receiverid_;
}
inline void ChatResponse::set_receiverid(::google::protobuf::int64 value) {
  set_has_receiverid();
  receiverid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.receiverid)
}

// optional int64 receiverkugouid = 7;
inline bool ChatResponse::has_receiverkugouid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChatResponse::set_has_receiverkugouid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChatResponse::clear_has_receiverkugouid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChatResponse::clear_receiverkugouid() {
  receiverkugouid_ = GOOGLE_LONGLONG(0);
  clear_has_receiverkugouid();
}
inline ::google::protobuf::int64 ChatResponse::receiverkugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.receiverkugouid)
  return receiverkugouid_;
}
inline void ChatResponse::set_receiverkugouid(::google::protobuf::int64 value) {
  set_has_receiverkugouid();
  receiverkugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.receiverkugouid)
}

// optional string receivername = 8;
inline bool ChatResponse::has_receivername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatResponse::set_has_receivername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatResponse::clear_has_receivername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatResponse::clear_receivername() {
  receivername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_receivername();
}
inline const ::std::string& ChatResponse::receivername() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.receivername)
  return receivername_.GetNoArena();
}
inline void ChatResponse::set_receivername(const ::std::string& value) {
  set_has_receivername();
  receivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.receivername)
}
#if LANG_CXX11
inline void ChatResponse::set_receivername(::std::string&& value) {
  set_has_receivername();
  receivername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ChatResponse.receivername)
}
#endif
inline void ChatResponse::set_receivername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_receivername();
  receivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ChatResponse.receivername)
}
inline void ChatResponse::set_receivername(const char* value, size_t size) {
  set_has_receivername();
  receivername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ChatResponse.receivername)
}
inline ::std::string* ChatResponse::mutable_receivername() {
  set_has_receivername();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.receivername)
  return receivername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatResponse::release_receivername() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.receivername)
  if (!has_receivername()) {
    return NULL;
  }
  clear_has_receivername();
  return receivername_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatResponse::set_allocated_receivername(::std::string* receivername) {
  if (receivername != NULL) {
    set_has_receivername();
  } else {
    clear_has_receivername();
  }
  receivername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receivername);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.receivername)
}

// optional int32 receiverrichlevel = 9;
inline bool ChatResponse::has_receiverrichlevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ChatResponse::set_has_receiverrichlevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ChatResponse::clear_has_receiverrichlevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ChatResponse::clear_receiverrichlevel() {
  receiverrichlevel_ = 0;
  clear_has_receiverrichlevel();
}
inline ::google::protobuf::int32 ChatResponse::receiverrichlevel() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.receiverrichlevel)
  return receiverrichlevel_;
}
inline void ChatResponse::set_receiverrichlevel(::google::protobuf::int32 value) {
  set_has_receiverrichlevel();
  receiverrichlevel_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.receiverrichlevel)
}

// optional int32 issecrect = 10;
inline bool ChatResponse::has_issecrect() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ChatResponse::set_has_issecrect() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ChatResponse::clear_has_issecrect() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ChatResponse::clear_issecrect() {
  issecrect_ = 0;
  clear_has_issecrect();
}
inline ::google::protobuf::int32 ChatResponse::issecrect() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.issecrect)
  return issecrect_;
}
inline void ChatResponse::set_issecrect(::google::protobuf::int32 value) {
  set_has_issecrect();
  issecrect_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.issecrect)
}

// optional .KuGouPack.AdditionalInfo additionalInfo = 11;
inline bool ChatResponse::has_additionalinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatResponse::set_has_additionalinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatResponse::clear_has_additionalinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatResponse::clear_additionalinfo() {
  if (additionalinfo_ != NULL) additionalinfo_->Clear();
  clear_has_additionalinfo();
}
inline const ::KuGouPack::AdditionalInfo& ChatResponse::_internal_additionalinfo() const {
  return *additionalinfo_;
}
inline const ::KuGouPack::AdditionalInfo& ChatResponse::additionalinfo() const {
  const ::KuGouPack::AdditionalInfo* p = additionalinfo_;
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.additionalInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::AdditionalInfo*>(
      &::KuGouPack::_AdditionalInfo_default_instance_);
}
inline ::KuGouPack::AdditionalInfo* ChatResponse::release_additionalinfo() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.additionalInfo)
  clear_has_additionalinfo();
  ::KuGouPack::AdditionalInfo* temp = additionalinfo_;
  additionalinfo_ = NULL;
  return temp;
}
inline ::KuGouPack::AdditionalInfo* ChatResponse::mutable_additionalinfo() {
  set_has_additionalinfo();
  if (additionalinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::AdditionalInfo>(GetArenaNoVirtual());
    additionalinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.additionalInfo)
  return additionalinfo_;
}
inline void ChatResponse::set_allocated_additionalinfo(::KuGouPack::AdditionalInfo* additionalinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete additionalinfo_;
  }
  if (additionalinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      additionalinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, additionalinfo, submessage_arena);
    }
    set_has_additionalinfo();
  } else {
    clear_has_additionalinfo();
  }
  additionalinfo_ = additionalinfo;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.additionalInfo)
}

// optional int32 v = 12;
inline bool ChatResponse::has_v() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ChatResponse::set_has_v() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ChatResponse::clear_has_v() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ChatResponse::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 ChatResponse::v() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.v)
  return v_;
}
inline void ChatResponse::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.v)
}

// optional int64 seq = 13;
inline bool ChatResponse::has_seq() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ChatResponse::set_has_seq() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ChatResponse::clear_has_seq() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ChatResponse::clear_seq() {
  seq_ = GOOGLE_LONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::int64 ChatResponse::seq() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.seq)
  return seq_;
}
inline void ChatResponse::set_seq(::google::protobuf::int64 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.seq)
}

// optional int32 isa = 14;
inline bool ChatResponse::has_isa() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ChatResponse::set_has_isa() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ChatResponse::clear_has_isa() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ChatResponse::clear_isa() {
  isa_ = 0;
  clear_has_isa();
}
inline ::google::protobuf::int32 ChatResponse::isa() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.isa)
  return isa_;
}
inline void ChatResponse::set_isa(::google::protobuf::int32 value) {
  set_has_isa();
  isa_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.isa)
}

// optional int32 rlight = 15;
inline bool ChatResponse::has_rlight() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ChatResponse::set_has_rlight() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ChatResponse::clear_has_rlight() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ChatResponse::clear_rlight() {
  rlight_ = 0;
  clear_has_rlight();
}
inline ::google::protobuf::int32 ChatResponse::rlight() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.rlight)
  return rlight_;
}
inline void ChatResponse::set_rlight(::google::protobuf::int32 value) {
  set_has_rlight();
  rlight_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.rlight)
}

// optional int32 rdiffExp = 16;
inline bool ChatResponse::has_rdiffexp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ChatResponse::set_has_rdiffexp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ChatResponse::clear_has_rdiffexp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ChatResponse::clear_rdiffexp() {
  rdiffexp_ = 0;
  clear_has_rdiffexp();
}
inline ::google::protobuf::int32 ChatResponse::rdiffexp() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.rdiffExp)
  return rdiffexp_;
}
inline void ChatResponse::set_rdiffexp(::google::protobuf::int32 value) {
  set_has_rdiffexp();
  rdiffexp_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.rdiffExp)
}

// optional int32 rsvip = 17;
inline bool ChatResponse::has_rsvip() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ChatResponse::set_has_rsvip() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ChatResponse::clear_has_rsvip() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ChatResponse::clear_rsvip() {
  rsvip_ = 0;
  clear_has_rsvip();
}
inline ::google::protobuf::int32 ChatResponse::rsvip() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.rsvip)
  return rsvip_;
}
inline void ChatResponse::set_rsvip(::google::protobuf::int32 value) {
  set_has_rsvip();
  rsvip_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.rsvip)
}

// optional int32 rsvipl = 18;
inline bool ChatResponse::has_rsvipl() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ChatResponse::set_has_rsvipl() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ChatResponse::clear_has_rsvipl() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ChatResponse::clear_rsvipl() {
  rsvipl_ = 0;
  clear_has_rsvipl();
}
inline ::google::protobuf::int32 ChatResponse::rsvipl() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.rsvipl)
  return rsvipl_;
}
inline void ChatResponse::set_rsvipl(::google::protobuf::int32 value) {
  set_has_rsvipl();
  rsvipl_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.rsvipl)
}

// optional string mac = 19;
inline bool ChatResponse::has_mac() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatResponse::set_has_mac() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatResponse::clear_has_mac() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatResponse::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
inline const ::std::string& ChatResponse::mac() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.mac)
  return mac_.GetNoArena();
}
inline void ChatResponse::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ChatResponse.mac)
}
#if LANG_CXX11
inline void ChatResponse::set_mac(::std::string&& value) {
  set_has_mac();
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ChatResponse.mac)
}
#endif
inline void ChatResponse::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ChatResponse.mac)
}
inline void ChatResponse::set_mac(const char* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ChatResponse.mac)
}
inline ::std::string* ChatResponse::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatResponse::release_mac() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.mac)
  if (!has_mac()) {
    return NULL;
  }
  clear_has_mac();
  return mac_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatResponse::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.mac)
}

// optional .KuGouPack.Complain complain = 20;
inline bool ChatResponse::has_complain() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatResponse::set_has_complain() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatResponse::clear_has_complain() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatResponse::clear_complain() {
  if (complain_ != NULL) complain_->Clear();
  clear_has_complain();
}
inline const ::KuGouPack::Complain& ChatResponse::_internal_complain() const {
  return *complain_;
}
inline const ::KuGouPack::Complain& ChatResponse::complain() const {
  const ::KuGouPack::Complain* p = complain_;
  // @@protoc_insertion_point(field_get:KuGouPack.ChatResponse.complain)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::Complain*>(
      &::KuGouPack::_Complain_default_instance_);
}
inline ::KuGouPack::Complain* ChatResponse::release_complain() {
  // @@protoc_insertion_point(field_release:KuGouPack.ChatResponse.complain)
  clear_has_complain();
  ::KuGouPack::Complain* temp = complain_;
  complain_ = NULL;
  return temp;
}
inline ::KuGouPack::Complain* ChatResponse::mutable_complain() {
  set_has_complain();
  if (complain_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::Complain>(GetArenaNoVirtual());
    complain_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.ChatResponse.complain)
  return complain_;
}
inline void ChatResponse::set_allocated_complain(::KuGouPack::Complain* complain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete complain_;
  }
  if (complain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      complain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, complain, submessage_arena);
    }
    set_has_complain();
  } else {
    clear_has_complain();
  }
  complain_ = complain;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ChatResponse.complain)
}

// -------------------------------------------------------------------

// AdditionalInfo

// optional int32 fanstags = 1;
inline bool AdditionalInfo::has_fanstags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdditionalInfo::set_has_fanstags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdditionalInfo::clear_has_fanstags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdditionalInfo::clear_fanstags() {
  fanstags_ = 0;
  clear_has_fanstags();
}
inline ::google::protobuf::int32 AdditionalInfo::fanstags() const {
  // @@protoc_insertion_point(field_get:KuGouPack.AdditionalInfo.fanstags)
  return fanstags_;
}
inline void AdditionalInfo::set_fanstags(::google::protobuf::int32 value) {
  set_has_fanstags();
  fanstags_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.AdditionalInfo.fanstags)
}

// -------------------------------------------------------------------

// Complain

// optional string msg = 1;
inline bool Complain::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Complain::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Complain::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Complain::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& Complain::msg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Complain.msg)
  return msg_.GetNoArena();
}
inline void Complain::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Complain.msg)
}
#if LANG_CXX11
inline void Complain::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Complain.msg)
}
#endif
inline void Complain::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Complain.msg)
}
inline void Complain::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Complain.msg)
}
inline ::std::string* Complain::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Complain.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complain::release_msg() {
  // @@protoc_insertion_point(field_release:KuGouPack.Complain.msg)
  if (!has_msg()) {
    return NULL;
  }
  clear_has_msg();
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complain::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Complain.msg)
}

// optional string url = 2;
inline bool Complain::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Complain::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Complain::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Complain::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& Complain::url() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Complain.url)
  return url_.GetNoArena();
}
inline void Complain::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Complain.url)
}
#if LANG_CXX11
inline void Complain::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Complain.url)
}
#endif
inline void Complain::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Complain.url)
}
inline void Complain::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Complain.url)
}
inline ::std::string* Complain::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Complain.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Complain::release_url() {
  // @@protoc_insertion_point(field_release:KuGouPack.Complain.url)
  if (!has_url()) {
    return NULL;
  }
  clear_has_url();
  return url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Complain::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Complain.url)
}

// -------------------------------------------------------------------

// Message

// optional string offset = 1;
inline bool Message::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_offset();
}
inline const ::std::string& Message::offset() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.offset)
  return offset_.GetNoArena();
}
inline void Message::set_offset(const ::std::string& value) {
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Message.offset)
}
#if LANG_CXX11
inline void Message::set_offset(::std::string&& value) {
  set_has_offset();
  offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Message.offset)
}
#endif
inline void Message::set_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Message.offset)
}
inline void Message::set_offset(const char* value, size_t size) {
  set_has_offset();
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Message.offset)
}
inline ::std::string* Message::mutable_offset() {
  set_has_offset();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Message.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_offset() {
  // @@protoc_insertion_point(field_release:KuGouPack.Message.offset)
  if (!has_offset()) {
    return NULL;
  }
  clear_has_offset();
  return offset_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    set_has_offset();
  } else {
    clear_has_offset();
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Message.offset)
}

// optional int32 ack = 2;
inline bool Message::has_ack() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_ack() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_ack() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_ack() {
  ack_ = 0;
  clear_has_ack();
}
inline ::google::protobuf::int32 Message::ack() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.ack)
  return ack_;
}
inline void Message::set_ack(::google::protobuf::int32 value) {
  set_has_ack();
  ack_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Message.ack)
}

// optional int32 rpt = 3;
inline bool Message::has_rpt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_rpt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_rpt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_rpt() {
  rpt_ = 0;
  clear_has_rpt();
}
inline ::google::protobuf::int32 Message::rpt() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.rpt)
  return rpt_;
}
inline void Message::set_rpt(::google::protobuf::int32 value) {
  set_has_rpt();
  rpt_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Message.rpt)
}

// optional string msgId = 4;
inline bool Message::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgid();
}
inline const ::std::string& Message::msgid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.msgId)
  return msgid_.GetNoArena();
}
inline void Message::set_msgid(const ::std::string& value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Message.msgId)
}
#if LANG_CXX11
inline void Message::set_msgid(::std::string&& value) {
  set_has_msgid();
  msgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Message.msgId)
}
#endif
inline void Message::set_msgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Message.msgId)
}
inline void Message::set_msgid(const char* value, size_t size) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Message.msgId)
}
inline ::std::string* Message::mutable_msgid() {
  set_has_msgid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Message.msgId)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_msgid() {
  // @@protoc_insertion_point(field_release:KuGouPack.Message.msgId)
  if (!has_msgid()) {
    return NULL;
  }
  clear_has_msgid();
  return msgid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    set_has_msgid();
  } else {
    clear_has_msgid();
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Message.msgId)
}

// optional .KuGouPack.MCompression compression = 5;
inline bool Message::has_compression() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_compression() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_compression() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_compression() {
  compression_ = 0;
  clear_has_compression();
}
inline ::KuGouPack::MCompression Message::compression() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.compression)
  return static_cast< ::KuGouPack::MCompression >(compression_);
}
inline void Message::set_compression(::KuGouPack::MCompression value) {
  assert(::KuGouPack::MCompression_IsValid(value));
  set_has_compression();
  compression_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Message.compression)
}

// optional .KuGouPack.MCodec codec = 6;
inline bool Message::has_codec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_codec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_codec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_codec() {
  codec_ = 0;
  clear_has_codec();
}
inline ::KuGouPack::MCodec Message::codec() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.codec)
  return static_cast< ::KuGouPack::MCodec >(codec_);
}
inline void Message::set_codec(::KuGouPack::MCodec value) {
  assert(::KuGouPack::MCodec_IsValid(value));
  set_has_codec();
  codec_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Message.codec)
}

// optional bytes content = 7;
inline bool Message::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Message::content() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Message.content)
  return content_.GetNoArena();
}
inline void Message::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Message.content)
}
#if LANG_CXX11
inline void Message::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Message.content)
}
#endif
inline void Message::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Message.content)
}
inline void Message::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Message.content)
}
inline ::std::string* Message::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Message.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_content() {
  // @@protoc_insertion_point(field_release:KuGouPack.Message.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Message.content)
}

// -------------------------------------------------------------------

// ContentMessage

// optional int32 cmd = 1;
inline bool ContentMessage::has_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ContentMessage::set_has_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ContentMessage::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ContentMessage::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 ContentMessage::cmd() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.cmd)
  return cmd_;
}
inline void ContentMessage::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.cmd)
}

// optional bytes content = 2;
inline bool ContentMessage::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentMessage::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& ContentMessage::content() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.content)
  return content_.GetNoArena();
}
inline void ContentMessage::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.content)
}
#if LANG_CXX11
inline void ContentMessage::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ContentMessage.content)
}
#endif
inline void ContentMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ContentMessage.content)
}
inline void ContentMessage::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ContentMessage.content)
}
inline ::std::string* ContentMessage::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ContentMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentMessage::release_content() {
  // @@protoc_insertion_point(field_release:KuGouPack.ContentMessage.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ContentMessage.content)
}

// optional int32 roomid = 3;
inline bool ContentMessage::has_roomid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ContentMessage::set_has_roomid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ContentMessage::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ContentMessage::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 ContentMessage::roomid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.roomid)
  return roomid_;
}
inline void ContentMessage::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.roomid)
}

// optional int64 receiverid = 4;
inline bool ContentMessage::has_receiverid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ContentMessage::set_has_receiverid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ContentMessage::clear_has_receiverid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ContentMessage::clear_receiverid() {
  receiverid_ = GOOGLE_LONGLONG(0);
  clear_has_receiverid();
}
inline ::google::protobuf::int64 ContentMessage::receiverid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.receiverid)
  return receiverid_;
}
inline void ContentMessage::set_receiverid(::google::protobuf::int64 value) {
  set_has_receiverid();
  receiverid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.receiverid)
}

// optional int64 receiverkugouid = 5;
inline bool ContentMessage::has_receiverkugouid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ContentMessage::set_has_receiverkugouid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ContentMessage::clear_has_receiverkugouid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ContentMessage::clear_receiverkugouid() {
  receiverkugouid_ = GOOGLE_LONGLONG(0);
  clear_has_receiverkugouid();
}
inline ::google::protobuf::int64 ContentMessage::receiverkugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.receiverkugouid)
  return receiverkugouid_;
}
inline void ContentMessage::set_receiverkugouid(::google::protobuf::int64 value) {
  set_has_receiverkugouid();
  receiverkugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.receiverkugouid)
}

// optional int64 senderid = 6;
inline bool ContentMessage::has_senderid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ContentMessage::set_has_senderid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ContentMessage::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ContentMessage::clear_senderid() {
  senderid_ = GOOGLE_LONGLONG(0);
  clear_has_senderid();
}
inline ::google::protobuf::int64 ContentMessage::senderid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.senderid)
  return senderid_;
}
inline void ContentMessage::set_senderid(::google::protobuf::int64 value) {
  set_has_senderid();
  senderid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.senderid)
}

// optional int64 sendkugouid = 7;
inline bool ContentMessage::has_sendkugouid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ContentMessage::set_has_sendkugouid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ContentMessage::clear_has_sendkugouid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ContentMessage::clear_sendkugouid() {
  sendkugouid_ = GOOGLE_LONGLONG(0);
  clear_has_sendkugouid();
}
inline ::google::protobuf::int64 ContentMessage::sendkugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.sendkugouid)
  return sendkugouid_;
}
inline void ContentMessage::set_sendkugouid(::google::protobuf::int64 value) {
  set_has_sendkugouid();
  sendkugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.sendkugouid)
}

// optional int32 appId = 8;
inline bool ContentMessage::has_appid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ContentMessage::set_has_appid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ContentMessage::clear_has_appid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ContentMessage::clear_appid() {
  appid_ = 0;
  clear_has_appid();
}
inline ::google::protobuf::int32 ContentMessage::appid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.appId)
  return appid_;
}
inline void ContentMessage::set_appid(::google::protobuf::int32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.appId)
}

// optional int64 gid = 9;
inline bool ContentMessage::has_gid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ContentMessage::set_has_gid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ContentMessage::clear_has_gid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ContentMessage::clear_gid() {
  gid_ = GOOGLE_LONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::int64 ContentMessage::gid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.gid)
  return gid_;
}
inline void ContentMessage::set_gid(::google::protobuf::int64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.gid)
}

// optional int32 rpt = 10;
inline bool ContentMessage::has_rpt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ContentMessage::set_has_rpt() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ContentMessage::clear_has_rpt() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ContentMessage::clear_rpt() {
  rpt_ = 0;
  clear_has_rpt();
}
inline ::google::protobuf::int32 ContentMessage::rpt() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.rpt)
  return rpt_;
}
inline void ContentMessage::set_rpt(::google::protobuf::int32 value) {
  set_has_rpt();
  rpt_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.rpt)
}

// optional int64 time = 11;
inline bool ContentMessage::has_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ContentMessage::set_has_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ContentMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ContentMessage::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 ContentMessage::time() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.time)
  return time_;
}
inline void ContentMessage::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.time)
}

// optional int64 plev = 12;
inline bool ContentMessage::has_plev() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ContentMessage::set_has_plev() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ContentMessage::clear_has_plev() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ContentMessage::clear_plev() {
  plev_ = GOOGLE_LONGLONG(0);
  clear_has_plev();
}
inline ::google::protobuf::int64 ContentMessage::plev() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.plev)
  return plev_;
}
inline void ContentMessage::set_plev(::google::protobuf::int64 value) {
  set_has_plev();
  plev_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.plev)
}

// optional int64 pvalue = 13;
inline bool ContentMessage::has_pvalue() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ContentMessage::set_has_pvalue() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ContentMessage::clear_has_pvalue() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ContentMessage::clear_pvalue() {
  pvalue_ = GOOGLE_LONGLONG(0);
  clear_has_pvalue();
}
inline ::google::protobuf::int64 ContentMessage::pvalue() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.pvalue)
  return pvalue_;
}
inline void ContentMessage::set_pvalue(::google::protobuf::int64 value) {
  set_has_pvalue();
  pvalue_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.pvalue)
}

// optional bytes ext = 14;
inline bool ContentMessage::has_ext() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentMessage::set_has_ext() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentMessage::clear_has_ext() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentMessage::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ext();
}
inline const ::std::string& ContentMessage::ext() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.ext)
  return ext_.GetNoArena();
}
inline void ContentMessage::set_ext(const ::std::string& value) {
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.ext)
}
#if LANG_CXX11
inline void ContentMessage::set_ext(::std::string&& value) {
  set_has_ext();
  ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.ContentMessage.ext)
}
#endif
inline void ContentMessage::set_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.ContentMessage.ext)
}
inline void ContentMessage::set_ext(const void* value, size_t size) {
  set_has_ext();
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.ContentMessage.ext)
}
inline ::std::string* ContentMessage::mutable_ext() {
  set_has_ext();
  // @@protoc_insertion_point(field_mutable:KuGouPack.ContentMessage.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContentMessage::release_ext() {
  // @@protoc_insertion_point(field_release:KuGouPack.ContentMessage.ext)
  if (!has_ext()) {
    return NULL;
  }
  clear_has_ext();
  return ext_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContentMessage::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    set_has_ext();
  } else {
    clear_has_ext();
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ContentMessage.ext)
}

// optional .KuGouPack.Sinfo sinfo = 15;
inline bool ContentMessage::has_sinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContentMessage::set_has_sinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContentMessage::clear_has_sinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContentMessage::clear_sinfo() {
  if (sinfo_ != NULL) sinfo_->Clear();
  clear_has_sinfo();
}
inline const ::KuGouPack::Sinfo& ContentMessage::_internal_sinfo() const {
  return *sinfo_;
}
inline const ::KuGouPack::Sinfo& ContentMessage::sinfo() const {
  const ::KuGouPack::Sinfo* p = sinfo_;
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.sinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::Sinfo*>(
      &::KuGouPack::_Sinfo_default_instance_);
}
inline ::KuGouPack::Sinfo* ContentMessage::release_sinfo() {
  // @@protoc_insertion_point(field_release:KuGouPack.ContentMessage.sinfo)
  clear_has_sinfo();
  ::KuGouPack::Sinfo* temp = sinfo_;
  sinfo_ = NULL;
  return temp;
}
inline ::KuGouPack::Sinfo* ContentMessage::mutable_sinfo() {
  set_has_sinfo();
  if (sinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::Sinfo>(GetArenaNoVirtual());
    sinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.ContentMessage.sinfo)
  return sinfo_;
}
inline void ContentMessage::set_allocated_sinfo(::KuGouPack::Sinfo* sinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sinfo_;
  }
  if (sinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sinfo, submessage_arena);
    }
    set_has_sinfo();
  } else {
    clear_has_sinfo();
  }
  sinfo_ = sinfo;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ContentMessage.sinfo)
}

// optional .KuGouPack.MCodec codec = 16;
inline bool ContentMessage::has_codec() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ContentMessage::set_has_codec() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ContentMessage::clear_has_codec() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ContentMessage::clear_codec() {
  codec_ = 0;
  clear_has_codec();
}
inline ::KuGouPack::MCodec ContentMessage::codec() const {
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.codec)
  return static_cast< ::KuGouPack::MCodec >(codec_);
}
inline void ContentMessage::set_codec(::KuGouPack::MCodec value) {
  assert(::KuGouPack::MCodec_IsValid(value));
  set_has_codec();
  codec_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.ContentMessage.codec)
}

// optional .KuGouPack.Risk risk = 17;
inline bool ContentMessage::has_risk() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContentMessage::set_has_risk() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ContentMessage::clear_has_risk() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ContentMessage::clear_risk() {
  if (risk_ != NULL) risk_->Clear();
  clear_has_risk();
}
inline const ::KuGouPack::Risk& ContentMessage::_internal_risk() const {
  return *risk_;
}
inline const ::KuGouPack::Risk& ContentMessage::risk() const {
  const ::KuGouPack::Risk* p = risk_;
  // @@protoc_insertion_point(field_get:KuGouPack.ContentMessage.risk)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::Risk*>(
      &::KuGouPack::_Risk_default_instance_);
}
inline ::KuGouPack::Risk* ContentMessage::release_risk() {
  // @@protoc_insertion_point(field_release:KuGouPack.ContentMessage.risk)
  clear_has_risk();
  ::KuGouPack::Risk* temp = risk_;
  risk_ = NULL;
  return temp;
}
inline ::KuGouPack::Risk* ContentMessage::mutable_risk() {
  set_has_risk();
  if (risk_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::Risk>(GetArenaNoVirtual());
    risk_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.ContentMessage.risk)
  return risk_;
}
inline void ContentMessage::set_allocated_risk(::KuGouPack::Risk* risk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete risk_;
  }
  if (risk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      risk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, risk, submessage_arena);
    }
    set_has_risk();
  } else {
    clear_has_risk();
  }
  risk_ = risk;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.ContentMessage.risk)
}

// -------------------------------------------------------------------

// Risk

// optional string m = 1;
inline bool Risk::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Risk::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Risk::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Risk::clear_m() {
  m_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m();
}
inline const ::std::string& Risk::m() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Risk.m)
  return m_.GetNoArena();
}
inline void Risk::set_m(const ::std::string& value) {
  set_has_m();
  m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Risk.m)
}
#if LANG_CXX11
inline void Risk::set_m(::std::string&& value) {
  set_has_m();
  m_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Risk.m)
}
#endif
inline void Risk::set_m(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_m();
  m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Risk.m)
}
inline void Risk::set_m(const char* value, size_t size) {
  set_has_m();
  m_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Risk.m)
}
inline ::std::string* Risk::mutable_m() {
  set_has_m();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Risk.m)
  return m_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Risk::release_m() {
  // @@protoc_insertion_point(field_release:KuGouPack.Risk.m)
  if (!has_m()) {
    return NULL;
  }
  clear_has_m();
  return m_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Risk::set_allocated_m(::std::string* m) {
  if (m != NULL) {
    set_has_m();
  } else {
    clear_has_m();
  }
  m_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Risk.m)
}

// optional string l = 2;
inline bool Risk::has_l() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Risk::set_has_l() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Risk::clear_has_l() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Risk::clear_l() {
  l_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_l();
}
inline const ::std::string& Risk::l() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Risk.l)
  return l_.GetNoArena();
}
inline void Risk::set_l(const ::std::string& value) {
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Risk.l)
}
#if LANG_CXX11
inline void Risk::set_l(::std::string&& value) {
  set_has_l();
  l_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Risk.l)
}
#endif
inline void Risk::set_l(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Risk.l)
}
inline void Risk::set_l(const char* value, size_t size) {
  set_has_l();
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Risk.l)
}
inline ::std::string* Risk::mutable_l() {
  set_has_l();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Risk.l)
  return l_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Risk::release_l() {
  // @@protoc_insertion_point(field_release:KuGouPack.Risk.l)
  if (!has_l()) {
    return NULL;
  }
  clear_has_l();
  return l_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Risk::set_allocated_l(::std::string* l) {
  if (l != NULL) {
    set_has_l();
  } else {
    clear_has_l();
  }
  l_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), l);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Risk.l)
}

// optional int32 t = 3;
inline bool Risk::has_t() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Risk::set_has_t() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Risk::clear_has_t() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Risk::clear_t() {
  t_ = 0;
  clear_has_t();
}
inline ::google::protobuf::int32 Risk::t() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Risk.t)
  return t_;
}
inline void Risk::set_t(::google::protobuf::int32 value) {
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Risk.t)
}

// -------------------------------------------------------------------

// Sinfo

// optional int32 light = 1;
inline bool Sinfo::has_light() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Sinfo::set_has_light() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Sinfo::clear_has_light() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Sinfo::clear_light() {
  light_ = 0;
  clear_has_light();
}
inline ::google::protobuf::int32 Sinfo::light() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.light)
  return light_;
}
inline void Sinfo::set_light(::google::protobuf::int32 value) {
  set_has_light();
  light_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.light)
}

// optional int32 de = 2;
inline bool Sinfo::has_de() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Sinfo::set_has_de() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Sinfo::clear_has_de() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Sinfo::clear_de() {
  de_ = 0;
  clear_has_de();
}
inline ::google::protobuf::int32 Sinfo::de() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.de)
  return de_;
}
inline void Sinfo::set_de(::google::protobuf::int32 value) {
  set_has_de();
  de_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.de)
}

// optional int32 svip = 3;
inline bool Sinfo::has_svip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Sinfo::set_has_svip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Sinfo::clear_has_svip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Sinfo::clear_svip() {
  svip_ = 0;
  clear_has_svip();
}
inline ::google::protobuf::int32 Sinfo::svip() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.svip)
  return svip_;
}
inline void Sinfo::set_svip(::google::protobuf::int32 value) {
  set_has_svip();
  svip_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.svip)
}

// optional int32 svipl = 4;
inline bool Sinfo::has_svipl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Sinfo::set_has_svipl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Sinfo::clear_has_svipl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Sinfo::clear_svipl() {
  svipl_ = 0;
  clear_has_svipl();
}
inline ::google::protobuf::int32 Sinfo::svipl() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.svipl)
  return svipl_;
}
inline void Sinfo::set_svipl(::google::protobuf::int32 value) {
  set_has_svipl();
  svipl_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.svipl)
}

// optional int32 ck = 5;
inline bool Sinfo::has_ck() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Sinfo::set_has_ck() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Sinfo::clear_has_ck() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Sinfo::clear_ck() {
  ck_ = 0;
  clear_has_ck();
}
inline ::google::protobuf::int32 Sinfo::ck() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.ck)
  return ck_;
}
inline void Sinfo::set_ck(::google::protobuf::int32 value) {
  set_has_ck();
  ck_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.ck)
}

// optional string ckname = 6;
inline bool Sinfo::has_ckname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sinfo::set_has_ckname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sinfo::clear_has_ckname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sinfo::clear_ckname() {
  ckname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ckname();
}
inline const ::std::string& Sinfo::ckname() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.ckname)
  return ckname_.GetNoArena();
}
inline void Sinfo::set_ckname(const ::std::string& value) {
  set_has_ckname();
  ckname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.ckname)
}
#if LANG_CXX11
inline void Sinfo::set_ckname(::std::string&& value) {
  set_has_ckname();
  ckname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Sinfo.ckname)
}
#endif
inline void Sinfo::set_ckname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ckname();
  ckname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Sinfo.ckname)
}
inline void Sinfo::set_ckname(const char* value, size_t size) {
  set_has_ckname();
  ckname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Sinfo.ckname)
}
inline ::std::string* Sinfo::mutable_ckname() {
  set_has_ckname();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Sinfo.ckname)
  return ckname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sinfo::release_ckname() {
  // @@protoc_insertion_point(field_release:KuGouPack.Sinfo.ckname)
  if (!has_ckname()) {
    return NULL;
  }
  clear_has_ckname();
  return ckname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sinfo::set_allocated_ckname(::std::string* ckname) {
  if (ckname != NULL) {
    set_has_ckname();
  } else {
    clear_has_ckname();
  }
  ckname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ckname);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Sinfo.ckname)
}

// optional string skname = 7;
inline bool Sinfo::has_skname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sinfo::set_has_skname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sinfo::clear_has_skname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sinfo::clear_skname() {
  skname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skname();
}
inline const ::std::string& Sinfo::skname() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.skname)
  return skname_.GetNoArena();
}
inline void Sinfo::set_skname(const ::std::string& value) {
  set_has_skname();
  skname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.skname)
}
#if LANG_CXX11
inline void Sinfo::set_skname(::std::string&& value) {
  set_has_skname();
  skname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Sinfo.skname)
}
#endif
inline void Sinfo::set_skname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skname();
  skname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Sinfo.skname)
}
inline void Sinfo::set_skname(const char* value, size_t size) {
  set_has_skname();
  skname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Sinfo.skname)
}
inline ::std::string* Sinfo::mutable_skname() {
  set_has_skname();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Sinfo.skname)
  return skname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sinfo::release_skname() {
  // @@protoc_insertion_point(field_release:KuGouPack.Sinfo.skname)
  if (!has_skname()) {
    return NULL;
  }
  clear_has_skname();
  return skname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sinfo::set_allocated_skname(::std::string* skname) {
  if (skname != NULL) {
    set_has_skname();
  } else {
    clear_has_skname();
  }
  skname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skname);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Sinfo.skname)
}

// optional string ckid = 8;
inline bool Sinfo::has_ckid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sinfo::set_has_ckid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sinfo::clear_has_ckid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sinfo::clear_ckid() {
  ckid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ckid();
}
inline const ::std::string& Sinfo::ckid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.ckid)
  return ckid_.GetNoArena();
}
inline void Sinfo::set_ckid(const ::std::string& value) {
  set_has_ckid();
  ckid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.ckid)
}
#if LANG_CXX11
inline void Sinfo::set_ckid(::std::string&& value) {
  set_has_ckid();
  ckid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Sinfo.ckid)
}
#endif
inline void Sinfo::set_ckid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ckid();
  ckid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Sinfo.ckid)
}
inline void Sinfo::set_ckid(const char* value, size_t size) {
  set_has_ckid();
  ckid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Sinfo.ckid)
}
inline ::std::string* Sinfo::mutable_ckid() {
  set_has_ckid();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Sinfo.ckid)
  return ckid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sinfo::release_ckid() {
  // @@protoc_insertion_point(field_release:KuGouPack.Sinfo.ckid)
  if (!has_ckid()) {
    return NULL;
  }
  clear_has_ckid();
  return ckid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sinfo::set_allocated_ckid(::std::string* ckid) {
  if (ckid != NULL) {
    set_has_ckid();
  } else {
    clear_has_ckid();
  }
  ckid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ckid);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Sinfo.ckid)
}

// optional string ckimg = 9;
inline bool Sinfo::has_ckimg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sinfo::set_has_ckimg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sinfo::clear_has_ckimg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sinfo::clear_ckimg() {
  ckimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ckimg();
}
inline const ::std::string& Sinfo::ckimg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.ckimg)
  return ckimg_.GetNoArena();
}
inline void Sinfo::set_ckimg(const ::std::string& value) {
  set_has_ckimg();
  ckimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.ckimg)
}
#if LANG_CXX11
inline void Sinfo::set_ckimg(::std::string&& value) {
  set_has_ckimg();
  ckimg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Sinfo.ckimg)
}
#endif
inline void Sinfo::set_ckimg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ckimg();
  ckimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Sinfo.ckimg)
}
inline void Sinfo::set_ckimg(const char* value, size_t size) {
  set_has_ckimg();
  ckimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Sinfo.ckimg)
}
inline ::std::string* Sinfo::mutable_ckimg() {
  set_has_ckimg();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Sinfo.ckimg)
  return ckimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sinfo::release_ckimg() {
  // @@protoc_insertion_point(field_release:KuGouPack.Sinfo.ckimg)
  if (!has_ckimg()) {
    return NULL;
  }
  clear_has_ckimg();
  return ckimg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sinfo::set_allocated_ckimg(::std::string* ckimg) {
  if (ckimg != NULL) {
    set_has_ckimg();
  } else {
    clear_has_ckimg();
  }
  ckimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ckimg);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Sinfo.ckimg)
}

// optional string logo = 10;
inline bool Sinfo::has_logo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Sinfo::set_has_logo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Sinfo::clear_has_logo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Sinfo::clear_logo() {
  logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo();
}
inline const ::std::string& Sinfo::logo() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.logo)
  return logo_.GetNoArena();
}
inline void Sinfo::set_logo(const ::std::string& value) {
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.logo)
}
#if LANG_CXX11
inline void Sinfo::set_logo(::std::string&& value) {
  set_has_logo();
  logo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Sinfo.logo)
}
#endif
inline void Sinfo::set_logo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Sinfo.logo)
}
inline void Sinfo::set_logo(const char* value, size_t size) {
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Sinfo.logo)
}
inline ::std::string* Sinfo::mutable_logo() {
  set_has_logo();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Sinfo.logo)
  return logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Sinfo::release_logo() {
  // @@protoc_insertion_point(field_release:KuGouPack.Sinfo.logo)
  if (!has_logo()) {
    return NULL;
  }
  clear_has_logo();
  return logo_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Sinfo::set_allocated_logo(::std::string* logo) {
  if (logo != NULL) {
    set_has_logo();
  } else {
    clear_has_logo();
  }
  logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Sinfo.logo)
}

// optional int32 sex = 11;
inline bool Sinfo::has_sex() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Sinfo::set_has_sex() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Sinfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Sinfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Sinfo::sex() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.sex)
  return sex_;
}
inline void Sinfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.sex)
}

// optional int32 bt = 12;
inline bool Sinfo::has_bt() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Sinfo::set_has_bt() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Sinfo::clear_has_bt() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Sinfo::clear_bt() {
  bt_ = 0;
  clear_has_bt();
}
inline ::google::protobuf::int32 Sinfo::bt() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Sinfo.bt)
  return bt_;
}
inline void Sinfo::set_bt(::google::protobuf::int32 value) {
  set_has_bt();
  bt_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Sinfo.bt)
}

// -------------------------------------------------------------------

// Extension

// optional int32 ui = 1;
inline bool Extension::has_ui() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Extension::set_has_ui() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Extension::clear_has_ui() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Extension::clear_ui() {
  ui_ = 0;
  clear_has_ui();
}
inline ::google::protobuf::int32 Extension::ui() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.ui)
  return ui_;
}
inline void Extension::set_ui(::google::protobuf::int32 value) {
  set_has_ui();
  ui_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.ui)
}

// optional int32 isSpRoom = 2;
inline bool Extension::has_issproom() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Extension::set_has_issproom() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Extension::clear_has_issproom() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Extension::clear_issproom() {
  issproom_ = 0;
  clear_has_issproom();
}
inline ::google::protobuf::int32 Extension::issproom() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.isSpRoom)
  return issproom_;
}
inline void Extension::set_issproom(::google::protobuf::int32 value) {
  set_has_issproom();
  issproom_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.isSpRoom)
}

// optional .KuGouPack.StliVo stli = 3;
inline bool Extension::has_stli() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Extension::set_has_stli() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Extension::clear_has_stli() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Extension::clear_stli() {
  if (stli_ != NULL) stli_->Clear();
  clear_has_stli();
}
inline const ::KuGouPack::StliVo& Extension::_internal_stli() const {
  return *stli_;
}
inline const ::KuGouPack::StliVo& Extension::stli() const {
  const ::KuGouPack::StliVo* p = stli_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.stli)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::StliVo*>(
      &::KuGouPack::_StliVo_default_instance_);
}
inline ::KuGouPack::StliVo* Extension::release_stli() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.stli)
  clear_has_stli();
  ::KuGouPack::StliVo* temp = stli_;
  stli_ = NULL;
  return temp;
}
inline ::KuGouPack::StliVo* Extension::mutable_stli() {
  set_has_stli();
  if (stli_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::StliVo>(GetArenaNoVirtual());
    stli_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.stli)
  return stli_;
}
inline void Extension::set_allocated_stli(::KuGouPack::StliVo* stli) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete stli_;
  }
  if (stli) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stli = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stli, submessage_arena);
    }
    set_has_stli();
  } else {
    clear_has_stli();
  }
  stli_ = stli;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.stli)
}

// optional .KuGouPack.VipDataVo vipData = 4;
inline bool Extension::has_vipdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Extension::set_has_vipdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Extension::clear_has_vipdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Extension::clear_vipdata() {
  if (vipdata_ != NULL) vipdata_->Clear();
  clear_has_vipdata();
}
inline const ::KuGouPack::VipDataVo& Extension::_internal_vipdata() const {
  return *vipdata_;
}
inline const ::KuGouPack::VipDataVo& Extension::vipdata() const {
  const ::KuGouPack::VipDataVo* p = vipdata_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.vipData)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::VipDataVo*>(
      &::KuGouPack::_VipDataVo_default_instance_);
}
inline ::KuGouPack::VipDataVo* Extension::release_vipdata() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.vipData)
  clear_has_vipdata();
  ::KuGouPack::VipDataVo* temp = vipdata_;
  vipdata_ = NULL;
  return temp;
}
inline ::KuGouPack::VipDataVo* Extension::mutable_vipdata() {
  set_has_vipdata();
  if (vipdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::VipDataVo>(GetArenaNoVirtual());
    vipdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.vipData)
  return vipdata_;
}
inline void Extension::set_allocated_vipdata(::KuGouPack::VipDataVo* vipdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vipdata_;
  }
  if (vipdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vipdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vipdata, submessage_arena);
    }
    set_has_vipdata();
  } else {
    clear_has_vipdata();
  }
  vipdata_ = vipdata;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.vipData)
}

// optional .KuGouPack.UsingMountVo usingMount = 5;
inline bool Extension::has_usingmount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Extension::set_has_usingmount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Extension::clear_has_usingmount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Extension::clear_usingmount() {
  if (usingmount_ != NULL) usingmount_->Clear();
  clear_has_usingmount();
}
inline const ::KuGouPack::UsingMountVo& Extension::_internal_usingmount() const {
  return *usingmount_;
}
inline const ::KuGouPack::UsingMountVo& Extension::usingmount() const {
  const ::KuGouPack::UsingMountVo* p = usingmount_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.usingMount)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::UsingMountVo*>(
      &::KuGouPack::_UsingMountVo_default_instance_);
}
inline ::KuGouPack::UsingMountVo* Extension::release_usingmount() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.usingMount)
  clear_has_usingmount();
  ::KuGouPack::UsingMountVo* temp = usingmount_;
  usingmount_ = NULL;
  return temp;
}
inline ::KuGouPack::UsingMountVo* Extension::mutable_usingmount() {
  set_has_usingmount();
  if (usingmount_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::UsingMountVo>(GetArenaNoVirtual());
    usingmount_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.usingMount)
  return usingmount_;
}
inline void Extension::set_allocated_usingmount(::KuGouPack::UsingMountVo* usingmount) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete usingmount_;
  }
  if (usingmount) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      usingmount = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, usingmount, submessage_arena);
    }
    set_has_usingmount();
  } else {
    clear_has_usingmount();
  }
  usingmount_ = usingmount;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.usingMount)
}

// optional .KuGouPack.UsingMedalVo usingMedal = 6;
inline bool Extension::has_usingmedal() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Extension::set_has_usingmedal() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Extension::clear_has_usingmedal() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Extension::clear_usingmedal() {
  if (usingmedal_ != NULL) usingmedal_->Clear();
  clear_has_usingmedal();
}
inline const ::KuGouPack::UsingMedalVo& Extension::_internal_usingmedal() const {
  return *usingmedal_;
}
inline const ::KuGouPack::UsingMedalVo& Extension::usingmedal() const {
  const ::KuGouPack::UsingMedalVo* p = usingmedal_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.usingMedal)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::UsingMedalVo*>(
      &::KuGouPack::_UsingMedalVo_default_instance_);
}
inline ::KuGouPack::UsingMedalVo* Extension::release_usingmedal() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.usingMedal)
  clear_has_usingmedal();
  ::KuGouPack::UsingMedalVo* temp = usingmedal_;
  usingmedal_ = NULL;
  return temp;
}
inline ::KuGouPack::UsingMedalVo* Extension::mutable_usingmedal() {
  set_has_usingmedal();
  if (usingmedal_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::UsingMedalVo>(GetArenaNoVirtual());
    usingmedal_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.usingMedal)
  return usingmedal_;
}
inline void Extension::set_allocated_usingmedal(::KuGouPack::UsingMedalVo* usingmedal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete usingmedal_;
  }
  if (usingmedal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      usingmedal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, usingmedal, submessage_arena);
    }
    set_has_usingmedal();
  } else {
    clear_has_usingmedal();
  }
  usingmedal_ = usingmedal;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.usingMedal)
}

// optional .KuGouPack.HonorMedalVo honorMedal = 7;
inline bool Extension::has_honormedal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Extension::set_has_honormedal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Extension::clear_has_honormedal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Extension::clear_honormedal() {
  if (honormedal_ != NULL) honormedal_->Clear();
  clear_has_honormedal();
}
inline const ::KuGouPack::HonorMedalVo& Extension::_internal_honormedal() const {
  return *honormedal_;
}
inline const ::KuGouPack::HonorMedalVo& Extension::honormedal() const {
  const ::KuGouPack::HonorMedalVo* p = honormedal_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.honorMedal)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::HonorMedalVo*>(
      &::KuGouPack::_HonorMedalVo_default_instance_);
}
inline ::KuGouPack::HonorMedalVo* Extension::release_honormedal() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.honorMedal)
  clear_has_honormedal();
  ::KuGouPack::HonorMedalVo* temp = honormedal_;
  honormedal_ = NULL;
  return temp;
}
inline ::KuGouPack::HonorMedalVo* Extension::mutable_honormedal() {
  set_has_honormedal();
  if (honormedal_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::HonorMedalVo>(GetArenaNoVirtual());
    honormedal_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.honorMedal)
  return honormedal_;
}
inline void Extension::set_allocated_honormedal(::KuGouPack::HonorMedalVo* honormedal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete honormedal_;
  }
  if (honormedal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      honormedal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, honormedal, submessage_arena);
    }
    set_has_honormedal();
  } else {
    clear_has_honormedal();
  }
  honormedal_ = honormedal;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.honorMedal)
}

// optional .KuGouPack.UserGuardVo userGuard = 8;
inline bool Extension::has_userguard() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Extension::set_has_userguard() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Extension::clear_has_userguard() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Extension::clear_userguard() {
  if (userguard_ != NULL) userguard_->Clear();
  clear_has_userguard();
}
inline const ::KuGouPack::UserGuardVo& Extension::_internal_userguard() const {
  return *userguard_;
}
inline const ::KuGouPack::UserGuardVo& Extension::userguard() const {
  const ::KuGouPack::UserGuardVo* p = userguard_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.userGuard)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::UserGuardVo*>(
      &::KuGouPack::_UserGuardVo_default_instance_);
}
inline ::KuGouPack::UserGuardVo* Extension::release_userguard() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.userGuard)
  clear_has_userguard();
  ::KuGouPack::UserGuardVo* temp = userguard_;
  userguard_ = NULL;
  return temp;
}
inline ::KuGouPack::UserGuardVo* Extension::mutable_userguard() {
  set_has_userguard();
  if (userguard_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::UserGuardVo>(GetArenaNoVirtual());
    userguard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.userGuard)
  return userguard_;
}
inline void Extension::set_allocated_userguard(::KuGouPack::UserGuardVo* userguard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete userguard_;
  }
  if (userguard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      userguard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userguard, submessage_arena);
    }
    set_has_userguard();
  } else {
    clear_has_userguard();
  }
  userguard_ = userguard;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.userGuard)
}

// optional .KuGouPack.LittleGuardVo littleGuard = 9;
inline bool Extension::has_littleguard() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Extension::set_has_littleguard() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Extension::clear_has_littleguard() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Extension::clear_littleguard() {
  if (littleguard_ != NULL) littleguard_->Clear();
  clear_has_littleguard();
}
inline const ::KuGouPack::LittleGuardVo& Extension::_internal_littleguard() const {
  return *littleguard_;
}
inline const ::KuGouPack::LittleGuardVo& Extension::littleguard() const {
  const ::KuGouPack::LittleGuardVo* p = littleguard_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.littleGuard)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::LittleGuardVo*>(
      &::KuGouPack::_LittleGuardVo_default_instance_);
}
inline ::KuGouPack::LittleGuardVo* Extension::release_littleguard() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.littleGuard)
  clear_has_littleguard();
  ::KuGouPack::LittleGuardVo* temp = littleguard_;
  littleguard_ = NULL;
  return temp;
}
inline ::KuGouPack::LittleGuardVo* Extension::mutable_littleguard() {
  set_has_littleguard();
  if (littleguard_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::LittleGuardVo>(GetArenaNoVirtual());
    littleguard_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.littleGuard)
  return littleguard_;
}
inline void Extension::set_allocated_littleguard(::KuGouPack::LittleGuardVo* littleguard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete littleguard_;
  }
  if (littleguard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      littleguard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, littleguard, submessage_arena);
    }
    set_has_littleguard();
  } else {
    clear_has_littleguard();
  }
  littleguard_ = littleguard;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.littleGuard)
}

// optional .KuGouPack.WoreUserPlateVo defaultPlate = 10;
inline bool Extension::has_defaultplate() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Extension::set_has_defaultplate() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Extension::clear_has_defaultplate() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Extension::clear_defaultplate() {
  if (defaultplate_ != NULL) defaultplate_->Clear();
  clear_has_defaultplate();
}
inline const ::KuGouPack::WoreUserPlateVo& Extension::_internal_defaultplate() const {
  return *defaultplate_;
}
inline const ::KuGouPack::WoreUserPlateVo& Extension::defaultplate() const {
  const ::KuGouPack::WoreUserPlateVo* p = defaultplate_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.defaultPlate)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::WoreUserPlateVo*>(
      &::KuGouPack::_WoreUserPlateVo_default_instance_);
}
inline ::KuGouPack::WoreUserPlateVo* Extension::release_defaultplate() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.defaultPlate)
  clear_has_defaultplate();
  ::KuGouPack::WoreUserPlateVo* temp = defaultplate_;
  defaultplate_ = NULL;
  return temp;
}
inline ::KuGouPack::WoreUserPlateVo* Extension::mutable_defaultplate() {
  set_has_defaultplate();
  if (defaultplate_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::WoreUserPlateVo>(GetArenaNoVirtual());
    defaultplate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.defaultPlate)
  return defaultplate_;
}
inline void Extension::set_allocated_defaultplate(::KuGouPack::WoreUserPlateVo* defaultplate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete defaultplate_;
  }
  if (defaultplate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      defaultplate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, defaultplate, submessage_arena);
    }
    set_has_defaultplate();
  } else {
    clear_has_defaultplate();
  }
  defaultplate_ = defaultplate;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.defaultPlate)
}

// optional string plateName = 11;
inline bool Extension::has_platename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Extension::set_has_platename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Extension::clear_has_platename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Extension::clear_platename() {
  platename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platename();
}
inline const ::std::string& Extension::platename() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.plateName)
  return platename_.GetNoArena();
}
inline void Extension::set_platename(const ::std::string& value) {
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.plateName)
}
#if LANG_CXX11
inline void Extension::set_platename(::std::string&& value) {
  set_has_platename();
  platename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Extension.plateName)
}
#endif
inline void Extension::set_platename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Extension.plateName)
}
inline void Extension::set_platename(const char* value, size_t size) {
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Extension.plateName)
}
inline ::std::string* Extension::mutable_platename() {
  set_has_platename();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.plateName)
  return platename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extension::release_platename() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.plateName)
  if (!has_platename()) {
    return NULL;
  }
  clear_has_platename();
  return platename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extension::set_allocated_platename(::std::string* platename) {
  if (platename != NULL) {
    set_has_platename();
  } else {
    clear_has_platename();
  }
  platename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platename);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.plateName)
}

// optional int32 starCard = 12;
inline bool Extension::has_starcard() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Extension::set_has_starcard() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Extension::clear_has_starcard() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Extension::clear_starcard() {
  starcard_ = 0;
  clear_has_starcard();
}
inline ::google::protobuf::int32 Extension::starcard() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.starCard)
  return starcard_;
}
inline void Extension::set_starcard(::google::protobuf::int32 value) {
  set_has_starcard();
  starcard_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.starCard)
}

// optional int32 external = 13;
inline bool Extension::has_external() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Extension::set_has_external() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Extension::clear_has_external() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Extension::clear_external() {
  external_ = 0;
  clear_has_external();
}
inline ::google::protobuf::int32 Extension::external() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.external)
  return external_;
}
inline void Extension::set_external(::google::protobuf::int32 value) {
  set_has_external();
  external_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.external)
}

// optional string exMemo = 14;
inline bool Extension::has_exmemo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Extension::set_has_exmemo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Extension::clear_has_exmemo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Extension::clear_exmemo() {
  exmemo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exmemo();
}
inline const ::std::string& Extension::exmemo() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.exMemo)
  return exmemo_.GetNoArena();
}
inline void Extension::set_exmemo(const ::std::string& value) {
  set_has_exmemo();
  exmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.exMemo)
}
#if LANG_CXX11
inline void Extension::set_exmemo(::std::string&& value) {
  set_has_exmemo();
  exmemo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Extension.exMemo)
}
#endif
inline void Extension::set_exmemo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_exmemo();
  exmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Extension.exMemo)
}
inline void Extension::set_exmemo(const char* value, size_t size) {
  set_has_exmemo();
  exmemo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Extension.exMemo)
}
inline ::std::string* Extension::mutable_exmemo() {
  set_has_exmemo();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.exMemo)
  return exmemo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extension::release_exmemo() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.exMemo)
  if (!has_exmemo()) {
    return NULL;
  }
  clear_has_exmemo();
  return exmemo_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extension::set_allocated_exmemo(::std::string* exmemo) {
  if (exmemo != NULL) {
    set_has_exmemo();
  } else {
    clear_has_exmemo();
  }
  exmemo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exmemo);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.exMemo)
}

// optional bool p = 15;
inline bool Extension::has_p() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Extension::set_has_p() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Extension::clear_has_p() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Extension::clear_p() {
  p_ = false;
  clear_has_p();
}
inline bool Extension::p() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.p)
  return p_;
}
inline void Extension::set_p(bool value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.p)
}

// optional int32 worship = 16;
inline bool Extension::has_worship() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Extension::set_has_worship() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Extension::clear_has_worship() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Extension::clear_worship() {
  worship_ = 0;
  clear_has_worship();
}
inline ::google::protobuf::int32 Extension::worship() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.worship)
  return worship_;
}
inline void Extension::set_worship(::google::protobuf::int32 value) {
  set_has_worship();
  worship_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.worship)
}

// optional .KuGouPack.BubbleVo bubble = 17;
inline bool Extension::has_bubble() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Extension::set_has_bubble() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Extension::clear_has_bubble() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Extension::clear_bubble() {
  if (bubble_ != NULL) bubble_->Clear();
  clear_has_bubble();
}
inline const ::KuGouPack::BubbleVo& Extension::_internal_bubble() const {
  return *bubble_;
}
inline const ::KuGouPack::BubbleVo& Extension::bubble() const {
  const ::KuGouPack::BubbleVo* p = bubble_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.bubble)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::BubbleVo*>(
      &::KuGouPack::_BubbleVo_default_instance_);
}
inline ::KuGouPack::BubbleVo* Extension::release_bubble() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.bubble)
  clear_has_bubble();
  ::KuGouPack::BubbleVo* temp = bubble_;
  bubble_ = NULL;
  return temp;
}
inline ::KuGouPack::BubbleVo* Extension::mutable_bubble() {
  set_has_bubble();
  if (bubble_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::BubbleVo>(GetArenaNoVirtual());
    bubble_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.bubble)
  return bubble_;
}
inline void Extension::set_allocated_bubble(::KuGouPack::BubbleVo* bubble) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bubble_;
  }
  if (bubble) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bubble = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bubble, submessage_arena);
    }
    set_has_bubble();
  } else {
    clear_has_bubble();
  }
  bubble_ = bubble;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.bubble)
}

// optional int32 z = 18;
inline bool Extension::has_z() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Extension::set_has_z() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Extension::clear_has_z() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Extension::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Extension::z() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.z)
  return z_;
}
inline void Extension::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.z)
}

// optional int32 isGoldFans = 19;
inline bool Extension::has_isgoldfans() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Extension::set_has_isgoldfans() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Extension::clear_has_isgoldfans() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Extension::clear_isgoldfans() {
  isgoldfans_ = 0;
  clear_has_isgoldfans();
}
inline ::google::protobuf::int32 Extension::isgoldfans() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.isGoldFans)
  return isgoldfans_;
}
inline void Extension::set_isgoldfans(::google::protobuf::int32 value) {
  set_has_isgoldfans();
  isgoldfans_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.isGoldFans)
}

// optional string token = 20;
inline bool Extension::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Extension::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Extension::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Extension::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& Extension::token() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.token)
  return token_.GetNoArena();
}
inline void Extension::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.token)
}
#if LANG_CXX11
inline void Extension::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Extension.token)
}
#endif
inline void Extension::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Extension.token)
}
inline void Extension::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Extension.token)
}
inline ::std::string* Extension::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extension::release_token() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.token)
  if (!has_token()) {
    return NULL;
  }
  clear_has_token();
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extension::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.token)
}

// optional int64 kugouId = 21;
inline bool Extension::has_kugouid() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Extension::set_has_kugouid() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Extension::clear_has_kugouid() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Extension::clear_kugouid() {
  kugouid_ = GOOGLE_LONGLONG(0);
  clear_has_kugouid();
}
inline ::google::protobuf::int64 Extension::kugouid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.kugouId)
  return kugouid_;
}
inline void Extension::set_kugouid(::google::protobuf::int64 value) {
  set_has_kugouid();
  kugouid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.kugouId)
}

// optional .KuGouPack.StarFollowerVo starFollower = 22;
inline bool Extension::has_starfollower() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Extension::set_has_starfollower() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Extension::clear_has_starfollower() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Extension::clear_starfollower() {
  if (starfollower_ != NULL) starfollower_->Clear();
  clear_has_starfollower();
}
inline const ::KuGouPack::StarFollowerVo& Extension::_internal_starfollower() const {
  return *starfollower_;
}
inline const ::KuGouPack::StarFollowerVo& Extension::starfollower() const {
  const ::KuGouPack::StarFollowerVo* p = starfollower_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.starFollower)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::StarFollowerVo*>(
      &::KuGouPack::_StarFollowerVo_default_instance_);
}
inline ::KuGouPack::StarFollowerVo* Extension::release_starfollower() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.starFollower)
  clear_has_starfollower();
  ::KuGouPack::StarFollowerVo* temp = starfollower_;
  starfollower_ = NULL;
  return temp;
}
inline ::KuGouPack::StarFollowerVo* Extension::mutable_starfollower() {
  set_has_starfollower();
  if (starfollower_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::StarFollowerVo>(GetArenaNoVirtual());
    starfollower_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.starFollower)
  return starfollower_;
}
inline void Extension::set_allocated_starfollower(::KuGouPack::StarFollowerVo* starfollower) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete starfollower_;
  }
  if (starfollower) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      starfollower = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, starfollower, submessage_arena);
    }
    set_has_starfollower();
  } else {
    clear_has_starfollower();
  }
  starfollower_ = starfollower;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.starFollower)
}

// optional int32 v_tme = 23;
inline bool Extension::has_v_tme() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Extension::set_has_v_tme() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Extension::clear_has_v_tme() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Extension::clear_v_tme() {
  v_tme_ = 0;
  clear_has_v_tme();
}
inline ::google::protobuf::int32 Extension::v_tme() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.v_tme)
  return v_tme_;
}
inline void Extension::set_v_tme(::google::protobuf::int32 value) {
  set_has_v_tme();
  v_tme_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.v_tme)
}

// optional int32 v_kg = 24;
inline bool Extension::has_v_kg() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Extension::set_has_v_kg() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Extension::clear_has_v_kg() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Extension::clear_v_kg() {
  v_kg_ = 0;
  clear_has_v_kg();
}
inline ::google::protobuf::int32 Extension::v_kg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.v_kg)
  return v_kg_;
}
inline void Extension::set_v_kg(::google::protobuf::int32 value) {
  set_has_v_kg();
  v_kg_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.v_kg)
}

// optional string ar = 25;
inline bool Extension::has_ar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Extension::set_has_ar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Extension::clear_has_ar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Extension::clear_ar() {
  ar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ar();
}
inline const ::std::string& Extension::ar() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.ar)
  return ar_.GetNoArena();
}
inline void Extension::set_ar(const ::std::string& value) {
  set_has_ar();
  ar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.ar)
}
#if LANG_CXX11
inline void Extension::set_ar(::std::string&& value) {
  set_has_ar();
  ar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.Extension.ar)
}
#endif
inline void Extension::set_ar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ar();
  ar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.Extension.ar)
}
inline void Extension::set_ar(const char* value, size_t size) {
  set_has_ar();
  ar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.Extension.ar)
}
inline ::std::string* Extension::mutable_ar() {
  set_has_ar();
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.ar)
  return ar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extension::release_ar() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.ar)
  if (!has_ar()) {
    return NULL;
  }
  clear_has_ar();
  return ar_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extension::set_allocated_ar(::std::string* ar) {
  if (ar != NULL) {
    set_has_ar();
  } else {
    clear_has_ar();
  }
  ar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ar);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.ar)
}

// optional int32 isAndroid = 26;
inline bool Extension::has_isandroid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Extension::set_has_isandroid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Extension::clear_has_isandroid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Extension::clear_isandroid() {
  isandroid_ = 0;
  clear_has_isandroid();
}
inline ::google::protobuf::int32 Extension::isandroid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.isAndroid)
  return isandroid_;
}
inline void Extension::set_isandroid(::google::protobuf::int32 value) {
  set_has_isandroid();
  isandroid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.isAndroid)
}

// optional int32 clientPlat = 27;
inline bool Extension::has_clientplat() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Extension::set_has_clientplat() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Extension::clear_has_clientplat() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Extension::clear_clientplat() {
  clientplat_ = 0;
  clear_has_clientplat();
}
inline ::google::protobuf::int32 Extension::clientplat() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.clientPlat)
  return clientplat_;
}
inline void Extension::set_clientplat(::google::protobuf::int32 value) {
  set_has_clientplat();
  clientplat_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.clientPlat)
}

// optional int32 blackCard = 28;
inline bool Extension::has_blackcard() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Extension::set_has_blackcard() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Extension::clear_has_blackcard() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Extension::clear_blackcard() {
  blackcard_ = 0;
  clear_has_blackcard();
}
inline ::google::protobuf::int32 Extension::blackcard() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.blackCard)
  return blackcard_;
}
inline void Extension::set_blackcard(::google::protobuf::int32 value) {
  set_has_blackcard();
  blackcard_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.blackCard)
}

// optional int32 v_l = 29;
inline bool Extension::has_v_l() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Extension::set_has_v_l() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Extension::clear_has_v_l() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Extension::clear_v_l() {
  v_l_ = 0;
  clear_has_v_l();
}
inline ::google::protobuf::int32 Extension::v_l() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.v_l)
  return v_l_;
}
inline void Extension::set_v_l(::google::protobuf::int32 value) {
  set_has_v_l();
  v_l_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.v_l)
}

// optional .KuGouPack.BossGroupVo bossGroup = 30;
inline bool Extension::has_bossgroup() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Extension::set_has_bossgroup() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Extension::clear_has_bossgroup() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Extension::clear_bossgroup() {
  if (bossgroup_ != NULL) bossgroup_->Clear();
  clear_has_bossgroup();
}
inline const ::KuGouPack::BossGroupVo& Extension::_internal_bossgroup() const {
  return *bossgroup_;
}
inline const ::KuGouPack::BossGroupVo& Extension::bossgroup() const {
  const ::KuGouPack::BossGroupVo* p = bossgroup_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.bossGroup)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::BossGroupVo*>(
      &::KuGouPack::_BossGroupVo_default_instance_);
}
inline ::KuGouPack::BossGroupVo* Extension::release_bossgroup() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.bossGroup)
  clear_has_bossgroup();
  ::KuGouPack::BossGroupVo* temp = bossgroup_;
  bossgroup_ = NULL;
  return temp;
}
inline ::KuGouPack::BossGroupVo* Extension::mutable_bossgroup() {
  set_has_bossgroup();
  if (bossgroup_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::BossGroupVo>(GetArenaNoVirtual());
    bossgroup_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.bossGroup)
  return bossgroup_;
}
inline void Extension::set_allocated_bossgroup(::KuGouPack::BossGroupVo* bossgroup) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bossgroup_;
  }
  if (bossgroup) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bossgroup = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bossgroup, submessage_arena);
    }
    set_has_bossgroup();
  } else {
    clear_has_bossgroup();
  }
  bossgroup_ = bossgroup;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.bossGroup)
}

// optional .KuGouPack.CeremonyVo ceremony = 31;
inline bool Extension::has_ceremony() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Extension::set_has_ceremony() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Extension::clear_has_ceremony() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Extension::clear_ceremony() {
  if (ceremony_ != NULL) ceremony_->Clear();
  clear_has_ceremony();
}
inline const ::KuGouPack::CeremonyVo& Extension::_internal_ceremony() const {
  return *ceremony_;
}
inline const ::KuGouPack::CeremonyVo& Extension::ceremony() const {
  const ::KuGouPack::CeremonyVo* p = ceremony_;
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.ceremony)
  return p != NULL ? *p : *reinterpret_cast<const ::KuGouPack::CeremonyVo*>(
      &::KuGouPack::_CeremonyVo_default_instance_);
}
inline ::KuGouPack::CeremonyVo* Extension::release_ceremony() {
  // @@protoc_insertion_point(field_release:KuGouPack.Extension.ceremony)
  clear_has_ceremony();
  ::KuGouPack::CeremonyVo* temp = ceremony_;
  ceremony_ = NULL;
  return temp;
}
inline ::KuGouPack::CeremonyVo* Extension::mutable_ceremony() {
  set_has_ceremony();
  if (ceremony_ == NULL) {
    auto* p = CreateMaybeMessage<::KuGouPack::CeremonyVo>(GetArenaNoVirtual());
    ceremony_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KuGouPack.Extension.ceremony)
  return ceremony_;
}
inline void Extension::set_allocated_ceremony(::KuGouPack::CeremonyVo* ceremony) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ceremony_;
  }
  if (ceremony) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ceremony = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ceremony, submessage_arena);
    }
    set_has_ceremony();
  } else {
    clear_has_ceremony();
  }
  ceremony_ = ceremony;
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.Extension.ceremony)
}

// optional int32 referer = 32;
inline bool Extension::has_referer() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Extension::set_has_referer() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Extension::clear_has_referer() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Extension::clear_referer() {
  referer_ = 0;
  clear_has_referer();
}
inline ::google::protobuf::int32 Extension::referer() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.referer)
  return referer_;
}
inline void Extension::set_referer(::google::protobuf::int32 value) {
  set_has_referer();
  referer_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.referer)
}

// optional int32 isNew = 33;
inline bool Extension::has_isnew() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Extension::set_has_isnew() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Extension::clear_has_isnew() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Extension::clear_isnew() {
  isnew_ = 0;
  clear_has_isnew();
}
inline ::google::protobuf::int32 Extension::isnew() const {
  // @@protoc_insertion_point(field_get:KuGouPack.Extension.isNew)
  return isnew_;
}
inline void Extension::set_isnew(::google::protobuf::int32 value) {
  set_has_isnew();
  isnew_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.Extension.isNew)
}

// -------------------------------------------------------------------

// StliVo

// optional int32 st = 1;
inline bool StliVo::has_st() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StliVo::set_has_st() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StliVo::clear_has_st() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StliVo::clear_st() {
  st_ = 0;
  clear_has_st();
}
inline ::google::protobuf::int32 StliVo::st() const {
  // @@protoc_insertion_point(field_get:KuGouPack.StliVo.st)
  return st_;
}
inline void StliVo::set_st(::google::protobuf::int32 value) {
  set_has_st();
  st_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.StliVo.st)
}

// optional int32 sl = 2;
inline bool StliVo::has_sl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StliVo::set_has_sl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StliVo::clear_has_sl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StliVo::clear_sl() {
  sl_ = 0;
  clear_has_sl();
}
inline ::google::protobuf::int32 StliVo::sl() const {
  // @@protoc_insertion_point(field_get:KuGouPack.StliVo.sl)
  return sl_;
}
inline void StliVo::set_sl(::google::protobuf::int32 value) {
  set_has_sl();
  sl_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.StliVo.sl)
}

// optional int32 isAdmin = 3;
inline bool StliVo::has_isadmin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StliVo::set_has_isadmin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StliVo::clear_has_isadmin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StliVo::clear_isadmin() {
  isadmin_ = 0;
  clear_has_isadmin();
}
inline ::google::protobuf::int32 StliVo::isadmin() const {
  // @@protoc_insertion_point(field_get:KuGouPack.StliVo.isAdmin)
  return isadmin_;
}
inline void StliVo::set_isadmin(::google::protobuf::int32 value) {
  set_has_isadmin();
  isadmin_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.StliVo.isAdmin)
}

// -------------------------------------------------------------------

// VipDataVo

// optional int32 v = 1;
inline bool VipDataVo::has_v() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipDataVo::set_has_v() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipDataVo::clear_has_v() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipDataVo::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 VipDataVo::v() const {
  // @@protoc_insertion_point(field_get:KuGouPack.VipDataVo.v)
  return v_;
}
inline void VipDataVo::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.VipDataVo.v)
}

// optional string c = 2;
inline bool VipDataVo::has_c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipDataVo::set_has_c() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipDataVo::clear_has_c() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipDataVo::clear_c() {
  c_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_c();
}
inline const ::std::string& VipDataVo::c() const {
  // @@protoc_insertion_point(field_get:KuGouPack.VipDataVo.c)
  return c_.GetNoArena();
}
inline void VipDataVo::set_c(const ::std::string& value) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.VipDataVo.c)
}
#if LANG_CXX11
inline void VipDataVo::set_c(::std::string&& value) {
  set_has_c();
  c_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.VipDataVo.c)
}
#endif
inline void VipDataVo::set_c(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.VipDataVo.c)
}
inline void VipDataVo::set_c(const char* value, size_t size) {
  set_has_c();
  c_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.VipDataVo.c)
}
inline ::std::string* VipDataVo::mutable_c() {
  set_has_c();
  // @@protoc_insertion_point(field_mutable:KuGouPack.VipDataVo.c)
  return c_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VipDataVo::release_c() {
  // @@protoc_insertion_point(field_release:KuGouPack.VipDataVo.c)
  if (!has_c()) {
    return NULL;
  }
  clear_has_c();
  return c_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VipDataVo::set_allocated_c(::std::string* c) {
  if (c != NULL) {
    set_has_c();
  } else {
    clear_has_c();
  }
  c_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), c);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.VipDataVo.c)
}

// optional int32 vl = 3;
inline bool VipDataVo::has_vl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipDataVo::set_has_vl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipDataVo::clear_has_vl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipDataVo::clear_vl() {
  vl_ = 0;
  clear_has_vl();
}
inline ::google::protobuf::int32 VipDataVo::vl() const {
  // @@protoc_insertion_point(field_get:KuGouPack.VipDataVo.vl)
  return vl_;
}
inline void VipDataVo::set_vl(::google::protobuf::int32 value) {
  set_has_vl();
  vl_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.VipDataVo.vl)
}

// -------------------------------------------------------------------

// UsingMountVo

// optional string id = 1;
inline bool UsingMountVo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsingMountVo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsingMountVo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsingMountVo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& UsingMountVo::id() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.id)
  return id_.GetNoArena();
}
inline void UsingMountVo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.id)
}
#if LANG_CXX11
inline void UsingMountVo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.id)
}
#endif
inline void UsingMountVo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.id)
}
inline void UsingMountVo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.id)
}
inline ::std::string* UsingMountVo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_id() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.id)
  if (!has_id()) {
    return NULL;
  }
  clear_has_id();
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.id)
}

// optional string n = 2;
inline bool UsingMountVo::has_n() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UsingMountVo::set_has_n() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UsingMountVo::clear_has_n() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UsingMountVo::clear_n() {
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_n();
}
inline const ::std::string& UsingMountVo::n() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.n)
  return n_.GetNoArena();
}
inline void UsingMountVo::set_n(const ::std::string& value) {
  set_has_n();
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.n)
}
#if LANG_CXX11
inline void UsingMountVo::set_n(::std::string&& value) {
  set_has_n();
  n_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.n)
}
#endif
inline void UsingMountVo::set_n(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_n();
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.n)
}
inline void UsingMountVo::set_n(const char* value, size_t size) {
  set_has_n();
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.n)
}
inline ::std::string* UsingMountVo::mutable_n() {
  set_has_n();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.n)
  return n_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_n() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.n)
  if (!has_n()) {
    return NULL;
  }
  clear_has_n();
  return n_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_n(::std::string* n) {
  if (n != NULL) {
    set_has_n();
  } else {
    clear_has_n();
  }
  n_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), n);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.n)
}

// optional string swf = 3;
inline bool UsingMountVo::has_swf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsingMountVo::set_has_swf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UsingMountVo::clear_has_swf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UsingMountVo::clear_swf() {
  swf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_swf();
}
inline const ::std::string& UsingMountVo::swf() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.swf)
  return swf_.GetNoArena();
}
inline void UsingMountVo::set_swf(const ::std::string& value) {
  set_has_swf();
  swf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.swf)
}
#if LANG_CXX11
inline void UsingMountVo::set_swf(::std::string&& value) {
  set_has_swf();
  swf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.swf)
}
#endif
inline void UsingMountVo::set_swf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_swf();
  swf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.swf)
}
inline void UsingMountVo::set_swf(const char* value, size_t size) {
  set_has_swf();
  swf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.swf)
}
inline ::std::string* UsingMountVo::mutable_swf() {
  set_has_swf();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.swf)
  return swf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_swf() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.swf)
  if (!has_swf()) {
    return NULL;
  }
  clear_has_swf();
  return swf_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_swf(::std::string* swf) {
  if (swf != NULL) {
    set_has_swf();
  } else {
    clear_has_swf();
  }
  swf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swf);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.swf)
}

// optional string bi = 4;
inline bool UsingMountVo::has_bi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UsingMountVo::set_has_bi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UsingMountVo::clear_has_bi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UsingMountVo::clear_bi() {
  bi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bi();
}
inline const ::std::string& UsingMountVo::bi() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.bi)
  return bi_.GetNoArena();
}
inline void UsingMountVo::set_bi(const ::std::string& value) {
  set_has_bi();
  bi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.bi)
}
#if LANG_CXX11
inline void UsingMountVo::set_bi(::std::string&& value) {
  set_has_bi();
  bi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.bi)
}
#endif
inline void UsingMountVo::set_bi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bi();
  bi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.bi)
}
inline void UsingMountVo::set_bi(const char* value, size_t size) {
  set_has_bi();
  bi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.bi)
}
inline ::std::string* UsingMountVo::mutable_bi() {
  set_has_bi();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.bi)
  return bi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_bi() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.bi)
  if (!has_bi()) {
    return NULL;
  }
  clear_has_bi();
  return bi_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_bi(::std::string* bi) {
  if (bi != NULL) {
    set_has_bi();
  } else {
    clear_has_bi();
  }
  bi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bi);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.bi)
}

// optional string si = 5;
inline bool UsingMountVo::has_si() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UsingMountVo::set_has_si() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UsingMountVo::clear_has_si() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UsingMountVo::clear_si() {
  si_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_si();
}
inline const ::std::string& UsingMountVo::si() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.si)
  return si_.GetNoArena();
}
inline void UsingMountVo::set_si(const ::std::string& value) {
  set_has_si();
  si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.si)
}
#if LANG_CXX11
inline void UsingMountVo::set_si(::std::string&& value) {
  set_has_si();
  si_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.si)
}
#endif
inline void UsingMountVo::set_si(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_si();
  si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.si)
}
inline void UsingMountVo::set_si(const char* value, size_t size) {
  set_has_si();
  si_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.si)
}
inline ::std::string* UsingMountVo::mutable_si() {
  set_has_si();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.si)
  return si_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_si() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.si)
  if (!has_si()) {
    return NULL;
  }
  clear_has_si();
  return si_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_si(::std::string* si) {
  if (si != NULL) {
    set_has_si();
  } else {
    clear_has_si();
  }
  si_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), si);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.si)
}

// optional string p = 6;
inline bool UsingMountVo::has_p() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UsingMountVo::set_has_p() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UsingMountVo::clear_has_p() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UsingMountVo::clear_p() {
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_p();
}
inline const ::std::string& UsingMountVo::p() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.p)
  return p_.GetNoArena();
}
inline void UsingMountVo::set_p(const ::std::string& value) {
  set_has_p();
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.p)
}
#if LANG_CXX11
inline void UsingMountVo::set_p(::std::string&& value) {
  set_has_p();
  p_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMountVo.p)
}
#endif
inline void UsingMountVo::set_p(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_p();
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMountVo.p)
}
inline void UsingMountVo::set_p(const char* value, size_t size) {
  set_has_p();
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMountVo.p)
}
inline ::std::string* UsingMountVo::mutable_p() {
  set_has_p();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMountVo.p)
  return p_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMountVo::release_p() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMountVo.p)
  if (!has_p()) {
    return NULL;
  }
  clear_has_p();
  return p_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMountVo::set_allocated_p(::std::string* p) {
  if (p != NULL) {
    set_has_p();
  } else {
    clear_has_p();
  }
  p_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMountVo.p)
}

// optional int32 s = 7;
inline bool UsingMountVo::has_s() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UsingMountVo::set_has_s() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UsingMountVo::clear_has_s() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UsingMountVo::clear_s() {
  s_ = 0;
  clear_has_s();
}
inline ::google::protobuf::int32 UsingMountVo::s() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMountVo.s)
  return s_;
}
inline void UsingMountVo::set_s(::google::protobuf::int32 value) {
  set_has_s();
  s_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMountVo.s)
}

// -------------------------------------------------------------------

// UsingMedalVo

// optional string medalList = 1;
inline bool UsingMedalVo::has_medallist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsingMedalVo::set_has_medallist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsingMedalVo::clear_has_medallist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsingMedalVo::clear_medallist() {
  medallist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_medallist();
}
inline const ::std::string& UsingMedalVo::medallist() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UsingMedalVo.medalList)
  return medallist_.GetNoArena();
}
inline void UsingMedalVo::set_medallist(const ::std::string& value) {
  set_has_medallist();
  medallist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UsingMedalVo.medalList)
}
#if LANG_CXX11
inline void UsingMedalVo::set_medallist(::std::string&& value) {
  set_has_medallist();
  medallist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UsingMedalVo.medalList)
}
#endif
inline void UsingMedalVo::set_medallist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_medallist();
  medallist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UsingMedalVo.medalList)
}
inline void UsingMedalVo::set_medallist(const char* value, size_t size) {
  set_has_medallist();
  medallist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UsingMedalVo.medalList)
}
inline ::std::string* UsingMedalVo::mutable_medallist() {
  set_has_medallist();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UsingMedalVo.medalList)
  return medallist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UsingMedalVo::release_medallist() {
  // @@protoc_insertion_point(field_release:KuGouPack.UsingMedalVo.medalList)
  if (!has_medallist()) {
    return NULL;
  }
  clear_has_medallist();
  return medallist_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UsingMedalVo::set_allocated_medallist(::std::string* medallist) {
  if (medallist != NULL) {
    set_has_medallist();
  } else {
    clear_has_medallist();
  }
  medallist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), medallist);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UsingMedalVo.medalList)
}

// -------------------------------------------------------------------

// HonorMedalVo

// optional string honorList = 1;
inline bool HonorMedalVo::has_honorlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HonorMedalVo::set_has_honorlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HonorMedalVo::clear_has_honorlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HonorMedalVo::clear_honorlist() {
  honorlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_honorlist();
}
inline const ::std::string& HonorMedalVo::honorlist() const {
  // @@protoc_insertion_point(field_get:KuGouPack.HonorMedalVo.honorList)
  return honorlist_.GetNoArena();
}
inline void HonorMedalVo::set_honorlist(const ::std::string& value) {
  set_has_honorlist();
  honorlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.HonorMedalVo.honorList)
}
#if LANG_CXX11
inline void HonorMedalVo::set_honorlist(::std::string&& value) {
  set_has_honorlist();
  honorlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.HonorMedalVo.honorList)
}
#endif
inline void HonorMedalVo::set_honorlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_honorlist();
  honorlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.HonorMedalVo.honorList)
}
inline void HonorMedalVo::set_honorlist(const char* value, size_t size) {
  set_has_honorlist();
  honorlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.HonorMedalVo.honorList)
}
inline ::std::string* HonorMedalVo::mutable_honorlist() {
  set_has_honorlist();
  // @@protoc_insertion_point(field_mutable:KuGouPack.HonorMedalVo.honorList)
  return honorlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HonorMedalVo::release_honorlist() {
  // @@protoc_insertion_point(field_release:KuGouPack.HonorMedalVo.honorList)
  if (!has_honorlist()) {
    return NULL;
  }
  clear_has_honorlist();
  return honorlist_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HonorMedalVo::set_allocated_honorlist(::std::string* honorlist) {
  if (honorlist != NULL) {
    set_has_honorlist();
  } else {
    clear_has_honorlist();
  }
  honorlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), honorlist);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.HonorMedalVo.honorList)
}

// -------------------------------------------------------------------

// UserGuardVo

// optional string g = 1;
inline bool UserGuardVo::has_g() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGuardVo::set_has_g() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGuardVo::clear_has_g() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGuardVo::clear_g() {
  g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_g();
}
inline const ::std::string& UserGuardVo::g() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UserGuardVo.g)
  return g_.GetNoArena();
}
inline void UserGuardVo::set_g(const ::std::string& value) {
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UserGuardVo.g)
}
#if LANG_CXX11
inline void UserGuardVo::set_g(::std::string&& value) {
  set_has_g();
  g_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UserGuardVo.g)
}
#endif
inline void UserGuardVo::set_g(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UserGuardVo.g)
}
inline void UserGuardVo::set_g(const char* value, size_t size) {
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UserGuardVo.g)
}
inline ::std::string* UserGuardVo::mutable_g() {
  set_has_g();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UserGuardVo.g)
  return g_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGuardVo::release_g() {
  // @@protoc_insertion_point(field_release:KuGouPack.UserGuardVo.g)
  if (!has_g()) {
    return NULL;
  }
  clear_has_g();
  return g_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGuardVo::set_allocated_g(::std::string* g) {
  if (g != NULL) {
    set_has_g();
  } else {
    clear_has_g();
  }
  g_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UserGuardVo.g)
}

// optional string i = 2;
inline bool UserGuardVo::has_i() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGuardVo::set_has_i() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGuardVo::clear_has_i() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGuardVo::clear_i() {
  i_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_i();
}
inline const ::std::string& UserGuardVo::i() const {
  // @@protoc_insertion_point(field_get:KuGouPack.UserGuardVo.i)
  return i_.GetNoArena();
}
inline void UserGuardVo::set_i(const ::std::string& value) {
  set_has_i();
  i_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.UserGuardVo.i)
}
#if LANG_CXX11
inline void UserGuardVo::set_i(::std::string&& value) {
  set_has_i();
  i_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.UserGuardVo.i)
}
#endif
inline void UserGuardVo::set_i(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_i();
  i_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.UserGuardVo.i)
}
inline void UserGuardVo::set_i(const char* value, size_t size) {
  set_has_i();
  i_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.UserGuardVo.i)
}
inline ::std::string* UserGuardVo::mutable_i() {
  set_has_i();
  // @@protoc_insertion_point(field_mutable:KuGouPack.UserGuardVo.i)
  return i_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGuardVo::release_i() {
  // @@protoc_insertion_point(field_release:KuGouPack.UserGuardVo.i)
  if (!has_i()) {
    return NULL;
  }
  clear_has_i();
  return i_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGuardVo::set_allocated_i(::std::string* i) {
  if (i != NULL) {
    set_has_i();
  } else {
    clear_has_i();
  }
  i_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), i);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.UserGuardVo.i)
}

// -------------------------------------------------------------------

// LittleGuardVo

// optional int32 l = 1;
inline bool LittleGuardVo::has_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LittleGuardVo::set_has_l() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LittleGuardVo::clear_has_l() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LittleGuardVo::clear_l() {
  l_ = 0;
  clear_has_l();
}
inline ::google::protobuf::int32 LittleGuardVo::l() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LittleGuardVo.l)
  return l_;
}
inline void LittleGuardVo::set_l(::google::protobuf::int32 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LittleGuardVo.l)
}

// optional int32 g = 2;
inline bool LittleGuardVo::has_g() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LittleGuardVo::set_has_g() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LittleGuardVo::clear_has_g() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LittleGuardVo::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline ::google::protobuf::int32 LittleGuardVo::g() const {
  // @@protoc_insertion_point(field_get:KuGouPack.LittleGuardVo.g)
  return g_;
}
inline void LittleGuardVo::set_g(::google::protobuf::int32 value) {
  set_has_g();
  g_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.LittleGuardVo.g)
}

// -------------------------------------------------------------------

// WoreUserPlateVo

// optional int64 kid = 1;
inline bool WoreUserPlateVo::has_kid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WoreUserPlateVo::set_has_kid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WoreUserPlateVo::clear_has_kid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WoreUserPlateVo::clear_kid() {
  kid_ = GOOGLE_LONGLONG(0);
  clear_has_kid();
}
inline ::google::protobuf::int64 WoreUserPlateVo::kid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.WoreUserPlateVo.kid)
  return kid_;
}
inline void WoreUserPlateVo::set_kid(::google::protobuf::int64 value) {
  set_has_kid();
  kid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.WoreUserPlateVo.kid)
}

// optional string plateName = 2;
inline bool WoreUserPlateVo::has_platename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WoreUserPlateVo::set_has_platename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WoreUserPlateVo::clear_has_platename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WoreUserPlateVo::clear_platename() {
  platename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platename();
}
inline const ::std::string& WoreUserPlateVo::platename() const {
  // @@protoc_insertion_point(field_get:KuGouPack.WoreUserPlateVo.plateName)
  return platename_.GetNoArena();
}
inline void WoreUserPlateVo::set_platename(const ::std::string& value) {
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.WoreUserPlateVo.plateName)
}
#if LANG_CXX11
inline void WoreUserPlateVo::set_platename(::std::string&& value) {
  set_has_platename();
  platename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.WoreUserPlateVo.plateName)
}
#endif
inline void WoreUserPlateVo::set_platename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.WoreUserPlateVo.plateName)
}
inline void WoreUserPlateVo::set_platename(const char* value, size_t size) {
  set_has_platename();
  platename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.WoreUserPlateVo.plateName)
}
inline ::std::string* WoreUserPlateVo::mutable_platename() {
  set_has_platename();
  // @@protoc_insertion_point(field_mutable:KuGouPack.WoreUserPlateVo.plateName)
  return platename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WoreUserPlateVo::release_platename() {
  // @@protoc_insertion_point(field_release:KuGouPack.WoreUserPlateVo.plateName)
  if (!has_platename()) {
    return NULL;
  }
  clear_has_platename();
  return platename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WoreUserPlateVo::set_allocated_platename(::std::string* platename) {
  if (platename != NULL) {
    set_has_platename();
  } else {
    clear_has_platename();
  }
  platename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platename);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.WoreUserPlateVo.plateName)
}

// optional int32 type = 3;
inline bool WoreUserPlateVo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WoreUserPlateVo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WoreUserPlateVo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WoreUserPlateVo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WoreUserPlateVo::type() const {
  // @@protoc_insertion_point(field_get:KuGouPack.WoreUserPlateVo.type)
  return type_;
}
inline void WoreUserPlateVo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.WoreUserPlateVo.type)
}

// optional int32 l = 4;
inline bool WoreUserPlateVo::has_l() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WoreUserPlateVo::set_has_l() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WoreUserPlateVo::clear_has_l() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WoreUserPlateVo::clear_l() {
  l_ = 0;
  clear_has_l();
}
inline ::google::protobuf::int32 WoreUserPlateVo::l() const {
  // @@protoc_insertion_point(field_get:KuGouPack.WoreUserPlateVo.l)
  return l_;
}
inline void WoreUserPlateVo::set_l(::google::protobuf::int32 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.WoreUserPlateVo.l)
}

// optional int32 i = 5;
inline bool WoreUserPlateVo::has_i() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WoreUserPlateVo::set_has_i() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WoreUserPlateVo::clear_has_i() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WoreUserPlateVo::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 WoreUserPlateVo::i() const {
  // @@protoc_insertion_point(field_get:KuGouPack.WoreUserPlateVo.i)
  return i_;
}
inline void WoreUserPlateVo::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.WoreUserPlateVo.i)
}

// -------------------------------------------------------------------

// BubbleVo

// optional int32 id = 1;
inline bool BubbleVo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BubbleVo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BubbleVo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BubbleVo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BubbleVo::id() const {
  // @@protoc_insertion_point(field_get:KuGouPack.BubbleVo.id)
  return id_;
}
inline void BubbleVo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.BubbleVo.id)
}

// optional string bg = 2;
inline bool BubbleVo::has_bg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BubbleVo::set_has_bg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BubbleVo::clear_has_bg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BubbleVo::clear_bg() {
  bg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bg();
}
inline const ::std::string& BubbleVo::bg() const {
  // @@protoc_insertion_point(field_get:KuGouPack.BubbleVo.bg)
  return bg_.GetNoArena();
}
inline void BubbleVo::set_bg(const ::std::string& value) {
  set_has_bg();
  bg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.BubbleVo.bg)
}
#if LANG_CXX11
inline void BubbleVo::set_bg(::std::string&& value) {
  set_has_bg();
  bg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.BubbleVo.bg)
}
#endif
inline void BubbleVo::set_bg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bg();
  bg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.BubbleVo.bg)
}
inline void BubbleVo::set_bg(const char* value, size_t size) {
  set_has_bg();
  bg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.BubbleVo.bg)
}
inline ::std::string* BubbleVo::mutable_bg() {
  set_has_bg();
  // @@protoc_insertion_point(field_mutable:KuGouPack.BubbleVo.bg)
  return bg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BubbleVo::release_bg() {
  // @@protoc_insertion_point(field_release:KuGouPack.BubbleVo.bg)
  if (!has_bg()) {
    return NULL;
  }
  clear_has_bg();
  return bg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BubbleVo::set_allocated_bg(::std::string* bg) {
  if (bg != NULL) {
    set_has_bg();
  } else {
    clear_has_bg();
  }
  bg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bg);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.BubbleVo.bg)
}

// -------------------------------------------------------------------

// StarFollowerVo

// optional int32 l = 1;
inline bool StarFollowerVo::has_l() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StarFollowerVo::set_has_l() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StarFollowerVo::clear_has_l() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StarFollowerVo::clear_l() {
  l_ = 0;
  clear_has_l();
}
inline ::google::protobuf::int32 StarFollowerVo::l() const {
  // @@protoc_insertion_point(field_get:KuGouPack.StarFollowerVo.l)
  return l_;
}
inline void StarFollowerVo::set_l(::google::protobuf::int32 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.StarFollowerVo.l)
}

// -------------------------------------------------------------------

// BossGroupVo

// optional int64 gid = 1;
inline bool BossGroupVo::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossGroupVo::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossGroupVo::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossGroupVo::clear_gid() {
  gid_ = GOOGLE_LONGLONG(0);
  clear_has_gid();
}
inline ::google::protobuf::int64 BossGroupVo::gid() const {
  // @@protoc_insertion_point(field_get:KuGouPack.BossGroupVo.gid)
  return gid_;
}
inline void BossGroupVo::set_gid(::google::protobuf::int64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.BossGroupVo.gid)
}

// optional string gn = 2;
inline bool BossGroupVo::has_gn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossGroupVo::set_has_gn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossGroupVo::clear_has_gn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossGroupVo::clear_gn() {
  gn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gn();
}
inline const ::std::string& BossGroupVo::gn() const {
  // @@protoc_insertion_point(field_get:KuGouPack.BossGroupVo.gn)
  return gn_.GetNoArena();
}
inline void BossGroupVo::set_gn(const ::std::string& value) {
  set_has_gn();
  gn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KuGouPack.BossGroupVo.gn)
}
#if LANG_CXX11
inline void BossGroupVo::set_gn(::std::string&& value) {
  set_has_gn();
  gn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KuGouPack.BossGroupVo.gn)
}
#endif
inline void BossGroupVo::set_gn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gn();
  gn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KuGouPack.BossGroupVo.gn)
}
inline void BossGroupVo::set_gn(const char* value, size_t size) {
  set_has_gn();
  gn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KuGouPack.BossGroupVo.gn)
}
inline ::std::string* BossGroupVo::mutable_gn() {
  set_has_gn();
  // @@protoc_insertion_point(field_mutable:KuGouPack.BossGroupVo.gn)
  return gn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BossGroupVo::release_gn() {
  // @@protoc_insertion_point(field_release:KuGouPack.BossGroupVo.gn)
  if (!has_gn()) {
    return NULL;
  }
  clear_has_gn();
  return gn_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BossGroupVo::set_allocated_gn(::std::string* gn) {
  if (gn != NULL) {
    set_has_gn();
  } else {
    clear_has_gn();
  }
  gn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gn);
  // @@protoc_insertion_point(field_set_allocated:KuGouPack.BossGroupVo.gn)
}

// optional int32 gr = 3;
inline bool BossGroupVo::has_gr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossGroupVo::set_has_gr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossGroupVo::clear_has_gr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossGroupVo::clear_gr() {
  gr_ = 0;
  clear_has_gr();
}
inline ::google::protobuf::int32 BossGroupVo::gr() const {
  // @@protoc_insertion_point(field_get:KuGouPack.BossGroupVo.gr)
  return gr_;
}
inline void BossGroupVo::set_gr(::google::protobuf::int32 value) {
  set_has_gr();
  gr_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.BossGroupVo.gr)
}

// -------------------------------------------------------------------

// CeremonyVo

// optional int32 pl = 1;
inline bool CeremonyVo::has_pl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CeremonyVo::set_has_pl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CeremonyVo::clear_has_pl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CeremonyVo::clear_pl() {
  pl_ = 0;
  clear_has_pl();
}
inline ::google::protobuf::int32 CeremonyVo::pl() const {
  // @@protoc_insertion_point(field_get:KuGouPack.CeremonyVo.pl)
  return pl_;
}
inline void CeremonyVo::set_pl(::google::protobuf::int32 value) {
  set_has_pl();
  pl_ = value;
  // @@protoc_insertion_point(field_set:KuGouPack.CeremonyVo.pl)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KuGouPack

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KuGouPack::MCompression> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KuGouPack::MCompression>() {
  return ::KuGouPack::MCompression_descriptor();
}
template <> struct is_proto_enum< ::KuGouPack::MCodec> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KuGouPack::MCodec>() {
  return ::KuGouPack::MCodec_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_kugou_2eproto
